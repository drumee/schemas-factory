
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
DROP TABLE IF EXISTS `alias`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `alias` (
  `sn` int(6) NOT NULL AUTO_INCREMENT,
  `id` varbinary(16) NOT NULL,
  `ident` varchar(40) NOT NULL DEFAULT '',
  `vhost` varchar(250) NOT NULL,
  `scope` enum('alternate','user','main') NOT NULL,
  `domain` varchar(128) NOT NULL,
  PRIMARY KEY (`sn`),
  UNIQUE KEY `vhost` (`vhost`),
  UNIQUE KEY `sn` (`sn`),
  KEY `scope` (`scope`),
  KEY `domain` (`domain`),
  KEY `ident` (`ident`),
  KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `alias` WRITE;
/*!40000 ALTER TABLE `alias` DISABLE KEYS */;
/*!40000 ALTER TABLE `alias` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `area`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `area` (
  `id` varchar(16) NOT NULL,
  `owner_id` varchar(16) NOT NULL,
  `level` enum('public','restricted','private','personal','system','dummy') NOT NULL,
  PRIMARY KEY (`id`),
  KEY `level` (`level`),
  KEY `owner_id` (`owner_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `area` WRITE;
/*!40000 ALTER TABLE `area` DISABLE KEYS */;
/*!40000 ALTER TABLE `area` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `asset`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `asset` (
  `name` varchar(64) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `host` varchar(128) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `srcdir` varchar(1000) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  PRIMARY KEY (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `asset` WRITE;
/*!40000 ALTER TABLE `asset` DISABLE KEYS */;
/*!40000 ALTER TABLE `asset` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `authn`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `authn` (
  `token` varchar(64) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `type` varchar(128) CHARACTER SET ascii COLLATE ascii_general_ci GENERATED ALWAYS AS (json_value(`value`,'$.type')) VIRTUAL,
  `id` varchar(128) CHARACTER SET ascii COLLATE ascii_general_ci GENERATED ALWAYS AS (json_value(`value`,'$.id')) VIRTUAL,
  `host` varchar(128) CHARACTER SET ascii COLLATE ascii_general_ci GENERATED ALWAYS AS (json_value(`value`,'$.host')) VIRTUAL,
  `value` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`value`)),
  PRIMARY KEY (`token`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `authn` WRITE;
/*!40000 ALTER TABLE `authn` DISABLE KEYS */;
/*!40000 ALTER TABLE `authn` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `avatar`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `avatar` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `drumate_id` varbinary(16) NOT NULL,
  `location` varchar(1024) DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `drumate_id` (`drumate_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `avatar` WRITE;
/*!40000 ALTER TABLE `avatar` DISABLE KEYS */;
/*!40000 ALTER TABLE `avatar` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `cities`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cities` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `state_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `cities` WRITE;
/*!40000 ALTER TABLE `cities` DISABLE KEYS */;
/*!40000 ALTER TABLE `cities` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `city`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `city` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cc_iso` varchar(2) DEFAULT NULL,
  `name_ascii` varchar(100) DEFAULT NULL,
  `name_utf8` varchar(100) DEFAULT NULL,
  `region` varchar(100) DEFAULT NULL,
  `lat` int(8) DEFAULT NULL,
  `lng` int(8) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `name_ascii` (`name_ascii`),
  FULLTEXT KEY `name_utf8` (`name_utf8`)
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `city` WRITE;
/*!40000 ALTER TABLE `city` DISABLE KEYS */;
/*!40000 ALTER TABLE `city` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `conference`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `conference` (
  `room_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `socket_id` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `hub_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `privilege` tinyint(2) DEFAULT 0,
  `participant_id` varchar(64) GENERATED ALWAYS AS (json_value(`metadata`,'$.participant_id')) VIRTUAL,
  `type` varchar(64) GENERATED ALWAYS AS (ifnull(json_value(`metadata`,'$.type'),'meeting')) VIRTUAL,
  `area` varchar(64) GENERATED ALWAYS AS (ifnull(json_value(`metadata`,'$.area'),'dmz')) VIRTUAL,
  `firstname` varchar(164) GENERATED ALWAYS AS (json_value(`metadata`,'$.firstname')) VIRTUAL,
  `lastname` varchar(164) GENERATED ALWAYS AS (json_value(`metadata`,'$.lastname')) VIRTUAL,
  `uid` varchar(164) GENERATED ALWAYS AS (json_value(`metadata`,'$.uid')) VIRTUAL,
  `permission` tinyint(4) GENERATED ALWAYS AS (ifnull(json_value(`metadata`,'$.permission'),0)) VIRTUAL,
  `role` varchar(64) GENERATED ALWAYS AS (ifnull(json_value(`metadata`,'$.role'),'attendee')) VIRTUAL,
  `audio` tinyint(4) GENERATED ALWAYS AS (ifnull(json_value(`metadata`,'$.audio'),1)) VIRTUAL,
  `video` tinyint(4) GENERATED ALWAYS AS (ifnull(json_value(`metadata`,'$.video'),0)) VIRTUAL,
  `screen` tinyint(4) GENERATED ALWAYS AS (ifnull(json_value(`metadata`,'$.share'),0)) VIRTUAL,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '{}' CHECK (json_valid(`metadata`)),
  UNIQUE KEY `socket_id` (`room_id`,`socket_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `conference` WRITE;
/*!40000 ALTER TABLE `conference` DISABLE KEYS */;
/*!40000 ALTER TABLE `conference` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `conference_host`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `conference_host` (
  `hub_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `conference_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `presenter_id` varchar(64) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `ctime` int(11) unsigned NOT NULL,
  `ttime` int(11) unsigned DEFAULT 0,
  `type` enum('webinar','meeting','connect','screen') DEFAULT 'meeting',
  `status` enum('waiting','started') DEFAULT 'waiting',
  PRIMARY KEY (`conference_id`),
  UNIQUE KEY `hub_id` (`hub_id`,`type`),
  UNIQUE KEY `presenter_id` (`presenter_id`,`hub_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `conference_host` WRITE;
/*!40000 ALTER TABLE `conference_host` DISABLE KEYS */;
/*!40000 ALTER TABLE `conference_host` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `connection`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `connection` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `session_id` varchar(64) DEFAULT NULL,
  `user_id` varchar(16) NOT NULL,
  `login_time` int(11) NOT NULL DEFAULT 0,
  `login_logout` int(11) NOT NULL DEFAULT 0,
  `ip` varchar(64) NOT NULL DEFAULT '',
  `ua` varchar(512) NOT NULL DEFAULT '',
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `session_id` (`session_id`),
  KEY `user_id` (`user_id`),
  KEY `ip` (`ip`),
  KEY `ua` (`ua`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `connection` WRITE;
/*!40000 ALTER TABLE `connection` DISABLE KEYS */;
/*!40000 ALTER TABLE `connection` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `contact_assignment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `contact_assignment` (
  `sys_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `owner_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `entity_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `category` enum('role','member') NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `hub_iduid` (`owner_id`,`entity_id`,`category`),
  KEY `owner_id` (`owner_id`),
  KEY `entity_id` (`entity_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `contact_assignment` WRITE;
/*!40000 ALTER TABLE `contact_assignment` DISABLE KEYS */;
/*!40000 ALTER TABLE `contact_assignment` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `contact_block`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `contact_block` (
  `sys_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `owner_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `contact_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `entity` varchar(255) NOT NULL,
  `uid` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `contact_id` (`owner_id`,`contact_id`),
  KEY `owner_id` (`owner_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `contact_block` WRITE;
/*!40000 ALTER TABLE `contact_block` DISABLE KEYS */;
/*!40000 ALTER TABLE `contact_block` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `contact_sync`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `contact_sync` (
  `sys_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `owner_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `uid` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `status` enum('new','update','delete','ok','') NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `hub_iduid` (`uid`,`owner_id`),
  KEY `owner_id` (`owner_id`),
  KEY `uid` (`uid`),
  KEY `uidstatus` (`uid`,`status`),
  KEY `hub_idstatus` (`owner_id`,`status`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `contact_sync` WRITE;
/*!40000 ALTER TABLE `contact_sync` DISABLE KEYS */;
/*!40000 ALTER TABLE `contact_sync` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `cookie`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `cookie` (
  `id` varchar(64) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `uid` varchar(64) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `ctime` int(11) NOT NULL DEFAULT 0,
  `mtime` int(11) NOT NULL DEFAULT 0,
  `ua` mediumtext NOT NULL DEFAULT '',
  `guest_name` varchar(128) DEFAULT NULL,
  `ttl` int(11) NOT NULL DEFAULT 86400,
  `failed` tinyint(4) unsigned DEFAULT 0,
  `status` varchar(64) DEFAULT NULL,
  `mimicker` varchar(64) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `uid` (`uid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `cookie` WRITE;
/*!40000 ALTER TABLE `cookie` DISABLE KEYS */;
/*!40000 ALTER TABLE `cookie` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `corporate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `corporate` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `owner_id` varchar(16) NOT NULL,
  `entity_id` varchar(16) NOT NULL,
  `expiry_time` int(11) NOT NULL DEFAULT 0,
  `status` enum('active','invite','delete') DEFAULT 'invite',
  `ctime` int(11) DEFAULT NULL,
  `utime` int(11) DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `pkey` (`owner_id`,`entity_id`),
  KEY `entity_id` (`entity_id`),
  KEY `owner_id` (`owner_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `corporate` WRITE;
/*!40000 ALTER TABLE `corporate` DISABLE KEYS */;
/*!40000 ALTER TABLE `corporate` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `countries`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `countries` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `sortname` varchar(3) NOT NULL,
  `name` varchar(150) NOT NULL,
  `phonecode` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `countries` WRITE;
/*!40000 ALTER TABLE `countries` DISABLE KEYS */;
/*!40000 ALTER TABLE `countries` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `country`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `country` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cc_iso` varchar(3) NOT NULL,
  `tld` varchar(3) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `fr` varchar(200) NOT NULL,
  `en` varchar(200) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `tld` (`tld`),
  FULLTEXT KEY `lang` (`fr`,`en`)
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `country` WRITE;
/*!40000 ALTER TABLE `country` DISABLE KEYS */;
/*!40000 ALTER TABLE `country` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `db_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `db_log` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `log` varchar(5000) DEFAULT NULL,
  PRIMARY KEY (`sys_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `db_log` WRITE;
/*!40000 ALTER TABLE `db_log` DISABLE KEYS */;
/*!40000 ALTER TABLE `db_log` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `db_server_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `db_server_log` (
  `sys_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `log` text NOT NULL,
  PRIMARY KEY (`sys_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `db_server_log` WRITE;
/*!40000 ALTER TABLE `db_server_log` DISABLE KEYS */;
/*!40000 ALTER TABLE `db_server_log` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `debug`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `debug` (
  `entity_id` varchar(40) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `debug` WRITE;
/*!40000 ALTER TABLE `debug` DISABLE KEYS */;
/*!40000 ALTER TABLE `debug` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `device_registation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `device_registation` (
  `device_id` varchar(200) NOT NULL,
  `device_type` enum('ios','android','web') NOT NULL,
  `push_token` text NOT NULL,
  `uid` varchar(16) DEFAULT NULL,
  `status` varchar(20) NOT NULL DEFAULT 'active',
  `ctime` int(11) NOT NULL DEFAULT 0,
  `mtime` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`device_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `device_registation` WRITE;
/*!40000 ALTER TABLE `device_registation` DISABLE KEYS */;
/*!40000 ALTER TABLE `device_registation` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `disk_usage`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `disk_usage` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `hub_id` varchar(16) NOT NULL,
  `size` float DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `hub_id` (`hub_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `disk_usage` WRITE;
/*!40000 ALTER TABLE `disk_usage` DISABLE KEYS */;
/*!40000 ALTER TABLE `disk_usage` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `dmz_media`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `dmz_media` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `hub_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `name` varchar(128) DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `dmz_media` WRITE;
/*!40000 ALTER TABLE `dmz_media` DISABLE KEYS */;
/*!40000 ALTER TABLE `dmz_media` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `dmz_token`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `dmz_token` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(80) NOT NULL,
  `hub_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `node_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `guest_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `fingerprint` varchar(128) DEFAULT NULL,
  `is_sync` int(4) DEFAULT 0,
  `notify_at` int(11) DEFAULT 0,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`),
  UNIQUE KEY `recipient` (`hub_id`,`node_id`,`guest_id`),
  KEY `idx_guest_id` (`guest_id`),
  KEY `idx_guest_id_is_sync` (`guest_id`,`is_sync`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `dmz_token` WRITE;
/*!40000 ALTER TABLE `dmz_token` DISABLE KEYS */;
/*!40000 ALTER TABLE `dmz_token` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `dmz_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `dmz_user` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `email` varchar(512) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `name` varchar(80) DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`),
  UNIQUE KEY `email` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `dmz_user` WRITE;
/*!40000 ALTER TABLE `dmz_user` DISABLE KEYS */;
/*!40000 ALTER TABLE `dmz_user` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `dmz_userx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `dmz_userx` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(16) NOT NULL,
  `email` varchar(512) NOT NULL,
  `name` varchar(80) DEFAULT NULL,
  `hub_id` varchar(128) DEFAULT NULL,
  `fingerprint` varchar(128) DEFAULT NULL,
  `token` varchar(128) DEFAULT NULL,
  `nid` varchar(128) DEFAULT NULL,
  `notify_at` int(11) DEFAULT 0,
  `is_sync` int(4) DEFAULT 0,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `email` (`email`,`hub_id`,`id`,`nid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `dmz_userx` WRITE;
/*!40000 ALTER TABLE `dmz_userx` DISABLE KEYS */;
/*!40000 ALTER TABLE `dmz_userx` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `domain`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `domain` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `name` varchar(1000) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`) USING HASH
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `domain` WRITE;
/*!40000 ALTER TABLE `domain` DISABLE KEYS */;
/*!40000 ALTER TABLE `domain` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `domains`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `domains` (
  `id` int(6) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `domains` WRITE;
/*!40000 ALTER TABLE `domains` DISABLE KEYS */;
/*!40000 ALTER TABLE `domains` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `drumate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `drumate` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `username` varchar(80) DEFAULT NULL,
  `domain_id` int(11) unsigned DEFAULT NULL,
  `remit` tinyint(4) NOT NULL DEFAULT 0,
  `fingerprint` varchar(128) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `profile` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`profile`)),
  `firstname` varchar(128) GENERATED ALWAYS AS (json_value(`profile`,'$.firstname')) VIRTUAL,
  `lastname` varchar(128) GENERATED ALWAYS AS (json_value(`profile`,'$.lastname')) VIRTUAL,
  `fullname` varchar(128) GENERATED ALWAYS AS (if(concat(ifnull(`firstname`,''),' ',ifnull(`lastname`,'')) = ' ',json_value(`profile`,'$.email'),concat(ifnull(`firstname`,''),' ',ifnull(`lastname`,'')))) VIRTUAL,
  `avatar` varchar(512) GENERATED ALWAYS AS (json_value(`profile`,'$.avatar')) VIRTUAL,
  `lang` varchar(10) GENERATED ALWAYS AS (json_value(`profile`,'$.lang')) VIRTUAL,
  `allow_search` tinyint(4) GENERATED ALWAYS AS (json_value(json_value(`profile`,'$.privacy'),'$.visibility')) VIRTUAL,
  `quota` varchar(500) GENERATED ALWAYS AS (json_value(`profile`,'$.quota')) VIRTUAL,
  `email` varchar(128) CHARACTER SET ascii COLLATE ascii_general_ci GENERATED ALWAYS AS (json_value(`profile`,'$.email')) VIRTUAL,
  `dmail` varchar(128) GENERATED ALWAYS AS (json_value(`profile`,'$.dmail')) VIRTUAL,
  `otp` varchar(50) GENERATED ALWAYS AS (ifnull(convert(json_unquote(json_extract(`profile`,'$.otp')) using utf8mb4),'0')) VIRTUAL,
  `connected` varchar(50) GENERATED ALWAYS AS (ifnull(convert(json_unquote(json_extract(`profile`,'$.connected')) using utf8mb4),'0')) VIRTUAL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`),
  UNIQUE KEY `email` (`email`),
  UNIQUE KEY `_ident` (`username`,`domain_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `drumate` WRITE;
/*!40000 ALTER TABLE `drumate` DISABLE KEYS */;
/*!40000 ALTER TABLE `drumate` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `entity`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `entity` (
  `id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `ident` varchar(80) DEFAULT NULL,
  `vhost` varchar(512) DEFAULT NULL,
  `db_name` varchar(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `db_host` varchar(255) NOT NULL DEFAULT '',
  `fs_host` varchar(255) NOT NULL DEFAULT '',
  `home_dir` varchar(512) NOT NULL DEFAULT '',
  `home_id` varchar(16) DEFAULT NULL,
  `default_lang` varchar(12) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT 'fr',
  `home_layout` varchar(128) NOT NULL DEFAULT '',
  `homepage` varchar(1600) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '{}' COMMENT 'TO BE REMOVED',
  `overview` mediumtext DEFAULT NULL,
  `layout` mediumtext DEFAULT NULL COMMENT 'TO BE REMOVED',
  `type` enum('organization','hub','drumate','shop','blog','forum','guest','dummy') DEFAULT NULL,
  `area` enum('public','share','limited','restricted','private','personal','system','dummy','dmz-public','dmz-private','dmz','pool','pool/dmz','template') DEFAULT NULL,
  `domain` varchar(255) DEFAULT NULL,
  `area_id` varbinary(16) DEFAULT NULL,
  `dom_id` int(11) unsigned DEFAULT NULL,
  `headline` varchar(255) DEFAULT NULL,
  `status` enum('active','frozen','deleted','archived','system','locked','online','offline','hidden') DEFAULT NULL,
  `accessibility` enum('open','membership','personal') DEFAULT 'open',
  `ctime` int(11) unsigned NOT NULL,
  `mtime` int(11) unsigned NOT NULL,
  `space` float NOT NULL DEFAULT 0,
  `menu` varchar(255) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL COMMENT 'Pointer to the default menu',
  `settings` mediumtext NOT NULL,
  `icon` varchar(500) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT 'https://fonts.drumee.name/static/images/drumee/logo.png',
  `frozen_time` int(11) unsigned DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `db_name` (`db_name`),
  UNIQUE KEY `home_dir` (`home_dir`),
  UNIQUE KEY `home_id` (`home_id`),
  KEY `category` (`type`),
  KEY `ctime` (`ctime`,`mtime`),
  KEY `home_layout` (`home_layout`),
  KEY `status` (`status`),
  KEY `area_id` (`area_id`),
  KEY `default_lang` (`default_lang`),
  KEY `icon` (`icon`),
  FULLTEXT KEY `settings` (`settings`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `entity` WRITE;
/*!40000 ALTER TABLE `entity` DISABLE KEYS */;
/*!40000 ALTER TABLE `entity` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `error`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `error` (
  `code` varchar(40) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `level` enum('request','security','critical','system','bug','user') NOT NULL DEFAULT 'user',
  `http_code` int(11) NOT NULL DEFAULT 500,
  PRIMARY KEY (`code`),
  KEY `level` (`level`,`http_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `error` WRITE;
/*!40000 ALTER TABLE `error` DISABLE KEYS */;
INSERT INTO `error` VALUES ('_range_not_satisfiable','request',416),('_access_denied','user',500),('_access_restricted','user',500),('_account_fault','user',500),('_account_pending','user',500),('_act_error','user',500),('_admin_account','user',500),('_auth_error','user',500),('_bad_home_dir','user',500),('_bad_password','user',500),('_bug_report','user',500),('_data_error','user',500),('_duplicate_entry','user',500),('_email_already_exist','user',500),('_email_invalid','user',500),('_email_not_found','user',500),('_error','user',500),('_file_already_exists','user',500),('_file_not_found','user',500),('_fonder_account','user',500),('_forbiden_action','user',500),('_improper_data','user',500),('_internal_error','user',500),('_invalid_activation_link','user',500),('_invalid_class','user',500),('_invalid_data','user',500),('_invalid_key','user',500),('_invalid_service_name','user',500),('_invitation_failed','user',500),('_is_member','user',500),('_notices','user',500),('_not_yet_member','user',500),('_no_rcpt','user',500),('_no_recipient','user',500),('_operation_failed','user',500),('_page_not_found','user',500),('_password_invalid','user',500),('_password_unconsistent','user',500),('_permission_denied','user',500),('_poll_not_found','user',500),('_private_access','user',500),('_require_login','user',500),('_session_expired','user',500),('_session_rejected','user',500),('_unexpected_error','user',500),('_unimplemented_op','user',500),('_unknown_error','user',500),('_unknown_op','user',500),('_updating_failed','user',500),('_user_already_exist','user',500),('_wrong_pw','user',500);
/*!40000 ALTER TABLE `error` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `extention`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `extention` (
  `key` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `extension` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT 'bin',
  `category` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT 'other',
  `mimetype` varchar(512) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown',
  `capability` varchar(8) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '---',
  `description` varchar(512) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '*',
  KEY `category` (`category`,`mimetype`,`capability`),
  FULLTEXT KEY `description` (`description`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `extention` WRITE;
/*!40000 ALTER TABLE `extention` DISABLE KEYS */;
/*!40000 ALTER TABLE `extention` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `feedback`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `feedback` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `message` text DEFAULT NULL,
  `ctime` int(11) NOT NULL DEFAULT 0,
  `mtime` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `feedback` WRITE;
/*!40000 ALTER TABLE `feedback` DISABLE KEYS */;
/*!40000 ALTER TABLE `feedback` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `filecap`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `filecap` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `extension` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT 'bin',
  `category` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT 'other',
  `mimetype` varchar(512) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown',
  `capability` varchar(8) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL DEFAULT '---',
  `description` varchar(512) NOT NULL DEFAULT '*',
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `extension` (`extension`),
  KEY `category` (`category`,`mimetype`,`capability`),
  FULLTEXT KEY `description` (`description`)
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `filecap` WRITE;
/*!40000 ALTER TABLE `filecap` DISABLE KEYS */;
INSERT INTO `filecap` VALUES (543,'docx','document','application/vnd.openxmlformats-officedocument.wordprocessingml.document','g--','Micro Soft Word'),(544,'xlsx','document','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','g--',''),(545,'htm','web','text/html','-w-','Hypertext Markup Language and a client-side image map'),(546,'html5','web','text/html','-w-','Hypertext Markup Language and a client-side image map'),(550,'js','script','text/javascript','---','javascript'),(552,'ini','settings','plain/text','---','Configs file'),(554,'heif','image','image/heif','rw-','High Efficiency Image File Format'),(557,'tpl','template','text/plain','r','Application template'),(558,'sh','shell','text/x-shellscript','r','Shell script'),(559,'csh','shell','text/x-shellscript','r','Shell script'),(560,'zsh','shell','text/x-shellscript','r','Shell script'),(564,'md','markdown','text/markdown','r','Markdown format'),(567,'json','app-data','application/json','r','Javascript Object Notation'),(568,'config','app-data','text/plain','r','System configuration'),(569,'conf','app-data','text/plain','r','System configuration'),(571,'cjs','script','text/javascript','r','Common Javascipt'),(1619,'7z','zip','application/zip','---','Compressed Files'),(1644,'bz2','zip','application/bz2','---','Compressed Files'),(1656,'cr2','image','image/cr2','rw-','zz'),(1658,'css','stylesheet','text/css','---','Cascaded Style Sheet'),(1666,'dmg','application','application/octet-stream','---','Mac OS binary'),(1670,'doc','document','document/doc','---',''),(1689,'exe','application','application/octet-stream','---','Windows binary'),(1715,'gz','zip','application/x-gzip','---','Compressed Files'),(1716,'gzip','zip','application/x-gzip','---','Compressed Files'),(1720,'heic','image','image/heic','rw-','High Efficiency Image File Format'),(1729,'art','image','image/art','rw-','PFS: 1st Publisher Clip Art'),(1730,'avs','image','image/avs','rw+','AVS X image'),(1731,'bmp','image','image/bmp','rw-','Microsoft Windows bitmap image'),(1732,'braille','image','image/braille','-w-','BRF ASCII Braille format'),(1733,'cals','image','image/cals','r--','Automated Interchange of Technical Information, MIL-STD-1840A'),(1734,'caption','image','image/caption','r--','Image caption'),(1735,'cin','image','image/cin','rw+','Cineon Image File'),(1736,'cip','image','image/cip','-w-','Cisco IP phone image format'),(1737,'clip','image','image/clip','-w+','Image Clip Mask'),(1738,'cmyk','image','image/cmyk','rw+','Raw cyan, magenta, yellow, and black samples'),(1739,'cur','image','image/cur','rw-','Microsoft icon'),(1740,'cut','image','image/cut','r--','DR Halo'),(1741,'dcm','image','image/dcm','r--','Digital Imaging and Communications in Medicine image'),(1742,'dds','image','image/dds','r--','Microsoft DirectDraw Surface'),(1743,'dng','image','image/dng','r--','Sony Alpha Raw Image Format'),(1744,'dot','image','image/dot','---','Graphviz'),(1745,'dps','image','image/dps','---','Display Postscript Interpreter'),(1746,'dpx','image','image/dpx','rw-','SMPTE 268M-2003 (DPX 2.0)'),(1747,'ept','image','image/ept','rw-','Encapsulated PostScript with TIFF preview'),(1748,'fax','image','image/fax','rw+','Group 3 FAX'),(1749,'fits','image','image/fits','rw-','Flexible Image Transport System'),(1750,'fts','image','image/fts','rw-','Flexible Image Transport System'),(1751,'gif','image','image/gif','rw+','CompuServe graphics interchange format'),(1752,'gradient','image','image/gradient','r--','Gradual linear passing from one shade to another'),(1753,'gray','image','image/gray','rw+','Raw gray samples'),(1754,'histogram','image','image/histogram','-w-','Histogram of the image'),(1755,'hrz','image','image/hrz','rw-','Slow Scan TeleVision'),(1756,'html','web','text/html','-w-','Hypertext Markup Language and a client-side image map'),(1757,'icon','image','image/icon','rw+','Microsoft icon'),(1837,'info','image','image/info','-w+','The image format and characteristics'),(1839,'inline','image','image/inline','r--','Base64-encoded inline images'),(1840,'ipl','image','image/ipl','rw+','IPL Image Sequence'),(1844,'iso','other','application/iso-image','---','ISO image'),(1847,'jfif','image','image/jpeg','rw-','JPEG File Interchange Format'),(1848,'jp2','image','image/jp2','rw-','JPEG-2000 File Format Syntax'),(1849,'jpc','image','image/jpc','rw-','JPEG-2000 Code Stream Syntax'),(1850,'jpeg','image','image/jpeg','rw-','Joint Photographic Experts Group JFIF format (62)'),(1851,'jpg','image','image/jpg','rw-',''),(1852,'jpx','image','image/jpx','rw-','JPEG-2000 File Format Syntax'),(1854,'label','image','image/label','r--','Image label'),(1857,'letc','letc','application/json','--','Letc data for Drumee rendering engine'),(1860,'log','text','plain/text','---','log files'),(1862,'m3u8','plylist','application/x-mpegURL','---','Apple video index'),(1865,'map','image','image/map','rw-','Colormap intensities and indices'),(1866,'mat','image','image/mat','rw+','MATLAB image format'),(1868,'matte','image','image/matte','-w+','MATTE format'),(1872,'miff','image','image/miff','rw+','Magick Image File Format'),(1879,'mono','image','image/mono','rw-','Raw bi-level bitmap'),(1882,'mp3','audio','audio/mp3','---',''),(1884,'mpc','image','image/mpc','rw+','Magick Persistent Cache image format'),(1893,'msl','image','image/msl','rw+','Magick Scripting Language'),(1897,'mvg','image','image/mvg','rw-','Magick Vector Graphics'),(1904,'null','image','image/null','rw-','Constant image of uniform color'),(1907,'odt','document','document/odt','---',''),(1912,'otb','image','image/otb','rw-','On-the-air bitmap'),(1913,'palm','image','image/palm','rw+','Palm pixmap'),(1914,'pattern','image','image/pattern','r--','Predefined pattern'),(1915,'pcd','image','image/pcd','rw-','Photo CD'),(1916,'pcl','image','image/pcl','rw+','Printer Control Language'),(1917,'pcx','image','image/pcx','rw+','ZSoft IBM PC multi-page Paintbrush'),(1918,'pdb','image','image/pdb','rw+','Palm Database ImageViewer Format'),(1919,'pdf','document','document/pdf','rw-','Adobe Illustrator CS2'),(1920,'pfm','image','image/pfm','rw+','Portable float format'),(1921,'pgx','image','image/pgx','r--','JPEG-2000 VM Format'),(1922,'php','other','text/php','---','PHP CODE'),(1923,'pict','image','image/pict','rw-','Apple Macintosh QuickDraw/PICT'),(1924,'pix','image','image/pix','r--','Alias/Wavefront RLE image format'),(1925,'plasma','image','image/plasma','r--','Plasma fractal image'),(1927,'png','image','image/png','rw-','JPEG Network Graphics'),(1928,'pnm','image','image/pnm','rw+','Common 2-dimensional bitmap format'),(1929,'ppt','document','document/ppt','---',''),(1930,'pptx','document','document/pptx','---',''),(1931,'preview','image','image/preview','-w-','Show a preview an image enhancement, effect, or f/x'),(1932,'ps','image','image/ps','rw-','Encapsulated PostScript Interchange format'),(1933,'ps2','image','image/ps2','-w-','Level II Encapsulated PostScript'),(1934,'ps3','image','image/ps3','-w+','Level III Encapsulated PostScript'),(1935,'psd','image','image/psd','---','Adobe Photoshop bitmap'),(1939,'pwp','image','image/pwp','r--','Seattle Film Works'),(1942,'ram','audio','audio/ram','---',''),(1943,'rar','zip','application/rar','---','Compressed Files'),(1944,'raw','image','image/raw','rw+','Raw alpha samples'),(1947,'rgb','image','image/rgb','rw+','Raw blue, green, and red samples'),(1949,'rla','image','image/rla','r--','Alias/Wavefront image'),(1950,'rle','image','image/rle','r--','Utah Run length encoded image'),(1964,'sass','stylesheet','text/css','---','Sass Style sheet'),(1966,'scr','image','image/scr','r--','ZX-Spectrum SCREEN$'),(1967,'scss','stylesheet','text/css','---','Sass Style sheet'),(1968,'sct','image','image/sct','r--','Scitex HandShake'),(1971,'sfw','image','image/sfw','r--','Seattle Film Works'),(1972,'sgi','image','image/sgi','rw+','Irix RGB image'),(1980,'sql','text','plain/text','---','SQL files'),(1982,'stegano','image','image/stegano','r--','Steganographic image'),(1983,'sun','image','image/sun','rw+','SUN Rasterfile'),(1985,'svg','vector','image/svg+xml','rw+','ImageMagick\'s own SVG internal renderer'),(1987,'tar.bz2','zip','application/bz2','---','Compressed Files'),(1988,'tga','image','image/tga','rw+','Truevision Targa image'),(1989,'tgz','zip','application/x-gzip','---','Compressed Files'),(1991,'thumbnail','image','image/thumbnail','-w+','EXIF Profile Thumbnail'),(1993,'tif','image','image/tif','rw+','Pyramid encoded TIFF'),(1994,'tiff','image','image/tiff','rw+','Pyramid encoded TIFF'),(1995,'tile','image','image/tile','r--','Tile image with a texture'),(1996,'tim','image','image/tim','r--','PSX TIM'),(1999,'ts','video','video/mp2t','r--','Apple video segment'),(2001,'ttf','image','image/ttf','r--','Multi-face font package (Freetype 2.3.11)'),(2004,'txt','text','plain/text','---','Text'),(2012,'uil','image','image/uil','-w-','X-Motif UIL table'),(2013,'uyvy','image','image/uyvy','rw-','16bit/pixel interleaved YUV'),(2018,'vcf','other','text/plain','---','Adressbook'),(2019,'vicar','image','image/vicar','rw-','VICAR rasterfile format'),(2020,'vid','image','image/vid','rw+','Visual Image Directory'),(2021,'3g2','video','video/3g2','rw-','QuickTime/MPEG-4/Motion JPEG 2000 format'),(2022,'3gp','video','video/3gp','rw-','QuickTime/MPEG-4/Motion JPEG 2000 format'),(2023,'4xm','video','video/4xm','r--','4X Technologies format'),(2024,'IFF','video','video/IFF','r--','Interchange File Format'),(2025,'ISS','video','video/ISS','r--','Funcom ISS format'),(2026,'MTV','video','video/MTV','r--','MTV format'),(2027,'RoQ','video','video/RoQ','rw-','raw id RoQ format'),(2028,'a64','video','video/a64','-w-','a64 - video for Commodore 64'),(2029,'aac','video','video/aac','r--','raw ADTS AAC'),(2030,'ac3','video','video/ac3','rw-','raw AC-3'),(2031,'act','video','video/act','r--','ACT Voice file format'),(2032,'adf','video','video/adf','r--','Artworx Data Format'),(2033,'adts','video','video/adts','-w-','ADTS AAC'),(2034,'adx','video','video/adx','rw-','CRI ADX'),(2035,'aea','video','video/aea','r--','MD STUDIO audio'),(2036,'aiff','video','video/aiff','rw-','Audio IFF'),(2037,'alaw','video','video/alaw','rw-','PCM A-law format'),(2038,'amr','video','video/amr','rw-','3GPP AMR file format'),(2039,'anm','video','video/anm','r--','Deluxe Paint Animation'),(2040,'apc','video','video/apc','r--','CRYO APC format'),(2041,'ape','video','video/ape','r--','Monkeys Audio'),(2042,'applehttp','video','video/applehttp','r--','Apple HTTP Live Streaming format'),(2043,'asf','video','video/asf','rw-','ASF format'),(2044,'asf_stream','video','video/asf_stream','-w-','ASF format'),(2045,'ass','video','video/ass','rw-','Advanced SubStation Alpha subtitle format'),(2046,'au','video','video/au','rw-','SUN AU format'),(2047,'avi','video','video/avi','rw-','AVI format'),(2048,'avm2','video','video/avm2','-w-','Flash 9 (AVM2) format'),(2049,'bethsoftvid','video','video/bethsoftvid','r--','Bethesda Softworks VID format'),(2050,'bfi','video','video/bfi','r--','Brute Force & Ignorance'),(2051,'bin','video','video/bin','r--','Binary text'),(2052,'bink','video','video/bink','r--','Bink'),(2053,'bit','video','video/bit','rw-','G.729 BIT file format'),(2054,'bmv','video','video/bmv','r--','Discworld II BMV'),(2055,'c93','video','video/c93','r--','Interplay C93'),(2056,'caf','video','video/caf','rw-','Apple Core Audio Format'),(2057,'cavsvideo','video','video/cavsvideo','rw-','raw Chinese AVS video'),(2058,'cdg','video','video/cdg','r--','CD Graphics Format'),(2059,'cdxl','video','video/cdxl','r--','Commodore CDXL video format'),(2060,'crc','video','video/crc','-w-','CRC testing format'),(2061,'daud','video','video/daud','rw-','D-Cinema audio format'),(2062,'dfa','video','video/dfa','r--','Chronomaster DFA'),(2063,'dirac','video','video/dirac','rw-','raw Dirac'),(2064,'dnxhd','video','video/dnxhd','rw-','raw DNxHD (SMPTE VC-3)'),(2065,'dsicin','video','video/dsicin','r--','Delphine Software International CIN format'),(2066,'dts','video','video/dts','rw-','raw DTS'),(2067,'dv','video','video/dv','rw-','DV video format'),(2068,'dv1394','video','video/dv1394','r--','DV1394 A/V grab'),(2069,'dvd','video','video/dvd','-w-','MPEG-2 PS format (DVD VOB)'),(2070,'dxa','video','video/dxa','r--','DXA'),(2071,'ea','video','video/ea','r--','Electronic Arts Multimedia Format'),(2072,'ea_cdata','video','video/ea_cdata','r--','Electronic Arts cdata'),(2073,'eac3','video','video/eac3','rw-','raw E-AC-3'),(2074,'f32be','video','video/f32be','rw-','PCM 32 bit floating-point big-endian format'),(2075,'f32le','video','video/f32le','rw-','PCM 32 bit floating-point little-endian format'),(2076,'f64be','video','video/f64be','rw-','PCM 64 bit floating-point big-endian format'),(2077,'f64le','video','video/f64le','rw-','PCM 64 bit floating-point little-endian format'),(2078,'fbdev','video','video/fbdev','r--','Linux framebuffer'),(2079,'ffm','video','video/ffm','rw-','FFM (FFserver live feed) format'),(2080,'ffmetadata','video','video/ffmetadata','rw-','FFmpeg metadata in text format'),(2081,'film_cpk','video','video/film_cpk','r--','Sega FILM/CPK format'),(2082,'filmstrip','video','video/filmstrip','rw-','Adobe Filmstrip'),(2083,'flac','video','video/flac','rw-','raw FLAC'),(2084,'flic','video','video/flic','r--','FLI/FLC/FLX animation format'),(2085,'flv','video','video/flv','rw-','FLV format'),(2086,'framecrc','video','video/framecrc','-w-','framecrc testing format'),(2087,'framemd5','video','video/framemd5','-w-','Per-frame MD5 testing format'),(2088,'g722','video','video/g722','rw-','raw G.722'),(2089,'g723_1','video','video/g723_1','rw-','raw G.723.1'),(2090,'g729','video','video/g729','r--','G.729 raw format demuxer'),(2091,'gsm','video','video/gsm','r--','raw GSM'),(2092,'gxf','video','video/gxf','rw-','GXF format'),(2093,'h261','video','video/h261','rw-','raw H.261'),(2094,'h263','video','video/h263','rw-','raw H.263'),(2095,'h264','video','video/h264','rw-','raw H.264 video format'),(2096,'hls','video','video/hls','r--','Apple HTTP Live Streaming format'),(2097,'ico','video','video/ico','r--','Microsoft Windows ICO'),(2098,'idcin','video','video/idcin','r--','id Cinematic format'),(2099,'idf','video','video/idf','r--','iCE Draw File'),(2100,'image2','video','video/image2','rw-','image2 sequence'),(2101,'image2pipe','video','video/image2pipe','rw-','piped image2 sequence'),(2102,'ingenient','video','video/ingenient','r--','raw Ingenient MJPEG'),(2103,'ipmovie','video','video/ipmovie','r--','Interplay MVE format'),(2104,'ipod','video','video/ipod','-w-','iPod H.264 MP4 format'),(2105,'ismv','video','video/ismv','-w-','ISMV/ISMA (Smooth Streaming) format'),(2106,'iv8','video','video/iv8','r--','A format generated by IndigoVision 8000 video server'),(2107,'ivf','video','video/ivf','rw-','On2 IVF'),(2108,'jv','video','video/jv','r--','Bitmap Brothers JV'),(2109,'latm','video','video/latm','rw-','LOAS/LATM'),(2110,'lavfi','video','video/lavfi','r--','Libavfilter virtual input device'),(2111,'lmlm4','video','video/lmlm4','r--','lmlm4 raw format'),(2112,'loas','video','video/loas','r--','LOAS AudioSyncStream'),(2113,'lxf','video','video/lxf','r--','VR native stream format (LXF)'),(2114,'m4a','video','video/m4a','r--','QuickTime/MPEG-4/Motion JPEG 2000 format'),(2115,'m4v','video','video/m4v','rw-','raw MPEG-4 video format'),(2116,'matroska','video','video/matroska','rw-','Matroska/WebM file format'),(2117,'md5','video','video/md5','-w-','MD5 testing format'),(2118,'mgsts','video','video/mgsts','r--','Metal Gear Solid: The Twin Snakes'),(2119,'microdvd','video','video/microdvd','rw-','MicroDVD subtitle format'),(2120,'mj2','video','video/mj2','r--','QuickTime/MPEG-4/Motion JPEG 2000 format'),(2121,'mjpeg','video','video/mjpeg','rw-','raw MJPEG video'),(2122,'mkvtimestamp_v2','video','video/mkvtimestamp_v2','-w-','extract pts as timecode v2 format, as defined by mkvtoolnix'),(2123,'mlp','video','video/mlp','rw-','raw MLP'),(2124,'mm','video','video/mm','r--','American Laser Games MM format'),(2125,'mmf','video','video/mmf','rw-','Yamaha SMAF'),(2126,'mov','video','video/mov','rw-','QuickTime/MPEG-4/Motion JPEG 2000 format'),(2127,'mp2','video','video/mp2','-w-','MPEG audio layer 2'),(2128,'mp4','video','video/mp4','rw-','QuickTime/MPEG-4/Motion JPEG 2000 format'),(2129,'mpc8','video','video/mpc8','r--','Musepack SV8'),(2130,'mpeg','video','video/mpeg','rw-','MPEG-1 System format'),(2131,'mpeg1video','video','video/mpeg1video','-w-','raw MPEG-1 video'),(2132,'mpeg2video','video','video/mpeg2video','-w-','raw MPEG-2 video'),(2133,'mpegts','video','video/mpegts','rw-','MPEG-2 transport stream format'),(2134,'mpegtsraw','video','video/mpegtsraw','r--','MPEG-2 raw transport stream format'),(2135,'mpegvideo','video','video/mpegvideo','r--','raw MPEG video'),(2136,'mpjpeg','video','video/mpjpeg','-w-','MIME multipart JPEG format'),(2137,'msnwctcp','video','video/msnwctcp','r--','MSN TCP Webcam stream'),(2138,'mulaw','video','video/mulaw','rw-','PCM mu-law format'),(2139,'mvi','video','video/mvi','r--','Motion Pixels MVI format'),(2140,'mxf','video','video/mxf','rw-','Material eXchange Format'),(2141,'mxf_d10','video','video/mxf_d10','-w-','Material eXchange Format, D-10 Mapping'),(2142,'mxg','video','video/mxg','r--','MxPEG clip file format'),(2143,'nc','video','video/nc','r--','NC camera feed format'),(2144,'nsv','video','video/nsv','r--','Nullsoft Streaming Video'),(2145,'nut','video','video/nut','rw-','NUT format'),(2146,'nuv','video','video/nuv','r--','NuppelVideo format'),(2147,'ogg','video','video/ogg','rw-','Ogg'),(2148,'ogv','video','video/ogv','--','OGG Video'),(2149,'oma','video','video/oma','rw-','Sony OpenMG audio'),(2150,'oss','video','video/oss','rw-','Open Sound System playback'),(2151,'pmp','video','video/pmp','r--','Playstation Portable PMP format'),(2152,'psp','video','video/psp','-w-','PSP MP4 format'),(2153,'psxstr','video','video/psxstr','r--','Sony Playstation STR format'),(2154,'pva','video','video/pva','r--','TechnoTrend PVA file and stream format'),(2155,'qcp','video','video/qcp','r--','QCP format'),(2156,'r3d','video','video/r3d','r--','REDCODE R3D format'),(2157,'rawvideo','video','video/rawvideo','rw-','raw video format'),(2158,'rcv','video','video/rcv','-w-','VC-1 test bitstream'),(2159,'rl2','video','video/rl2','r--','RL2 format'),(2160,'rm','video','video/rm','rw-','RealMedia format'),(2161,'rpl','video','video/rpl','r--','RPL/ARMovie format'),(2162,'rso','video','video/rso','rw-','Lego Mindstorms RSO format'),(2163,'rtp','video','video/rtp','rw-','RTP output format'),(2164,'rtsp','video','video/rtsp','rw-','RTSP output format'),(2165,'s16be','video','video/s16be','rw-','PCM signed 16 bit big-endian format'),(2166,'s16le','video','video/s16le','rw-','PCM signed 16 bit little-endian format'),(2167,'s24be','video','video/s24be','rw-','PCM signed 24 bit big-endian format'),(2168,'s24le','video','video/s24le','rw-','PCM signed 24 bit little-endian format'),(2169,'s32be','video','video/s32be','rw-','PCM signed 32 bit big-endian format'),(2170,'s32le','video','video/s32le','rw-','PCM signed 32 bit little-endian format'),(2171,'s8','video','video/s8','rw-','PCM signed 8 bit format'),(2172,'sap','video','video/sap','rw-','SAP output format'),(2173,'sbg','video','video/sbg','r--','SBaGen binaural beats script'),(2174,'sdp','video','video/sdp','r--','SDP'),(2175,'segment','video','video/segment','-w-','segment muxer'),(2176,'shn','video','video/shn','r--','raw Shorten'),(2177,'siff','video','video/siff','r--','Beam Software SIFF'),(2178,'smjpeg','video','video/smjpeg','rw-','Loki SDL MJPEG'),(2179,'smk','video','video/smk','r--','Smacker video'),(2180,'sol','video','video/sol','r--','Sierra SOL format'),(2181,'sox','video','video/sox','rw-','SoX native format'),(2182,'spdif','video','video/spdif','rw-','IEC 61937 (used on S/PDIF - IEC958)'),(2183,'srt','video','video/srt','rw-','SubRip subtitle format'),(2184,'svcd','video','video/svcd','-w-','MPEG-2 PS format (VOB)'),(2185,'swf','video','video/swf','rw-','Flash format'),(2186,'thp','video','video/thp','r--','THP'),(2187,'tiertexseq','video','video/tiertexseq','r--','Tiertex Limited SEQ format'),(2188,'tmv','video','video/tmv','r--','8088flex TMV'),(2189,'truehd','video','video/truehd','rw-','raw TrueHD'),(2190,'tta','video','video/tta','r--','True Audio'),(2191,'tty','video','video/tty','r--','Tele-typewriter'),(2192,'txd','video','video/txd','r--','Renderware TeXture Dictionary'),(2193,'u16be','video','video/u16be','rw-','PCM unsigned 16 bit big-endian format'),(2194,'u16le','video','video/u16le','rw-','PCM unsigned 16 bit little-endian format'),(2195,'u24be','video','video/u24be','rw-','PCM unsigned 24 bit big-endian format'),(2196,'u24le','video','video/u24le','rw-','PCM unsigned 24 bit little-endian format'),(2197,'u32be','video','video/u32be','rw-','PCM unsigned 32 bit big-endian format'),(2198,'u32le','video','video/u32le','rw-','PCM unsigned 32 bit little-endian format'),(2199,'u8','video','video/u8','rw-','PCM unsigned 8 bit format'),(2200,'v4l2','video','video/v4l2','r--','Video4Linux2 device grab'),(2201,'vc1','video','video/vc1','r--','raw VC-1'),(2202,'vc1test','video','video/vc1test','r--','VC-1 test bitstream format'),(2203,'vcd','video','video/vcd','-w-','MPEG-1 System format (VCD)'),(2223,'video4linux2','video','video/video4linux2','r--','Video4Linux2 device grab'),(2224,'viff','image','image/viff','rw+','Khoros Visualization image'),(2225,'vmd','video','video/vmd','r--','Sierra VMD format'),(2226,'vob','video','video/vob','-w-','MPEG-2 PS format (VOB)'),(2227,'voc','video','video/voc','rw-','Creative Voice file format'),(2228,'vqf','video','video/vqf','r--','Nippon Telegraph and Telephone Corporation (NTT) TwinVQ'),(2229,'w64','video','video/w64','r--','Sony Wave64 format'),(2230,'wav','audio','audio/wav','---',''),(2231,'wbmp','image','image/wbmp','rw-','Wireless Bitmap (level 0) image'),(2232,'wc3movie','video','video/wc3movie','r--','Wing Commander III movie format'),(2233,'webm','video','video/webm','rw-','Matroska/WebM file format'),(2234,'webp','image','image/webp','rw-','Matroska/WebP file format'),(2235,'wma','audio','audio/wma','---',''),(2236,'wmf','image','image/wmf','r--','Windows Meta File'),(2237,'wmv','video','video/wmv','rw-','Microsoft WMA'),(2238,'wmz','image','image/wmz','r--','Compressed Windows Meta File'),(2239,'wpg','image','image/wpg','r--','Word Perfect Graphics'),(2240,'wsaud','video','video/wsaud','r--','Westwood Studios audio format'),(2241,'wsvqa','video','video/wsvqa','r--','Westwood Studios VQA format'),(2242,'wtv','video','video/wtv','rw-','Windows Television (WTV)'),(2243,'wv','video','video/wv','r--','WavPack'),(2244,'x','image','image/x','rw+','X Image'),(2245,'xa','video','video/xa','r--','Maxis XA File Format'),(2246,'xbin','video','video/xbin','r--','eXtended BINary text (XBIN)'),(2247,'xbm','image','image/xbm','rw-','X Windows system bitmap (black and white)'),(2248,'xc','image','image/xc','r--','Constant image uniform color'),(2249,'xcf','image','image/xcf','r--','GIMP image'),(2250,'xls','document','document/xls','---',''),(2251,'xmv','video','video/xmv','r--','Microsoft XMV'),(2252,'xpm','image','image/xpm','rw-','Personal Icon'),(2253,'xps','image','image/xps','r--','Microsoft XML Paper Specification'),(2254,'xwd','image','image/xwd','rw-','X Windows system window dump (color)'),(2255,'xwma','video','video/xwma','r--','Microsoft xWMA'),(2256,'ycbcr','image','image/ycbcr','rw+','Raw Y, Cb, and Cr samples'),(2257,'yop','video','video/yop','r--','Psygnosis YOP Format'),(2258,'yuv','image','image/yuv','rw-','CCIR 601 4:1:1 or 4:2:2'),(2259,'yuv4mpegpipe','video','video/yuv4mpegpipe','rw-','YUV4MPEG pipe format'),(2260,'zip','zip','application/zip','---','Compressed Files'),(2618,'mpg','video','video/mpeg','rw-','MPEG-1 System format'),(2619,'note','note','plain/text','---','Drumee note'),(2620,'odp','document','document/odt','---',''),(2621,'ods','document','document/odt','---',''),(2622,'yaml','text','plain/text','---','Conffig file'),(2623,'yml','text','plain/text','---','Conffig file');
/*!40000 ALTER TABLE `filecap` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `font`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `font` (
  `sys_id` int(6) NOT NULL AUTO_INCREMENT,
  `family` varchar(80) NOT NULL,
  `name` varchar(125) NOT NULL,
  `style` varchar(30) NOT NULL,
  `weight` int(2) NOT NULL DEFAULT 400,
  `local1` varchar(80) NOT NULL,
  `local2` varchar(80) NOT NULL,
  `url` varchar(1024) NOT NULL,
  `format` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `unicode_range` varchar(20) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `purpose` tinyint(4) NOT NULL DEFAULT 0,
  `comment` varchar(160) NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `name_2` (`name`),
  KEY `format` (`format`),
  KEY `usage` (`purpose`),
  FULLTEXT KEY `search` (`family`,`local1`,`local2`,`url`),
  FULLTEXT KEY `name` (`name`),
  FULLTEXT KEY `family` (`family`)
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `font` WRITE;
/*!40000 ALTER TABLE `font` DISABLE KEYS */;
INSERT INTO `font` VALUES (67,'AvenirLTStd','AvenirLTStd BlackOblique','normal',400,'','','/-/fonts/AvenirLTStd-BlackOblique.otf','opentype','',0,''),(68,'AvenirLTStd','AvenirLTStd Black','normal',400,'','','/-/fonts/AvenirLTStd-Black.otf','opentype','',0,''),(69,'AvenirLTStd','AvenirLTStd BookOblique','normal',400,'','','/-/fonts/AvenirLTStd-BookOblique.otf','opentype','',0,''),(70,'AvenirLTStd','AvenirLTStd Book.','normal',400,'','','/-/fonts/AvenirLTStd-Book.otf','opentype','',0,''),(71,'AvenirLTStd','AvenirLTStd HeavyOblique','normal',400,'','','/-/fonts/AvenirLTStd-HeavyOblique.otf','opentype','',0,''),(72,'AvenirLTStd','AvenirLTStd Heavy','normal',400,'','','/-/fonts/AvenirLTStd-Heavy.otf','opentype','',0,''),(73,'AvenirLTStd','AvenirLTStd LightOblique','normal',400,'','','/-/fonts/AvenirLTStd-LightOblique.otf','opentype','',0,''),(74,'AvenirLTStd','AvenirLTStd Light','normal',400,'','','/-/fonts/AvenirLTStd-Light.otf','opentype','',0,''),(75,'AvenirLTStd','AvenirLTStd MediumOblique','normal',500,'','','/-/fonts/AvenirLTStd-MediumOblique.otf','opentype','',0,''),(76,'AvenirLTStd','AvenirLTStd Medium','normal',500,'','','/-/fonts/AvenirLTStd-Medium.otf','opentype','',0,''),(77,'AvenirLTStd','AvenirLTStd Oblique','normal',400,'','','/-/fonts/AvenirLTStd-Oblique.otf','opentype','',0,''),(78,'AvenirLTStd','AvenirLTStd Roman','normal',400,'','','/-/fonts/AvenirLTStd-Roman.otf','opentype','',0,''),(79,'Branding','Branding BlackItalic','italic',400,'','','/-/fonts/Branding-BlackItalic.otf','opentype','',0,''),(80,'Branding','Branding Black','normal',400,'','','/-/fonts/Branding-Black.otf','opentype','',0,''),(81,'Branding','Branding BoldItalic','italic',400,'','','/-/fonts/Branding-BoldItalic.otf','opentype','',0,''),(82,'Branding','Branding Bold','normal',400,'','','/-/fonts/Branding-Bold.otf','opentype','',0,''),(83,'Branding','Branding LightItalic','italic',400,'','','/-/fonts/Branding-LightItalic.otf','opentype','',0,''),(84,'Branding','Branding Light','normal',400,'','','/-/fonts/Branding-Light.otf','opentype','',0,''),(85,'Branding','Branding MediumItalic','italic',500,'','','/-/fonts/Branding-MediumItalic.otf','opentype','',0,''),(86,'Branding','Branding Medium','normal',500,'','','/-/fonts/Branding-Medium.otf','opentype','',0,''),(87,'Branding','Branding SemiBoldItalic','italic',600,'','','/-/fonts/Branding-SemiBoldItalic.otf','opentype','',0,''),(88,'Branding','Branding SemiBold','normal',600,'','','/-/fonts/Branding-SemiBold.otf','opentype','',0,''),(89,'Branding','Branding SemiLightItalic','italic',400,'','','/-/fonts/Branding-SemiLightItalic.otf','opentype','',0,''),(90,'Branding','Branding SemiLight','normal',400,'','','/-/fonts/Branding-SemiLight.otf','opentype','',0,''),(91,'Branding','Branding ThinItalic','italic',400,'','','/-/fonts/Branding-ThinItalic.otf','opentype','',0,''),(92,'Branding','Branding Thin','normal',400,'','','/-/fonts/Branding-Thin.otf','opentype','',0,''),(93,'Nexa','Nexa Bold','normal',400,'','','/-/fonts/Nexa-Bold.otf','opentype','',0,''),(94,'Nexa','Nexa Light','normal',400,'','','/-/fonts/Nexa-Light.otf','opentype','',0,''),(95,'Oswald','Oswald BoldItalic','italic',400,'','','/-/fonts/Oswald-BoldItalic.ttf','truetype','',0,''),(96,'Oswald','Oswald Bold','normal',400,'','','/-/fonts/Oswald-Bold.ttf','truetype','',0,''),(97,'Oswald','Oswald Demi-BoldItalic','italic',400,'','','/-/fonts/Oswald-Demi-BoldItalic.ttf','truetype','',0,''),(98,'Oswald','Oswald DemiBold','normal',400,'','','/-/fonts/Oswald-DemiBold.ttf','truetype','',0,''),(99,'Oswald','Oswald Extra-LightItalic','italic',400,'','','/-/fonts/Oswald-Extra-LightItalic.ttf','truetype','',0,''),(100,'Oswald','Oswald ExtraLight','normal',400,'','','/-/fonts/Oswald-ExtraLight.ttf','truetype','',0,''),(101,'Oswald','Oswald HeavyItalic','italic',400,'','','/-/fonts/Oswald-HeavyItalic.ttf','truetype','',0,''),(102,'Oswald','Oswald Heavy','normal',400,'','','/-/fonts/Oswald-Heavy.ttf','truetype','',0,''),(103,'Oswald','Oswald LightItalic','italic',400,'','','/-/fonts/Oswald-LightItalic.ttf','truetype','',0,''),(104,'Oswald','Oswald Light','normal',400,'','','/-/fonts/Oswald-Light.ttf','truetype','',0,''),(105,'Oswald','Oswald MediumItalic','italic',500,'','','/-/fonts/Oswald-MediumItalic.ttf','truetype','',0,''),(106,'Oswald','Oswald Medium','normal',500,'','','/-/fonts/Oswald-Medium.ttf','truetype','',0,''),(107,'Oswald','Oswald RegularItalic','italic',400,'','','/-/fonts/Oswald-RegularItalic.ttf','truetype','',0,''),(108,'Oswald','Oswald Regular','normal',400,'','','/-/fonts/Oswald-Regular.ttf','truetype','',0,''),(109,'Oswald','Oswald Stencil','normal',400,'','','/-/fonts/Oswald-Stencil.ttf','truetype','',0,''),(110,'SourceSansPro','SourceSansPro-ExtraLight','normal',200,'Source Sans Pro ExtraLight','SourceSansPro-ExtraLight','/-/fonts/SourceSansPro-ExtraLight.otf','opentype','',3,''),(111,'SourceSansPro','SourceSansPro-Regular','normal',400,'Source Sans Pro Regular','SourceSansPro-Regular','/-/fonts/SourceSansPro-Regular.ttf','truetype','',3,''),(112,'SourceSansPro','SourceSansPro-BlackItalic','italic',900,'Source Sans Pro Black Italic','SourceSansPro-BlackItalic','/-/fonts/SourceSansPro-BlackItalic.ttf','truetype','',3,''),(113,'SourceSansPro','SourceSansPro-Black','normal',900,'Source Sans Pro Black','SourceSansPro-Black','/-/fonts/SourceSansPro-Black.ttf','truetype','',3,''),(114,'SourceSansPro','SourceSansPro-BoldItalic','italic',900,'Source Sans Pro Bold Italic','SourceSansPro-BoldItalic','/-/fonts/SourceSansPro-BoldItalic.ttf','truetype','',3,''),(115,'SourceSansPro','SourceSansPro-Bold','normal',700,'SourceSansPro-Bold','SourceSansPro-Bold','/-/fonts/SourceSansPro-Bold.ttf','truetype','',3,''),(117,'SourceSansPro','SourceSansPro-ExtraLightItalic','italic',200,'Source Sans Pro ExtraLight Italic','SourceSansPro-ExtraLightItalic','/-/fonts/SourceSansPro-ExtraLightItalic.ttf','truetype','',3,''),(118,'SourceSansPro','SourceSansPro-Italic','italic',400,'Source Sans Pro Italic','SourceSansPro-Italic','/-/fonts/SourceSansPro-Italic.ttf','truetype','',3,''),(119,'SourceSansPro','SourceSansPro-LightItalic','italic',300,'Source Sans Pro Light Italic','SourceSansPro-LightItalic','/-/fonts/SourceSansPro-LightItalic.ttf','truetype','',3,''),(120,'SourceSansPro','SourceSansPro-Light','normal',300,'Source Sans Pro Light','SourceSansPro-Light','/-/fonts/SourceSansPro-Light.ttf','truetype','',3,''),(121,'SourceSansPro','SourceSansPro-SemiBoldItalic','italic',600,'Source Sans Pro SemiBold Italic','SourceSansPro-SemiBoldItalic','/-/fonts/SourceSansPro-SemiBoldItalic.ttf','truetype','',3,''),(123,'SourceSansPro','SourceSansPro-SemiBold','normal',600,'Source Sans Pro SemiBold','SourceSansPro-SemiBold','/-/fonts/SourceSansPro-SemiBold.ttf','truetype','',3,''),(688,'AlegreyaSansSC','AlegreyaSansSC-Light','normal',400,'AlegreyaSansSC Light','AlegreyaSansSCLight','/-/fonts/free/Alegreya-Light/AlegreyaSansSC-Light.ttf','truetype','',3,''),(689,'AlegreyaSansSC','AlegreyaSansSC-LightItalic','italic',400,'AlegreyaSansSC LightItalic','AlegreyaSansSCLightItalic','/-/fonts/free/Alegreya-Light/AlegreyaSansSC-LightItalic.ttf','truetype','',3,''),(690,'AlegreyaSansSC','AlegreyaSansSC-Medium','normal',500,'AlegreyaSansSC Medium','AlegreyaSansSCMedium','/-/fonts/free/Alegreya-Light/AlegreyaSansSC-Medium.ttf','truetype','',3,''),(691,'AlegreyaSansSC','AlegreyaSansSC-MediumItalic','italic',500,'AlegreyaSansSC MediumItalic','AlegreyaSansSCMediumItalic','/-/fonts/free/Alegreya-Light/AlegreyaSansSC-MediumItalic.ttf','truetype','',3,''),(692,'AlegreyaSansSC','AlegreyaSansSC-Bold','normal',800,'AlegreyaSansSC Bold','AlegreyaSansSCBold','/-/fonts/free/Alegreya/AlegreyaSansSC-Bold.ttf','truetype','',3,''),(693,'AlegreyaSansSC','AlegreyaSansSC-BoldItalic','italic',800,'AlegreyaSansSC BoldItalic','AlegreyaSansSCBoldItalic','/-/fonts/free/Alegreya/AlegreyaSansSC-BoldItalic.ttf','truetype','',3,''),(694,'AlegreyaSansSC','AlegreyaSansSC-Italic','italic',400,'AlegreyaSansSC Italic','AlegreyaSansSCItalic','/-/fonts/free/Alegreya/AlegreyaSansSC-Italic.ttf','truetype','',3,''),(695,'AlegreyaSansSC','AlegreyaSansSC-Regular','normal',400,'AlegreyaSansSC Regular','AlegreyaSansSCRegular','/-/fonts/free/Alegreya/AlegreyaSansSC-Regular.ttf','truetype','',3,''),(696,'AnonymousPro','AnonymousPro-Bold','normal',800,'AnonymousPro Bold','AnonymousProBold','/-/fonts/free/Anonymous-Pro/AnonymousPro-Bold.ttf','truetype','',3,''),(697,'AnonymousPro','AnonymousPro-BoldItalic','italic',800,'AnonymousPro BoldItalic','AnonymousProBoldItalic','/-/fonts/free/Anonymous-Pro/AnonymousPro-BoldItalic.ttf','truetype','',3,''),(698,'AnonymousPro','AnonymousPro-Italic','italic',400,'AnonymousPro Italic','AnonymousProItalic','/-/fonts/free/Anonymous-Pro/AnonymousPro-Italic.ttf','truetype','',3,''),(699,'AnonymousPro','AnonymousPro-Regular','normal',400,'AnonymousPro Regular','AnonymousProRegular','/-/fonts/free/Anonymous-Pro/AnonymousPro-Regular.ttf','truetype','',3,''),(700,'Arimo','Arimo-Bold','normal',800,'Arimo Bold','ArimoBold','/-/fonts/free/Arimo/Arimo-Bold.ttf','truetype','',3,''),(701,'Arimo','Arimo-BoldItalic','italic',800,'Arimo BoldItalic','ArimoBoldItalic','/-/fonts/free/Arimo/Arimo-BoldItalic.ttf','truetype','',3,''),(702,'Arimo','Arimo-Italic','italic',400,'Arimo Italic','ArimoItalic','/-/fonts/free/Arimo/Arimo-Italic.ttf','truetype','',3,''),(703,'Arimo','Arimo-Regular','normal',400,'Arimo Regular','ArimoRegular','/-/fonts/free/Arimo/Arimo-Regular.ttf','truetype','',3,''),(704,'Arsenal','Arsenal-Bold','normal',800,'Arsenal Bold','ArsenalBold','/-/fonts/free/Arsenal/Arsenal-Bold.ttf','truetype','',3,''),(705,'Arsenal','Arsenal-BoldItalic','italic',800,'Arsenal BoldItalic','ArsenalBoldItalic','/-/fonts/free/Arsenal/Arsenal-BoldItalic.ttf','truetype','',3,''),(706,'Arsenal','Arsenal-Italic','italic',400,'Arsenal Italic','ArsenalItalic','/-/fonts/free/Arsenal/Arsenal-Italic.ttf','truetype','',3,''),(707,'Arsenal','Arsenal-Regular','normal',400,'Arsenal Regular','ArsenalRegular','/-/fonts/free/Arsenal/Arsenal-Regular.ttf','truetype','',3,''),(708,'CormorantInfant','CormorantInfant-Bold','normal',800,'CormorantInfant Bold','CormorantInfantBold','/-/fonts/free/Cormorant-Infant/CormorantInfant-Bold.ttf','truetype','',3,''),(709,'CormorantInfant','CormorantInfant-BoldItalic','italic',800,'CormorantInfant BoldItalic','CormorantInfantBoldItalic','/-/fonts/free/Cormorant-Infant/CormorantInfant-BoldItalic.ttf','truetype','',3,''),(710,'CormorantInfant','CormorantInfant-Italic','italic',400,'CormorantInfant Italic','CormorantInfantItalic','/-/fonts/free/Cormorant-Infant/CormorantInfant-Italic.ttf','truetype','',3,''),(711,'CormorantInfant','CormorantInfant-Regular','normal',400,'CormorantInfant Regular','CormorantInfantRegular','/-/fonts/free/Cormorant-Infant/CormorantInfant-Regular.ttf','truetype','',3,''),(712,'Cormorant','Cormorant-Italic','italic',400,'Cormorant Italic','CormorantItalic','/-/fonts/free/Cormorant-Light/Cormorant-Italic.ttf','truetype','',3,''),(713,'Cormorant','Cormorant-Regular','normal',400,'Cormorant Regular','CormorantRegular','/-/fonts/free/Cormorant-Light/Cormorant-Regular.ttf','truetype','',3,''),(714,'Cormorant','Cormorant-SemiBold','normal',600,'Cormorant SemiBold','CormorantSemiBold','/-/fonts/free/Cormorant-Light/Cormorant-SemiBold.ttf','truetype','',3,''),(715,'Cormorant','Cormorant-SemiBoldItalic','italic',600,'Cormorant SemiBoldItalic','CormorantSemiBoldItalic','/-/fonts/free/Cormorant-Light/Cormorant-SemiBoldItalic.ttf','truetype','',3,''),(716,'Cormorant','Cormorant-Bold','normal',800,'Cormorant Bold','CormorantBold','/-/fonts/free/Cormorant/Cormorant-Bold.ttf','truetype','',3,''),(717,'Cormorant','Cormorant-BoldItalic','italic',800,'Cormorant BoldItalic','CormorantBoldItalic','/-/fonts/free/Cormorant/Cormorant-BoldItalic.ttf','truetype','',3,''),(718,'Cormorant','Cormorant-Medium','normal',500,'Cormorant Medium','CormorantMedium','/-/fonts/free/Cormorant/Cormorant-Medium.ttf','truetype','',3,''),(719,'Cormorant','Cormorant-MediumItalic','italic',500,'Cormorant MediumItalic','CormorantMediumItalic','/-/fonts/free/Cormorant/Cormorant-MediumItalic.ttf','truetype','',3,''),(720,'Cousine','Cousine-Bold','normal',800,'Cousine Bold','CousineBold','/-/fonts/free/Cousine/Cousine-Bold.ttf','truetype','',3,''),(721,'Cousine','Cousine-BoldItalic','italic',800,'Cousine BoldItalic','CousineBoldItalic','/-/fonts/free/Cousine/Cousine-BoldItalic.ttf','truetype','',3,''),(722,'Cousine','Cousine-Italic','italic',400,'Cousine Italic','CousineItalic','/-/fonts/free/Cousine/Cousine-Italic.ttf','truetype','',3,''),(723,'Cousine','Cousine-Regular','normal',400,'Cousine Regular','CousineRegular','/-/fonts/free/Cousine/Cousine-Regular.ttf','truetype','',3,''),(724,'Cuprum','Cuprum-Bold','normal',800,'Cuprum Bold','CuprumBold','/-/fonts/free/Cuprum/Cuprum-Bold.ttf','truetype','',3,''),(725,'Cuprum','Cuprum-BoldItalic','italic',800,'Cuprum BoldItalic','CuprumBoldItalic','/-/fonts/free/Cuprum/Cuprum-BoldItalic.ttf','truetype','',3,''),(726,'Cuprum','Cuprum-Italic','italic',400,'Cuprum Italic','CuprumItalic','/-/fonts/free/Cuprum/Cuprum-Italic.ttf','truetype','',3,''),(727,'Cuprum','Cuprum-Regular','normal',400,'Cuprum Regular','CuprumRegular','/-/fonts/free/Cuprum/Cuprum-Regular.ttf','truetype','',3,''),(728,'Exo2','Exo2-ExtraLight','normal',400,'Exo2 ExtraLight','Exo2ExtraLight','/-/fonts/free/Exo-2-Light/Exo2-ExtraLight.ttf','truetype','',3,''),(729,'Exo2','Exo2-ExtraLightItalic','italic',400,'Exo2 ExtraLightItalic','Exo2ExtraLightItalic','/-/fonts/free/Exo-2-Light/Exo2-ExtraLightItalic.ttf','truetype','',3,''),(730,'Exo2','Exo2-Medium','normal',500,'Exo2 Medium','Exo2Medium','/-/fonts/free/Exo-2-Light/Exo2-Medium.ttf','truetype','',3,''),(731,'Exo2','Exo2-MediumItalic','italic',500,'Exo2 MediumItalic','Exo2MediumItalic','/-/fonts/free/Exo-2-Light/Exo2-MediumItalic.ttf','truetype','',3,''),(732,'Exo2','Exo2-ExtraBold','normal',800,'Exo2 ExtraBold','Exo2ExtraBold','/-/fonts/free/Exo-2/Exo2-ExtraBold.ttf','truetype','',3,''),(733,'Exo2','Exo2-ExtraBoldItalic','italic',800,'Exo2 ExtraBoldItalic','Exo2ExtraBoldItalic','/-/fonts/free/Exo-2/Exo2-ExtraBoldItalic.ttf','truetype','',3,''),(734,'Exo2','Exo2-Italic','italic',400,'Exo2 Italic','Exo2Italic','/-/fonts/free/Exo-2/Exo2-Italic.ttf','truetype','',3,''),(735,'Exo2','Exo2-Regular','normal',400,'Exo2 Regular','Exo2Regular','/-/fonts/free/Exo-2/Exo2-Regular.ttf','truetype','',3,''),(736,'FiraSans','FiraSans-Light','normal',400,'FiraSans Light','FiraSansLight','/-/fonts/free/Fira-Sans-Light/FiraSans-Light.ttf','truetype','',3,''),(737,'FiraSans','FiraSans-LightItalic','italic',400,'FiraSans LightItalic','FiraSansLightItalic','/-/fonts/free/Fira-Sans-Light/FiraSans-LightItalic.ttf','truetype','',3,''),(738,'FiraSans','FiraSans-Thin','normal',400,'FiraSans Thin','FiraSansThin','/-/fonts/free/Fira-Sans-Light/FiraSans-Thin.ttf','truetype','',3,''),(739,'FiraSans','FiraSans-ThinItalic','italic',400,'FiraSans ThinItalic','FiraSansThinItalic','/-/fonts/free/Fira-Sans-Light/FiraSans-ThinItalic.ttf','truetype','',3,''),(740,'FiraSans','FiraSans-Bold','normal',800,'FiraSans Bold','FiraSansBold','/-/fonts/free/Fira-Sans/FiraSans-Bold.ttf','truetype','',3,''),(741,'FiraSans','FiraSans-BoldItalic','italic',800,'FiraSans BoldItalic','FiraSansBoldItalic','/-/fonts/free/Fira-Sans/FiraSans-BoldItalic.ttf','truetype','',3,''),(742,'FiraSans','FiraSans-Italic','italic',400,'FiraSans Italic','FiraSansItalic','/-/fonts/free/Fira-Sans/FiraSans-Italic.ttf','truetype','',3,''),(743,'FiraSans','FiraSans-Regular','normal',400,'FiraSans Regular','FiraSansRegular','/-/fonts/free/Fira-Sans/FiraSans-Regular.ttf','truetype','',3,''),(744,'IstokWeb','IstokWeb-Bold','normal',800,'IstokWeb Bold','IstokWebBold','/-/fonts/free/Istok_Web/IstokWeb-Bold.ttf','truetype','',3,''),(745,'IstokWeb','IstokWeb-BoldItalic','italic',800,'IstokWeb BoldItalic','IstokWebBoldItalic','/-/fonts/free/Istok_Web/IstokWeb-BoldItalic.ttf','truetype','',3,''),(746,'IstokWeb','IstokWeb-Italic','italic',400,'IstokWeb Italic','IstokWebItalic','/-/fonts/free/Istok_Web/IstokWeb-Italic.ttf','truetype','',3,''),(747,'IstokWeb','IstokWeb-Regular','normal',400,'IstokWeb Regular','IstokWebRegular','/-/fonts/free/Istok_Web/IstokWeb-Regular.ttf','truetype','',3,''),(760,'NotoSans','NotoSans-Bold','normal',800,'NotoSans Bold','NotoSansBold','/-/fonts/free/Noto-Sans/NotoSans-Bold.ttf','truetype','',3,''),(761,'NotoSans','NotoSans-BoldItalic','italic',800,'NotoSans BoldItalic','NotoSansBoldItalic','/-/fonts/free/Noto-Sans/NotoSans-BoldItalic.ttf','truetype','',3,''),(762,'NotoSans','NotoSans-Italic','italic',400,'NotoSans Italic','NotoSansItalic','/-/fonts/free/Noto-Sans/NotoSans-Italic.ttf','truetype','',3,''),(763,'NotoSans','NotoSans-Regular','normal',400,'NotoSans Regular','NotoSansRegular','/-/fonts/free/Noto-Sans/NotoSans-Regular.ttf','truetype','',3,''),(764,'NotoSerif','NotoSerif-Bold','normal',800,'NotoSerif Bold','NotoSerifBold','/-/fonts/free/Noto-Serif/NotoSerif-Bold.ttf','truetype','',3,''),(765,'NotoSerif','NotoSerif-BoldItalic','italic',800,'NotoSerif BoldItalic','NotoSerifBoldItalic','/-/fonts/free/Noto-Serif/NotoSerif-BoldItalic.ttf','truetype','',3,''),(766,'NotoSerif','NotoSerif-Italic','italic',400,'NotoSerif Italic','NotoSerifItalic','/-/fonts/free/Noto-Serif/NotoSerif-Italic.ttf','truetype','',3,''),(767,'NotoSerif','NotoSerif-Regular','normal',400,'NotoSerif Regular','NotoSerifRegular','/-/fonts/free/Noto-Serif/NotoSerif-Regular.ttf','truetype','',3,''),(780,'PlayfairDisplay','PlayfairDisplay-Bold','normal',800,'PlayfairDisplay Bold','PlayfairDisplayBold','/-/fonts/free/Playfair-Display/PlayfairDisplay-Bold.ttf','truetype','',3,''),(781,'PlayfairDisplay','PlayfairDisplay-BoldItalic','italic',800,'PlayfairDisplay BoldItalic','PlayfairDisplayBoldItalic','/-/fonts/free/Playfair-Display/PlayfairDisplay-BoldItalic.ttf','truetype','',3,''),(782,'PlayfairDisplay','PlayfairDisplay-Italic','italic',400,'PlayfairDisplay Italic','PlayfairDisplayItalic','/-/fonts/free/Playfair-Display/PlayfairDisplay-Italic.ttf','truetype','',3,''),(783,'PlayfairDisplay','PlayfairDisplay-Regular','normal',400,'PlayfairDisplay Regular','PlayfairDisplayRegular','/-/fonts/free/Playfair-Display/PlayfairDisplay-Regular.ttf','truetype','',3,''),(784,'Roboto','Roboto-Light','normal',300,'Roboto Light','RobotoLight','/-/fonts/free/Roboto-Light/Roboto-Light.ttf','truetype','',3,''),(785,'Roboto','Roboto-LightItalic','italic',300,'Roboto LightItalic','RobotoLightItalic','/-/fonts/free/Roboto-Light/Roboto-LightItalic.ttf','truetype','',3,''),(786,'Roboto','Roboto-Medium','normal',500,'Roboto Medium','RobotoMedium','/-/fonts/free/Roboto-Light/Roboto-Medium.ttf','truetype','',3,''),(787,'Roboto','Roboto-MediumItalic','italic',500,'Roboto MediumItalic','RobotoMediumItalic','/-/fonts/free/Roboto-Light/Roboto-MediumItalic.ttf','truetype','',3,''),(788,'RobotoMono','RobotoMono-Light','normal',400,'RobotoMono Light','RobotoMonoLight','/-/fonts/free/Roboto-Mono-Light/RobotoMono-Light.ttf','truetype','',3,''),(789,'RobotoMono','RobotoMono-LightItalic','italic',400,'RobotoMono LightItalic','RobotoMonoLightItalic','/-/fonts/free/Roboto-Mono-Light/RobotoMono-LightItalic.ttf','truetype','',3,''),(790,'RobotoMono','RobotoMono-Medium','normal',500,'RobotoMono Medium','RobotoMonoMedium','/-/fonts/free/Roboto-Mono-Light/RobotoMono-Medium.ttf','truetype','',3,''),(791,'RobotoMono','RobotoMono-MediumItalic','italic',500,'RobotoMono MediumItalic','RobotoMonoMediumItalic','/-/fonts/free/Roboto-Mono-Light/RobotoMono-MediumItalic.ttf','truetype','',3,''),(792,'RobotoMono','RobotoMono-Bold','normal',800,'RobotoMono Bold','RobotoMonoBold','/-/fonts/free/Roboto-Mono/RobotoMono-Bold.ttf','truetype','',3,''),(793,'RobotoMono','RobotoMono-BoldItalic','italic',800,'RobotoMono BoldItalic','RobotoMonoBoldItalic','/-/fonts/free/Roboto-Mono/RobotoMono-BoldItalic.ttf','truetype','',3,''),(794,'RobotoMono','RobotoMono-Italic','italic',400,'RobotoMono Italic','RobotoMonoItalic','/-/fonts/free/Roboto-Mono/RobotoMono-Italic.ttf','truetype','',3,''),(795,'RobotoMono','RobotoMono-Regular','normal',400,'RobotoMono Regular','RobotoMonoRegular','/-/fonts/free/Roboto-Mono/RobotoMono-Regular.ttf','truetype','',3,''),(796,'Roboto','Roboto-Bold','normal',700,'Roboto Bold','RobotoBold','/-/fonts/free/Roboto/Roboto-Bold.ttf','truetype','',3,''),(797,'Roboto','Roboto-BoldItalic','italic',700,'Roboto BoldItalic','RobotoBoldItalic','/-/fonts/free/Roboto/Roboto-BoldItalic.ttf','truetype','',3,''),(798,'Roboto','Roboto-Italic','italic',400,'Roboto Italic','RobotoItalic','/-/fonts/free/Roboto/Roboto-Italic.ttf','truetype','',3,''),(799,'Roboto','Roboto-Regular','normal',400,'Roboto Regular','RobotoRegular','/-/fonts/free/Roboto/Roboto-Regular.ttf','truetype','',3,''),(800,'Rubik','Rubik-Light','normal',400,'Rubik Light','RubikLight','/-/fonts/free/Rubik-Light/Rubik-Light.ttf','truetype','',3,''),(801,'Rubik','Rubik-LightItalic','italic',400,'Rubik LightItalic','RubikLightItalic','/-/fonts/free/Rubik-Light/Rubik-LightItalic.ttf','truetype','',3,''),(802,'Rubik','Rubik-Medium','normal',500,'Rubik Medium','RubikMedium','/-/fonts/free/Rubik-Light/Rubik-Medium.ttf','truetype','',3,''),(803,'Rubik','Rubik-MediumItalic','italic',500,'Rubik MediumItalic','RubikMediumItalic','/-/fonts/free/Rubik-Light/Rubik-MediumItalic.ttf','truetype','',3,''),(804,'Rubik','Rubik-Bold','normal',800,'Rubik Bold','RubikBold','/-/fonts/free/Rubik/Rubik-Bold.ttf','truetype','',3,''),(805,'Rubik','Rubik-BoldItalic','italic',800,'Rubik BoldItalic','RubikBoldItalic','/-/fonts/free/Rubik/Rubik-BoldItalic.ttf','truetype','',3,''),(806,'Rubik','Rubik-Italic','italic',400,'Rubik Italic','RubikItalic','/-/fonts/free/Rubik/Rubik-Italic.ttf','truetype','',3,''),(807,'Rubik','Rubik-Regular','normal',400,'Rubik Regular','RubikRegular','/-/fonts/free/Rubik/Rubik-Regular.ttf','truetype','',3,''),(808,'Scada','Scada-Bold','normal',800,'Scada Bold','ScadaBold','/-/fonts/free/Scada/Scada-Bold.ttf','truetype','',3,''),(809,'Scada','Scada-BoldItalic','italic',800,'Scada BoldItalic','ScadaBoldItalic','/-/fonts/free/Scada/Scada-BoldItalic.ttf','truetype','',3,''),(810,'Scada','Scada-Italic','italic',400,'Scada Italic','ScadaItalic','/-/fonts/free/Scada/Scada-Italic.ttf','truetype','',3,''),(811,'Scada','Scada-Regular','normal',400,'Scada Regular','ScadaRegular','/-/fonts/free/Scada/Scada-Regular.ttf','truetype','',3,''),(812,'Tinos','Tinos-Bold','normal',800,'Tinos Bold','TinosBold','/-/fonts/free/Tinos/Tinos-Bold.ttf','truetype','',3,''),(813,'Tinos','Tinos-BoldItalic','italic',800,'Tinos BoldItalic','TinosBoldItalic','/-/fonts/free/Tinos/Tinos-BoldItalic.ttf','truetype','',3,''),(814,'Tinos','Tinos-Italic','italic',400,'Tinos Italic','TinosItalic','/-/fonts/free/Tinos/Tinos-Italic.ttf','truetype','',3,''),(815,'Tinos','Tinos-Regular','normal',400,'Tinos Regular','TinosRegular','/-/fonts/free/Tinos/Tinos-Regular.ttf','truetype','',3,''),(828,'Roboto','Roboto','normal',500,'Roboto','Roboto','/-/fonts/free/Roboto-Light/Roboto-Medium.ttf','truetype','',3,''),(829,'Lobster','Lobster','normal',400,'Lobster','Lobster','/-/fonts/free/Lobster/Lobster-400.ttf','truetype','',3,''),(830,'Pacifico','Pacifico','normal',400,'Pacifico','Pacifico','/-/fonts/free/Pacifico/Pacifico-400.ttf','truetype','',3,''),(836,'AbrilFatface','AbrilFatface-Regular','normal',400,'','','/-/fonts/2018-09/AbrilFatface-Regular.ttf','truetype','',3,''),(837,'Allerta','Allerta-Regular','normal',400,'','','/-/fonts/2018-09/Allerta-Regular.ttf','truetype','',3,''),(838,'Andada','Andada-Regular','normal',400,'','','/-/fonts/2018-09/Andada-Regular.ttf','truetype','',3,''),(839,'Antic','Antic-Regular','normal',400,'','','/-/fonts/2018-09/Antic-Regular.ttf','truetype','',3,''),(840,'AnticSlab','AnticSlab-Regular','normal',400,'','','/-/fonts/2018-09/AnticSlab-Regular.ttf','truetype','',3,''),(841,'Arvo','Arvo-BoldItalic','italic',800,'','','/-/fonts/2018-09/Arvo-BoldItalic.ttf','truetype','',3,''),(842,'Arvo','Arvo-Bold','normal',800,'','','/-/fonts/2018-09/Arvo-Bold.ttf','truetype','',3,''),(843,'Arvo','Arvo-Italic','italic',400,'','','/-/fonts/2018-09/Arvo-Italic.ttf','truetype','',3,''),(844,'Arvo','Arvo-Regular','normal',400,'','','/-/fonts/2018-09/Arvo-Regular.ttf','truetype','',3,''),(845,'BadScript','BadScript-Regular','normal',400,'','','/-/fonts/2018-09/BadScript-Regular.ttf','truetype','',3,''),(846,'Baloo','Baloo-Regular','normal',400,'','','/-/fonts/2018-09/Baloo-Regular.ttf','truetype','',3,''),(847,'Basic','Basic-Regular','normal',400,'','','/-/fonts/2018-09/Basic-Regular.ttf','truetype','',3,''),(848,'Bellefair','Bellefair-Regular','normal',400,'','','/-/fonts/2018-09/Bellefair-Regular.ttf','truetype','',3,''),(849,'Biryani','Biryani-Black','normal',900,'','','/-/fonts/2018-09/Biryani-Black.ttf','truetype','',3,''),(850,'Biryani','Biryani-Bold','normal',800,'','','/-/fonts/2018-09/Biryani-Bold.ttf','truetype','',3,''),(851,'Biryani','Biryani-ExtraBold','normal',800,'','','/-/fonts/2018-09/Biryani-ExtraBold.ttf','truetype','',3,''),(852,'Biryani','Biryani-ExtraLight','normal',300,'','','/-/fonts/2018-09/Biryani-ExtraLight.ttf','truetype','',3,''),(853,'Biryani','Biryani-Light','normal',300,'','','/-/fonts/2018-09/Biryani-Light.ttf','truetype','',3,''),(854,'Biryani','Biryani-Regular','normal',400,'','','/-/fonts/2018-09/Biryani-Regular.ttf','truetype','',3,''),(855,'Biryani','Biryani-SemiBold','normal',600,'','','/-/fonts/2018-09/Biryani-SemiBold.ttf','truetype','',3,''),(856,'BowlbyOne','BowlbyOne-Regular','normal',400,'','','/-/fonts/2018-09/BowlbyOne-Regular.ttf','truetype','',3,''),(857,'BreeSerif','BreeSerif-Regular','normal',400,'','','/-/fonts/2018-09/BreeSerif-Regular.ttf','truetype','',3,''),(858,'BungeeInline','BungeeInline-Regular','normal',400,'','','/-/fonts/2018-09/BungeeInline-Regular.ttf','truetype','',3,''),(859,'CabinCondensed','CabinCondensed-Bold','normal',800,'','','/-/fonts/2018-09/CabinCondensed-Bold.ttf','truetype','',3,''),(860,'CabinCondensed','CabinCondensed-Medium','normal',500,'','','/-/fonts/2018-09/CabinCondensed-Medium.ttf','truetype','',3,''),(861,'CabinCondensed','CabinCondensed-Regular','normal',400,'','','/-/fonts/2018-09/CabinCondensed-Regular.ttf','truetype','',3,''),(862,'CabinCondensed','CabinCondensed-SemiBold','normal',600,'','','/-/fonts/2018-09/CabinCondensed-SemiBold.ttf','truetype','',3,''),(863,'CantataOne','CantataOne-Regular','normal',400,'','','/-/fonts/2018-09/CantataOne-Regular.ttf','truetype','',3,''),(864,'Caudex','Caudex-BoldItalic','italic',800,'','','/-/fonts/2018-09/Caudex-BoldItalic.ttf','truetype','',3,''),(865,'Caudex','Caudex-Bold','normal',800,'','','/-/fonts/2018-09/Caudex-Bold.ttf','truetype','',3,''),(866,'Caudex','Caudex-Italic','italic',400,'','','/-/fonts/2018-09/Caudex-Italic.ttf','truetype','',3,''),(867,'Caudex','Caudex-Regular','normal',400,'','','/-/fonts/2018-09/Caudex-Regular.ttf','truetype','',3,''),(868,'Caveat','Caveat-Bold','normal',800,'','','/-/fonts/2018-09/Caveat-Bold.ttf','truetype','',3,''),(869,'Caveat','Caveat-Regular','normal',400,'','','/-/fonts/2018-09/Caveat-Regular.ttf','truetype','',3,''),(870,'Chivo','Chivo-BlackItalic','italic',900,'','','/-/fonts/2018-09/Chivo-BlackItalic.ttf','truetype','',3,''),(871,'Chivo','Chivo-Black','normal',900,'','','/-/fonts/2018-09/Chivo-Black.ttf','truetype','',3,''),(872,'Chivo','Chivo-BoldItalic','italic',800,'','','/-/fonts/2018-09/Chivo-BoldItalic.ttf','truetype','',3,''),(873,'Chivo','Chivo-Bold','normal',800,'','','/-/fonts/2018-09/Chivo-Bold.ttf','truetype','',3,''),(874,'Chivo','Chivo-Italic','italic',400,'','','/-/fonts/2018-09/Chivo-Italic.ttf','truetype','',3,''),(875,'Chivo','Chivo-LightItalic','italic',300,'','','/-/fonts/2018-09/Chivo-LightItalic.ttf','truetype','',3,''),(876,'Chivo','Chivo-Light','normal',300,'','','/-/fonts/2018-09/Chivo-Light.ttf','truetype','',3,''),(877,'Chivo','Chivo-Regular','normal',400,'','','/-/fonts/2018-09/Chivo-Regular.ttf','truetype','',3,''),(878,'Cinzel','Cinzel-Black','normal',900,'','','/-/fonts/2018-09/Cinzel-Black.ttf','truetype','',3,''),(879,'Cinzel','Cinzel-Bold','normal',800,'','','/-/fonts/2018-09/Cinzel-Bold.ttf','truetype','',3,''),(880,'Cinzel','Cinzel-Regular','normal',400,'','','/-/fonts/2018-09/Cinzel-Regular.ttf','truetype','',3,''),(881,'Comfortaa','Comfortaa-Bold','normal',800,'','','/-/fonts/2018-09/Comfortaa-Bold.ttf','truetype','',3,''),(882,'Comfortaa','Comfortaa-Light','normal',300,'','','/-/fonts/2018-09/Comfortaa-Light.ttf','truetype','',3,''),(883,'Comfortaa','Comfortaa-Regular','normal',400,'','','/-/fonts/2018-09/Comfortaa-Regular.ttf','truetype','',3,''),(884,'CrimsonText','CrimsonText-BoldItalic','italic',800,'','','/-/fonts/2018-09/CrimsonText-BoldItalic.ttf','truetype','',3,''),(885,'CrimsonText','CrimsonText-Bold','normal',800,'','','/-/fonts/2018-09/CrimsonText-Bold.ttf','truetype','',3,''),(886,'CrimsonText','CrimsonText-Italic','italic',400,'','','/-/fonts/2018-09/CrimsonText-Italic.ttf','truetype','',3,''),(887,'CrimsonText','CrimsonText-Regular','normal',400,'','','/-/fonts/2018-09/CrimsonText-Regular.ttf','truetype','',3,''),(888,'CrimsonText','CrimsonText-SemiBoldItalic','italic',600,'','','/-/fonts/2018-09/CrimsonText-SemiBoldItalic.ttf','truetype','',3,''),(889,'CrimsonText','CrimsonText-SemiBold','normal',600,'','','/-/fonts/2018-09/CrimsonText-SemiBold.ttf','truetype','',3,''),(890,'CutiveMono','CutiveMono-Regular','normal',400,'','','/-/fonts/2018-09/CutiveMono-Regular.ttf','truetype','',3,''),(891,'Cutive','Cutive-Regular','normal',400,'','','/-/fonts/2018-09/Cutive-Regular.ttf','truetype','',3,''),(892,'DancingScript','DancingScript-Bold','normal',800,'','','/-/fonts/2018-09/DancingScript-Bold.ttf','truetype','',3,''),(893,'DancingScript','DancingScript-Regular','normal',400,'','','/-/fonts/2018-09/DancingScript-Regular.ttf','truetype','',3,''),(894,'DidactGothic','DidactGothic-Regular','normal',400,'','','/-/fonts/2018-09/DidactGothic-Regular.ttf','truetype','',3,''),(895,'Dosis','Dosis-Bold','normal',800,'','','/-/fonts/2018-09/Dosis-Bold.ttf','truetype','',3,''),(896,'Dosis','Dosis-ExtraBold','normal',800,'','','/-/fonts/2018-09/Dosis-ExtraBold.ttf','truetype','',3,''),(897,'Dosis','Dosis-ExtraLight','normal',300,'','','/-/fonts/2018-09/Dosis-ExtraLight.ttf','truetype','',3,''),(898,'Dosis','Dosis-Light','normal',300,'','','/-/fonts/2018-09/Dosis-Light.ttf','truetype','',3,''),(899,'Dosis','Dosis-Medium','normal',500,'','','/-/fonts/2018-09/Dosis-Medium.ttf','truetype','',3,''),(900,'Dosis','Dosis-Regular','normal',400,'','','/-/fonts/2018-09/Dosis-Regular.ttf','truetype','',3,''),(901,'Dosis','Dosis-SemiBold','normal',600,'','','/-/fonts/2018-09/Dosis-SemiBold.ttf','truetype','',3,''),(902,'EBGaramond','EBGaramond-BoldItalic','italic',800,'','','/-/fonts/2018-09/EBGaramond-BoldItalic.ttf','truetype','',3,''),(903,'EBGaramond','EBGaramond-Bold','normal',800,'','','/-/fonts/2018-09/EBGaramond-Bold.ttf','truetype','',3,''),(904,'EBGaramond','EBGaramond-ExtraBoldItalic','italic',800,'','','/-/fonts/2018-09/EBGaramond-ExtraBoldItalic.ttf','truetype','',3,''),(905,'EBGaramond','EBGaramond-ExtraBold','normal',800,'','','/-/fonts/2018-09/EBGaramond-ExtraBold.ttf','truetype','',3,''),(906,'EBGaramond','EBGaramond-Italic','italic',400,'','','/-/fonts/2018-09/EBGaramond-Italic.ttf','truetype','',3,''),(907,'EBGaramond','EBGaramond-MediumItalic','italic',500,'','','/-/fonts/2018-09/EBGaramond-MediumItalic.ttf','truetype','',3,''),(908,'EBGaramond','EBGaramond-Medium','normal',500,'','','/-/fonts/2018-09/EBGaramond-Medium.ttf','truetype','',3,''),(909,'EBGaramond','EBGaramond-Regular','normal',400,'','','/-/fonts/2018-09/EBGaramond-Regular.ttf','truetype','',3,''),(910,'EBGaramond','EBGaramond-SemiBoldItalic','italic',600,'','','/-/fonts/2018-09/EBGaramond-SemiBoldItalic.ttf','truetype','',3,''),(911,'EBGaramond','EBGaramond-SemiBold','normal',600,'','','/-/fonts/2018-09/EBGaramond-SemiBold.ttf','truetype','',3,''),(912,'Eczar','Eczar-Bold','normal',800,'','','/-/fonts/2018-09/Eczar-Bold.ttf','truetype','',3,''),(913,'Eczar','Eczar-ExtraBold','normal',800,'','','/-/fonts/2018-09/Eczar-ExtraBold.ttf','truetype','',3,''),(914,'Eczar','Eczar-Medium','normal',500,'','','/-/fonts/2018-09/Eczar-Medium.ttf','truetype','',3,''),(915,'Eczar','Eczar-Regular','normal',400,'','','/-/fonts/2018-09/Eczar-Regular.ttf','truetype','',3,''),(916,'Eczar','Eczar-SemiBold','normal',600,'','','/-/fonts/2018-09/Eczar-SemiBold.ttf','truetype','',3,''),(917,'Faustina','Faustina-BoldItalic','italic',800,'','','/-/fonts/2018-09/Faustina-BoldItalic.ttf','truetype','',3,''),(918,'Faustina','Faustina-Bold','normal',800,'','','/-/fonts/2018-09/Faustina-Bold.ttf','truetype','',3,''),(919,'Faustina','Faustina-Italic','italic',400,'','','/-/fonts/2018-09/Faustina-Italic.ttf','truetype','',3,''),(920,'Faustina','Faustina-MediumItalic','italic',500,'','','/-/fonts/2018-09/Faustina-MediumItalic.ttf','truetype','',3,''),(921,'Faustina','Faustina-Medium','normal',500,'','','/-/fonts/2018-09/Faustina-Medium.ttf','truetype','',3,''),(922,'Faustina','Faustina-Regular','normal',400,'','','/-/fonts/2018-09/Faustina-Regular.ttf','truetype','',3,''),(923,'Faustina','Faustina-SemiBoldItalic','italic',600,'','','/-/fonts/2018-09/Faustina-SemiBoldItalic.ttf','truetype','',3,''),(924,'Faustina','Faustina-SemiBold','normal',600,'','','/-/fonts/2018-09/Faustina-SemiBold.ttf','truetype','',3,''),(925,'FrancoisOne','FrancoisOne-Regular','normal',400,'','','/-/fonts/2018-09/FrancoisOne-Regular.ttf','truetype','',3,''),(926,'GenBasBI.ttf','GenBasBI','normal',400,'','','/-/fonts/2018-09/GenBasBI.ttf','truetype','',3,''),(927,'GenBasB.ttf','GenBasB','normal',400,'','','/-/fonts/2018-09/GenBasB.ttf','truetype','',3,''),(928,'GenBasI.ttf','GenBasI','normal',400,'','','/-/fonts/2018-09/GenBasI.ttf','truetype','',3,''),(929,'GenBasR.ttf','GenBasR','normal',400,'','','/-/fonts/2018-09/GenBasR.ttf','truetype','',3,''),(930,'Gruppo','Gruppo-Regular','normal',400,'','','/-/fonts/2018-09/Gruppo-Regular.ttf','truetype','',3,''),(931,'HammersmithOne','HammersmithOne-Regular','normal',400,'','','/-/fonts/2018-09/HammersmithOne-Regular.ttf','truetype','',3,''),(932,'HappyMonkey','HappyMonkey-Regular','normal',400,'','','/-/fonts/2018-09/HappyMonkey-Regular.ttf','truetype','',3,''),(933,'Hind','Hind-Bold','normal',800,'','','/-/fonts/2018-09/Hind-Bold.ttf','truetype','',3,''),(934,'Hind','Hind-Light','normal',300,'','','/-/fonts/2018-09/Hind-Light.ttf','truetype','',3,''),(935,'Hind','Hind-Medium','normal',500,'','','/-/fonts/2018-09/Hind-Medium.ttf','truetype','',3,''),(936,'Hind','Hind-Regular','normal',400,'','','/-/fonts/2018-09/Hind-Regular.ttf','truetype','',3,''),(937,'Hind','Hind-SemiBold','normal',600,'','','/-/fonts/2018-09/Hind-SemiBold.ttf','truetype','',3,''),(938,'HindSiliguri','HindSiliguri-Bold','normal',800,'','','/-/fonts/2018-09/HindSiliguri-Bold.ttf','truetype','',3,''),(939,'HindSiliguri','HindSiliguri-Light','normal',300,'','','/-/fonts/2018-09/HindSiliguri-Light.ttf','truetype','',3,''),(940,'HindSiliguri','HindSiliguri-Medium','normal',500,'','','/-/fonts/2018-09/HindSiliguri-Medium.ttf','truetype','',3,''),(941,'HindSiliguri','HindSiliguri-Regular','normal',400,'','','/-/fonts/2018-09/HindSiliguri-Regular.ttf','truetype','',3,''),(942,'HindSiliguri','HindSiliguri-SemiBold','normal',600,'','','/-/fonts/2018-09/HindSiliguri-SemiBold.ttf','truetype','',3,''),(943,'JosefinSans','JosefinSans-BoldItalic','italic',800,'','','/-/fonts/2018-09/JosefinSans-BoldItalic.ttf','truetype','',3,''),(944,'JosefinSans','JosefinSans-Bold','normal',800,'','','/-/fonts/2018-09/JosefinSans-Bold.ttf','truetype','',3,''),(945,'JosefinSans','JosefinSans-Italic','italic',400,'','','/-/fonts/2018-09/JosefinSans-Italic.ttf','truetype','',3,''),(946,'JosefinSans','JosefinSans-LightItalic','italic',300,'','','/-/fonts/2018-09/JosefinSans-LightItalic.ttf','truetype','',3,''),(947,'JosefinSans','JosefinSans-Light','normal',300,'','','/-/fonts/2018-09/JosefinSans-Light.ttf','truetype','',3,''),(948,'JosefinSans','JosefinSans-Regular','normal',400,'','','/-/fonts/2018-09/JosefinSans-Regular.ttf','truetype','',3,''),(949,'JosefinSans','JosefinSans-SemiBoldItalic','italic',600,'','','/-/fonts/2018-09/JosefinSans-SemiBoldItalic.ttf','truetype','',3,''),(950,'JosefinSans','JosefinSans-SemiBold','normal',600,'','','/-/fonts/2018-09/JosefinSans-SemiBold.ttf','truetype','',3,''),(951,'JosefinSans','JosefinSans-ThinItalic','italic',200,'','','/-/fonts/2018-09/JosefinSans-ThinItalic.ttf','truetype','',3,''),(952,'JosefinSans','JosefinSans-Thin','normal',200,'','','/-/fonts/2018-09/JosefinSans-Thin.ttf','truetype','',3,''),(953,'JosefinSlab','JosefinSlab-BoldItalic','italic',800,'','','/-/fonts/2018-09/JosefinSlab-BoldItalic.ttf','truetype','',3,''),(954,'JosefinSlab','JosefinSlab-Bold','normal',800,'','','/-/fonts/2018-09/JosefinSlab-Bold.ttf','truetype','',3,''),(955,'JosefinSlab','JosefinSlab-Italic','italic',400,'','','/-/fonts/2018-09/JosefinSlab-Italic.ttf','truetype','',3,''),(956,'JosefinSlab','JosefinSlab-LightItalic','italic',300,'','','/-/fonts/2018-09/JosefinSlab-LightItalic.ttf','truetype','',3,''),(957,'JosefinSlab','JosefinSlab-Light','normal',300,'','','/-/fonts/2018-09/JosefinSlab-Light.ttf','truetype','',3,''),(958,'JosefinSlab','JosefinSlab-Regular','normal',400,'','','/-/fonts/2018-09/JosefinSlab-Regular.ttf','truetype','',3,''),(959,'JosefinSlab','JosefinSlab-SemiBoldItalic','italic',600,'','','/-/fonts/2018-09/JosefinSlab-SemiBoldItalic.ttf','truetype','',3,''),(960,'JosefinSlab','JosefinSlab-SemiBold','normal',600,'','','/-/fonts/2018-09/JosefinSlab-SemiBold.ttf','truetype','',3,''),(961,'JosefinSlab','JosefinSlab-ThinItalic','italic',200,'','','/-/fonts/2018-09/JosefinSlab-ThinItalic.ttf','truetype','',3,''),(962,'JosefinSlab','JosefinSlab-Thin','normal',200,'','','/-/fonts/2018-09/JosefinSlab-Thin.ttf','truetype','',3,''),(963,'JuliusSansOne','JuliusSansOne-Regular','normal',400,'','','/-/fonts/2018-09/JuliusSansOne-Regular.ttf','truetype','',3,''),(964,'Jura','Jura-Bold','normal',800,'','','/-/fonts/2018-09/Jura-Bold.ttf','truetype','',3,''),(965,'Jura','Jura-Light','normal',300,'','','/-/fonts/2018-09/Jura-Light.ttf','truetype','',3,''),(966,'Jura','Jura-Medium','normal',500,'','','/-/fonts/2018-09/Jura-Medium.ttf','truetype','',3,''),(967,'Jura','Jura-Regular','normal',400,'','','/-/fonts/2018-09/Jura-Regular.ttf','truetype','',3,''),(968,'Jura','Jura-SemiBold','normal',600,'','','/-/fonts/2018-09/Jura-SemiBold.ttf','truetype','',3,''),(969,'Karla','Karla-BoldItalic','italic',800,'','','/-/fonts/2018-09/Karla-BoldItalic.ttf','truetype','',3,''),(970,'Karla','Karla-Bold','normal',800,'','','/-/fonts/2018-09/Karla-Bold.ttf','truetype','',3,''),(971,'Karla','Karla-Italic','italic',400,'','','/-/fonts/2018-09/Karla-Italic.ttf','truetype','',3,''),(972,'Karla','Karla-Regular','normal',400,'','','/-/fonts/2018-09/Karla-Regular.ttf','truetype','',3,''),(973,'Kosugi','Kosugi-Regular','normal',400,'','','/-/fonts/2018-09/Kosugi-Regular.ttf','truetype','',3,''),(974,'Lato','Lato-BlackItalic','italic',900,'','','/-/fonts/2018-09/Lato-BlackItalic.ttf','truetype','',3,''),(975,'Lato','Lato-Black','normal',900,'','','/-/fonts/2018-09/Lato-Black.ttf','truetype','',3,''),(976,'Lato','Lato-BoldItalic','italic',800,'','','/-/fonts/2018-09/Lato-BoldItalic.ttf','truetype','',3,''),(977,'Lato','Lato-Bold','normal',800,'','','/-/fonts/2018-09/Lato-Bold.ttf','truetype','',3,''),(978,'Lato','Lato-HairlineItalic','italic',400,'','','/-/fonts/2018-09/Lato-HairlineItalic.ttf','truetype','',3,''),(979,'Lato','Lato-Hairline','normal',400,'','','/-/fonts/2018-09/Lato-Hairline.ttf','truetype','',3,''),(980,'Lato','Lato-Italic','italic',400,'','','/-/fonts/2018-09/Lato-Italic.ttf','truetype','',3,''),(981,'Lato','Lato-LightItalic','italic',300,'','','/-/fonts/2018-09/Lato-LightItalic.ttf','truetype','',3,''),(982,'Lato','Lato-Light','normal',300,'','','/-/fonts/2018-09/Lato-Light.ttf','truetype','',3,''),(983,'Lato','Lato-Regular','normal',400,'','','/-/fonts/2018-09/Lato-Regular.ttf','truetype','',3,''),(984,'LibreBaskerville','LibreBaskerville-Bold','normal',800,'','','/-/fonts/2018-09/LibreBaskerville-Bold.ttf','truetype','',3,''),(985,'LibreBaskerville','LibreBaskerville-Italic','italic',400,'','','/-/fonts/2018-09/LibreBaskerville-Italic.ttf','truetype','',3,''),(986,'LibreBaskerville','LibreBaskerville-Regular','normal',400,'','','/-/fonts/2018-09/LibreBaskerville-Regular.ttf','truetype','',3,''),(987,'Limelight','Limelight-Regular','normal',300,'','','/-/fonts/2018-09/Limelight-Regular.ttf','truetype','',3,''),(988,'Lora','Lora-BoldItalic','italic',800,'','','/-/fonts/2018-09/Lora-BoldItalic.ttf','truetype','',3,''),(989,'Lora','Lora-Bold','normal',800,'','','/-/fonts/2018-09/Lora-Bold.ttf','truetype','',3,''),(990,'Lora','Lora-Italic','italic',400,'','','/-/fonts/2018-09/Lora-Italic.ttf','truetype','',3,''),(991,'Lora','Lora-Regular','normal',400,'','','/-/fonts/2018-09/Lora-Regular.ttf','truetype','',3,''),(992,'Mada','Mada-Black','normal',900,'','','/-/fonts/2018-09/Mada-Black.ttf','truetype','',3,''),(993,'Mada','Mada-Bold','normal',800,'','','/-/fonts/2018-09/Mada-Bold.ttf','truetype','',3,''),(994,'Mada','Mada-ExtraLight','normal',300,'','','/-/fonts/2018-09/Mada-ExtraLight.ttf','truetype','',3,''),(995,'Mada','Mada-Light','normal',300,'','','/-/fonts/2018-09/Mada-Light.ttf','truetype','',3,''),(996,'Mada','Mada-Medium','normal',500,'','','/-/fonts/2018-09/Mada-Medium.ttf','truetype','',3,''),(997,'Mada','Mada-Regular','normal',400,'','','/-/fonts/2018-09/Mada-Regular.ttf','truetype','',3,''),(998,'Mada','Mada-SemiBold','normal',600,'','','/-/fonts/2018-09/Mada-SemiBold.ttf','truetype','',3,''),(999,'MarcellusSC','MarcellusSC-Regular','normal',400,'','','/-/fonts/2018-09/MarcellusSC-Regular.ttf','truetype','',3,''),(1000,'MavenPro','MavenPro-Black','normal',900,'','','/-/fonts/2018-09/MavenPro-Black.ttf','truetype','',3,''),(1001,'MavenPro','MavenPro-Bold','normal',800,'','','/-/fonts/2018-09/MavenPro-Bold.ttf','truetype','',3,''),(1002,'MavenPro','MavenPro-Medium','normal',500,'','','/-/fonts/2018-09/MavenPro-Medium.ttf','truetype','',3,''),(1003,'MavenPro','MavenPro-Regular','normal',400,'','','/-/fonts/2018-09/MavenPro-Regular.ttf','truetype','',3,''),(1004,'MeieScript','MeieScript-Regular','normal',400,'','','/-/fonts/2018-09/MeieScript-Regular.ttf','truetype','',3,''),(1005,'Merriweather','Merriweather-BlackItalic','italic',900,'','','/-/fonts/2018-09/Merriweather-BlackItalic.ttf','truetype','',3,''),(1006,'Merriweather','Merriweather-Black','normal',900,'','','/-/fonts/2018-09/Merriweather-Black.ttf','truetype','',3,''),(1007,'Merriweather','Merriweather-BoldItalic','italic',800,'','','/-/fonts/2018-09/Merriweather-BoldItalic.ttf','truetype','',3,''),(1008,'Merriweather','Merriweather-Bold','normal',800,'','','/-/fonts/2018-09/Merriweather-Bold.ttf','truetype','',3,''),(1009,'Merriweather','Merriweather-Italic','italic',400,'','','/-/fonts/2018-09/Merriweather-Italic.ttf','truetype','',3,''),(1010,'Merriweather','Merriweather-LightItalic','italic',300,'','','/-/fonts/2018-09/Merriweather-LightItalic.ttf','truetype','',3,''),(1011,'Merriweather','Merriweather-Light','normal',300,'','','/-/fonts/2018-09/Merriweather-Light.ttf','truetype','',3,''),(1012,'Merriweather','Merriweather-Regular','normal',400,'','','/-/fonts/2018-09/Merriweather-Regular.ttf','truetype','',3,''),(1013,'MerriweatherSans','MerriweatherSans-Bold','normal',800,'','','/-/fonts/2018-09/MerriweatherSans-Bold.ttf','truetype','',3,''),(1014,'MerriweatherSans','MerriweatherSans-ExtraBold','normal',800,'','','/-/fonts/2018-09/MerriweatherSans-ExtraBold.ttf','truetype','',3,''),(1015,'MerriweatherSans','MerriweatherSans-Italic','italic',400,'','','/-/fonts/2018-09/MerriweatherSans-Italic.ttf','truetype','',3,''),(1016,'MerriweatherSans','MerriweatherSans-Light','normal',300,'','','/-/fonts/2018-09/MerriweatherSans-Light.ttf','truetype','',3,''),(1017,'MerriweatherSans','MerriweatherSans-Regular','normal',400,'','','/-/fonts/2018-09/MerriweatherSans-Regular.ttf','truetype','',3,''),(1018,'Muli','Muli-BlackItalic','italic',900,'','','/-/fonts/2018-09/Muli-BlackItalic.ttf','truetype','',3,''),(1019,'Muli','Muli-Black','normal',900,'','','/-/fonts/2018-09/Muli-Black.ttf','truetype','',3,''),(1020,'Muli','Muli-BoldItalic','italic',800,'','','/-/fonts/2018-09/Muli-BoldItalic.ttf','truetype','',3,''),(1021,'Muli','Muli-Bold','normal',800,'','','/-/fonts/2018-09/Muli-Bold.ttf','truetype','',3,''),(1022,'Muli','Muli-ExtraBoldItalic','italic',800,'','','/-/fonts/2018-09/Muli-ExtraBoldItalic.ttf','truetype','',3,''),(1023,'Muli','Muli-ExtraBold','normal',800,'','','/-/fonts/2018-09/Muli-ExtraBold.ttf','truetype','',3,''),(1024,'Muli','Muli-ExtraLightItalic','italic',300,'','','/-/fonts/2018-09/Muli-ExtraLightItalic.ttf','truetype','',3,''),(1025,'Muli','Muli-ExtraLight','normal',300,'','','/-/fonts/2018-09/Muli-ExtraLight.ttf','truetype','',3,''),(1026,'Muli','Muli-Italic','italic',400,'','','/-/fonts/2018-09/Muli-Italic.ttf','truetype','',3,''),(1027,'Muli','Muli-LightItalic','italic',300,'','','/-/fonts/2018-09/Muli-LightItalic.ttf','truetype','',3,''),(1028,'Muli','Muli-Light','normal',300,'','','/-/fonts/2018-09/Muli-Light.ttf','truetype','',3,''),(1029,'Muli','Muli-Regular','normal',400,'','','/-/fonts/2018-09/Muli-Regular.ttf','truetype','',3,''),(1030,'Muli','Muli-SemiBoldItalic','italic',600,'','','/-/fonts/2018-09/Muli-SemiBoldItalic.ttf','truetype','',3,''),(1031,'Muli','Muli-SemiBold','normal',600,'','','/-/fonts/2018-09/Muli-SemiBold.ttf','truetype','',3,''),(1032,'NixieOne','NixieOne-Regular','normal',400,'','','/-/fonts/2018-09/NixieOne-Regular.ttf','truetype','',3,''),(1033,'Nunito','Nunito-BlackItalic','italic',900,'','','/-/fonts/2018-09/Nunito-BlackItalic.ttf','truetype','',3,''),(1034,'Nunito','Nunito-Black','normal',900,'','','/-/fonts/2018-09/Nunito-Black.ttf','truetype','',3,''),(1035,'Nunito','Nunito-BoldItalic','italic',800,'','','/-/fonts/2018-09/Nunito-BoldItalic.ttf','truetype','',3,''),(1036,'Nunito','Nunito-Bold','normal',800,'','','/-/fonts/2018-09/Nunito-Bold.ttf','truetype','',3,''),(1037,'Nunito','Nunito-ExtraBoldItalic','italic',800,'','','/-/fonts/2018-09/Nunito-ExtraBoldItalic.ttf','truetype','',3,''),(1038,'Nunito','Nunito-ExtraBold','normal',800,'','','/-/fonts/2018-09/Nunito-ExtraBold.ttf','truetype','',3,''),(1039,'Nunito','Nunito-ExtraLightItalic','italic',300,'','','/-/fonts/2018-09/Nunito-ExtraLightItalic.ttf','truetype','',3,''),(1040,'Nunito','Nunito-ExtraLight','normal',300,'','','/-/fonts/2018-09/Nunito-ExtraLight.ttf','truetype','',3,''),(1041,'Nunito','Nunito-Italic','italic',400,'','','/-/fonts/2018-09/Nunito-Italic.ttf','truetype','',3,''),(1042,'Nunito','Nunito-LightItalic','italic',300,'','','/-/fonts/2018-09/Nunito-LightItalic.ttf','truetype','',3,''),(1043,'Nunito','Nunito-Light','normal',300,'','','/-/fonts/2018-09/Nunito-Light.ttf','truetype','',3,''),(1044,'Nunito','Nunito-Regular','normal',400,'','','/-/fonts/2018-09/Nunito-Regular.ttf','truetype','',3,''),(1045,'NunitoSans','NunitoSans-BlackItalic','italic',900,'','','/-/fonts/2018-09/NunitoSans-BlackItalic.ttf','truetype','',3,''),(1046,'NunitoSans','NunitoSans-Black','normal',900,'','','/-/fonts/2018-09/NunitoSans-Black.ttf','truetype','',3,''),(1047,'NunitoSans','NunitoSans-BoldItalic','italic',800,'','','/-/fonts/2018-09/NunitoSans-BoldItalic.ttf','truetype','',3,''),(1048,'NunitoSans','NunitoSans-Bold','normal',800,'','','/-/fonts/2018-09/NunitoSans-Bold.ttf','truetype','',3,''),(1049,'NunitoSans','NunitoSans-ExtraBoldItalic','italic',800,'','','/-/fonts/2018-09/NunitoSans-ExtraBoldItalic.ttf','truetype','',3,''),(1050,'NunitoSans','NunitoSans-ExtraBold','normal',800,'','','/-/fonts/2018-09/NunitoSans-ExtraBold.ttf','truetype','',3,''),(1051,'NunitoSans','NunitoSans-ExtraLight','normal',300,'','','/-/fonts/2018-09/NunitoSans-ExtraLight.ttf','truetype','',3,''),(1052,'NunitoSans','NunitoSans-Italic','italic',400,'','','/-/fonts/2018-09/NunitoSans-Italic.ttf','truetype','',3,''),(1053,'NunitoSans','NunitoSans-LightItalic','italic',300,'','','/-/fonts/2018-09/NunitoSans-LightItalic.ttf','truetype','',3,''),(1054,'NunitoSans','NunitoSans-Light','normal',300,'','','/-/fonts/2018-09/NunitoSans-Light.ttf','truetype','',3,''),(1055,'NunitoSans','NunitoSans-Regular','normal',400,'','','/-/fonts/2018-09/NunitoSans-Regular.ttf','truetype','',3,''),(1056,'NunitoSans','NunitoSans-SemiBoldItalic','italic',600,'','','/-/fonts/2018-09/NunitoSans-SemiBoldItalic.ttf','truetype','',3,''),(1057,'NunitoSans','NunitoSans-SemiBold','normal',600,'','','/-/fonts/2018-09/NunitoSans-SemiBold.ttf','truetype','',3,''),(1058,'Nunito','Nunito-SemiBoldItalic','italic',600,'','','/-/fonts/2018-09/Nunito-SemiBoldItalic.ttf','truetype','',3,''),(1059,'Nunito','Nunito-SemiBold','normal',600,'','','/-/fonts/2018-09/Nunito-SemiBold.ttf','truetype','',3,''),(1060,'OldStandard','OldStandard-Bold','normal',800,'','','/-/fonts/2018-09/OldStandard-Bold.ttf','truetype','',3,''),(1061,'OldStandard','OldStandard-Italic','italic',400,'','','/-/fonts/2018-09/OldStandard-Italic.ttf','truetype','',3,''),(1062,'OldStandard','OldStandard-Regular','normal',400,'','','/-/fonts/2018-09/OldStandard-Regular.ttf','truetype','',3,''),(1063,'OpenSans','OpenSans-BoldItalic','italic',800,'','','/-/fonts/2018-09/OpenSans-BoldItalic.ttf','truetype','',3,''),(1064,'OpenSans','OpenSans-Bold','normal',800,'','','/-/fonts/2018-09/OpenSans-Bold.ttf','truetype','',3,''),(1065,'OpenSansCondensed','OpenSansCondensed-Bold','normal',800,'','','/-/fonts/2018-09/OpenSansCondensed-Bold.ttf','truetype','',3,''),(1066,'OpenSansCondensed','OpenSansCondensed-Light','normal',300,'','','/-/fonts/2018-09/OpenSansCondensed-Light.ttf','truetype','',3,''),(1067,'OpenSans','OpenSans-ExtraBoldItalic','italic',800,'','','/-/fonts/2018-09/OpenSans-ExtraBoldItalic.ttf','truetype','',3,''),(1068,'OpenSans','OpenSans-ExtraBold','normal',800,'','','/-/fonts/2018-09/OpenSans-ExtraBold.ttf','truetype','',3,''),(1069,'OpenSans','OpenSans-Italic','italic',400,'','','/-/fonts/2018-09/OpenSans-Italic.ttf','truetype','',3,''),(1070,'OpenSans','OpenSans-LightItalic','italic',300,'','','/-/fonts/2018-09/OpenSans-LightItalic.ttf','truetype','',3,''),(1071,'OpenSans','OpenSans-Light','normal',300,'','','/-/fonts/2018-09/OpenSans-Light.ttf','truetype','',3,''),(1072,'OpenSans','OpenSans-Regular','normal',400,'','','/-/fonts/2018-09/OpenSans-Regular.ttf','truetype','',3,''),(1073,'OpenSans','OpenSans-SemiBoldItalic','italic',600,'','','/-/fonts/2018-09/OpenSans-SemiBoldItalic.ttf','truetype','',3,''),(1074,'OpenSans','OpenSans-SemiBold','normal',600,'','','/-/fonts/2018-09/OpenSans-SemiBold.ttf','truetype','',3,''),(1075,'Oswald','Oswald-Bold','normal',800,'','','/-/fonts/2018-09/Oswald-Bold.ttf','truetype','',3,''),(1076,'Oswald','Oswald-ExtraLight','normal',300,'','','/-/fonts/2018-09/Oswald-ExtraLight.ttf','truetype','',3,''),(1077,'Oswald','Oswald-Light','normal',300,'','','/-/fonts/2018-09/Oswald-Light.ttf','truetype','',3,''),(1078,'Oswald','Oswald-Medium','normal',500,'','','/-/fonts/2018-09/Oswald-Medium.ttf','truetype','',3,''),(1079,'Oswald','Oswald-Regular','normal',400,'','','/-/fonts/2018-09/Oswald-Regular.ttf','truetype','',3,''),(1080,'Oswald','Oswald-SemiBold','normal',600,'','','/-/fonts/2018-09/Oswald-SemiBold.ttf','truetype','',3,''),(1081,'Parisienne','Parisienne-Regular','normal',400,'','','/-/fonts/2018-09/Parisienne-Regular.ttf','truetype','',3,''),(1082,'Philosopher','Philosopher-BoldItalic','italic',800,'','','/-/fonts/2018-09/Philosopher-BoldItalic.ttf','truetype','',3,''),(1083,'Philosopher','Philosopher-Bold','normal',800,'','','/-/fonts/2018-09/Philosopher-Bold.ttf','truetype','',3,''),(1084,'Philosopher','Philosopher-Italic','italic',400,'','','/-/fonts/2018-09/Philosopher-Italic.ttf','truetype','',3,''),(1085,'Philosopher','Philosopher-Regular','normal',400,'','','/-/fonts/2018-09/Philosopher-Regular.ttf','truetype','',3,''),(1086,'PoiretOne','PoiretOne-Regular','normal',400,'','','/-/fonts/2018-09/PoiretOne-Regular.ttf','truetype','',3,''),(1087,'PontanoSans','PontanoSans-Regular','normal',400,'','','/-/fonts/2018-09/PontanoSans-Regular.ttf','truetype','',3,''),(1088,'Poppins','Poppins-BlackItalic','italic',900,'','','/-/fonts/2018-09/Poppins-BlackItalic.ttf','truetype','',3,''),(1089,'Poppins','Poppins-Black','normal',900,'','','/-/fonts/2018-09/Poppins-Black.ttf','truetype','',3,''),(1090,'Poppins','Poppins-BoldItalic','italic',800,'','','/-/fonts/2018-09/Poppins-BoldItalic.ttf','truetype','',3,''),(1091,'Poppins','Poppins-Bold','normal',800,'','','/-/fonts/2018-09/Poppins-Bold.ttf','truetype','',3,''),(1092,'Poppins','Poppins-ExtraBoldItalic','italic',800,'','','/-/fonts/2018-09/Poppins-ExtraBoldItalic.ttf','truetype','',3,''),(1093,'Poppins','Poppins-ExtraBold','normal',800,'','','/-/fonts/2018-09/Poppins-ExtraBold.ttf','truetype','',3,''),(1094,'Poppins','Poppins-ExtraLightItalic','italic',300,'','','/-/fonts/2018-09/Poppins-ExtraLightItalic.ttf','truetype','',3,''),(1095,'Poppins','Poppins-ExtraLight','normal',300,'','','/-/fonts/2018-09/Poppins-ExtraLight.ttf','truetype','',3,''),(1096,'Poppins','Poppins-Italic','italic',400,'','','/-/fonts/2018-09/Poppins-Italic.ttf','truetype','',3,''),(1097,'Poppins','Poppins-LightItalic','italic',300,'','','/-/fonts/2018-09/Poppins-LightItalic.ttf','truetype','',3,''),(1098,'Poppins','Poppins-Light','normal',300,'','','/-/fonts/2018-09/Poppins-Light.ttf','truetype','',3,''),(1099,'Poppins','Poppins-MediumItalic','italic',500,'','','/-/fonts/2018-09/Poppins-MediumItalic.ttf','truetype','',3,''),(1100,'Poppins','Poppins-Medium','normal',500,'','','/-/fonts/2018-09/Poppins-Medium.ttf','truetype','',3,''),(1101,'Poppins','Poppins-Regular','normal',400,'','','/-/fonts/2018-09/Poppins-Regular.ttf','truetype','',3,''),(1102,'Poppins','Poppins-SemiBoldItalic','italic',600,'','','/-/fonts/2018-09/Poppins-SemiBoldItalic.ttf','truetype','',3,''),(1103,'Poppins','Poppins-SemiBold','normal',600,'','','/-/fonts/2018-09/Poppins-SemiBold.ttf','truetype','',3,''),(1104,'Poppins','Poppins-ThinItalic','italic',200,'','','/-/fonts/2018-09/Poppins-ThinItalic.ttf','truetype','',3,''),(1105,'Poppins','Poppins-Thin','normal',200,'','','/-/fonts/2018-09/Poppins-Thin.ttf','truetype','',3,''),(1106,'Prata','Prata-Regular','normal',400,'','','/-/fonts/2018-09/Prata-Regular.ttf','truetype','',3,''),(1107,'PT_Sans','PT_Sans-Caption-Web-Bold','normal',800,'','','/-/fonts/2018-09/PT_Sans-Caption-Web-Bold.ttf','truetype','',3,''),(1108,'PT_Sans','PT_Sans-Web-BoldItalic','italic',800,'','','/-/fonts/2018-09/PT_Sans-Web-BoldItalic.ttf','truetype','',3,''),(1109,'PT_Sans','PT_Sans-Web-Bold','normal',800,'','','/-/fonts/2018-09/PT_Sans-Web-Bold.ttf','truetype','',3,''),(1110,'PT_Sans','PT_Sans-Web-Italic','italic',400,'','','/-/fonts/2018-09/PT_Sans-Web-Italic.ttf','truetype','',3,''),(1111,'PT_Sans','PT_Sans-Web-Regular','normal',400,'','','/-/fonts/2018-09/PT_Sans-Web-Regular.ttf','truetype','',3,''),(1112,'PT_Serif','PT_Serif-Web-BoldItalic','italic',800,'','','/-/fonts/2018-09/PT_Serif-Web-BoldItalic.ttf','truetype','',3,''),(1113,'PT_Serif','PT_Serif-Web-Bold','normal',800,'','','/-/fonts/2018-09/PT_Serif-Web-Bold.ttf','truetype','',3,''),(1114,'PT_Serif','PT_Serif-Web-Italic','italic',400,'','','/-/fonts/2018-09/PT_Serif-Web-Italic.ttf','truetype','',3,''),(1115,'PT_Serif','PT_Serif-Web-Regular','normal',400,'','','/-/fonts/2018-09/PT_Serif-Web-Regular.ttf','truetype','',3,''),(1116,'Quattrocento','Quattrocento-Bold','normal',800,'','','/-/fonts/2018-09/Quattrocento-Bold.ttf','truetype','',3,''),(1117,'Quattrocento','Quattrocento-Regular','normal',400,'','','/-/fonts/2018-09/Quattrocento-Regular.ttf','truetype','',3,''),(1118,'QuattrocentoSans','QuattrocentoSans-Bold','normal',800,'','','/-/fonts/2018-09/QuattrocentoSans-Bold.ttf','truetype','',3,''),(1119,'QuattrocentoSans','QuattrocentoSans-Italic','italic',400,'','','/-/fonts/2018-09/QuattrocentoSans-Italic.ttf','truetype','',3,''),(1120,'QuattrocentoSans','QuattrocentoSans-Regular','normal',400,'','','/-/fonts/2018-09/QuattrocentoSans-Regular.ttf','truetype','',3,''),(1121,'Questrial','Questrial-Regular','normal',400,'','','/-/fonts/2018-09/Questrial-Regular.ttf','truetype','',3,''),(1122,'Raleway','Raleway-BlackItalic','italic',900,'','','/-/fonts/2018-09/Raleway-BlackItalic.ttf','truetype','',3,''),(1123,'Raleway','Raleway-Black','normal',900,'','','/-/fonts/2018-09/Raleway-Black.ttf','truetype','',3,''),(1124,'Raleway','Raleway-BoldItalic','italic',800,'','','/-/fonts/2018-09/Raleway-BoldItalic.ttf','truetype','',3,''),(1125,'Raleway','Raleway-Bold','normal',800,'','','/-/fonts/2018-09/Raleway-Bold.ttf','truetype','',3,''),(1126,'Raleway','Raleway-ExtraBoldItalic','italic',800,'','','/-/fonts/2018-09/Raleway-ExtraBoldItalic.ttf','truetype','',3,''),(1127,'Raleway','Raleway-ExtraBold','normal',800,'','','/-/fonts/2018-09/Raleway-ExtraBold.ttf','truetype','',3,''),(1128,'Raleway','Raleway-ExtraLightItalic','italic',300,'','','/-/fonts/2018-09/Raleway-ExtraLightItalic.ttf','truetype','',3,''),(1129,'Raleway','Raleway-ExtraLight','normal',300,'','','/-/fonts/2018-09/Raleway-ExtraLight.ttf','truetype','',3,''),(1130,'Raleway','Raleway-Italic','italic',400,'','','/-/fonts/2018-09/Raleway-Italic.ttf','truetype','',3,''),(1131,'Raleway','Raleway-LightItalic','italic',300,'','','/-/fonts/2018-09/Raleway-LightItalic.ttf','truetype','',3,''),(1132,'Raleway','Raleway-Light','normal',300,'','','/-/fonts/2018-09/Raleway-Light.ttf','truetype','',3,''),(1133,'Raleway','Raleway-MediumItalic','italic',500,'','','/-/fonts/2018-09/Raleway-MediumItalic.ttf','truetype','',3,''),(1134,'Raleway','Raleway-Medium','normal',500,'','','/-/fonts/2018-09/Raleway-Medium.ttf','truetype','',3,''),(1135,'Raleway','Raleway-Regular','normal',400,'','','/-/fonts/2018-09/Raleway-Regular.ttf','truetype','',3,''),(1136,'Raleway','Raleway-SemiBoldItalic','italic',600,'','','/-/fonts/2018-09/Raleway-SemiBoldItalic.ttf','truetype','',3,''),(1137,'Raleway','Raleway-SemiBold','normal',600,'','','/-/fonts/2018-09/Raleway-SemiBold.ttf','truetype','',3,''),(1138,'Raleway','Raleway-ThinItalic','italic',200,'','','/-/fonts/2018-09/Raleway-ThinItalic.ttf','truetype','',3,''),(1139,'Raleway','Raleway-Thin','normal',200,'','','/-/fonts/2018-09/Raleway-Thin.ttf','truetype','',3,''),(1140,'Rokkitt','Rokkitt-Black','normal',900,'','','/-/fonts/2018-09/Rokkitt-Black.ttf','truetype','',3,''),(1141,'Rokkitt','Rokkitt-Bold','normal',800,'','','/-/fonts/2018-09/Rokkitt-Bold.ttf','truetype','',3,''),(1142,'Rokkitt','Rokkitt-ExtraBold','normal',800,'','','/-/fonts/2018-09/Rokkitt-ExtraBold.ttf','truetype','',3,''),(1143,'Rokkitt','Rokkitt-ExtraLight','normal',300,'','','/-/fonts/2018-09/Rokkitt-ExtraLight.ttf','truetype','',3,''),(1144,'Rokkitt','Rokkitt-Light','normal',300,'','','/-/fonts/2018-09/Rokkitt-Light.ttf','truetype','',3,''),(1145,'Rokkitt','Rokkitt-Medium','normal',500,'','','/-/fonts/2018-09/Rokkitt-Medium.ttf','truetype','',3,''),(1146,'Rokkitt','Rokkitt-Regular','normal',400,'','','/-/fonts/2018-09/Rokkitt-Regular.ttf','truetype','',3,''),(1147,'Rokkitt','Rokkitt-SemiBold','normal',600,'','','/-/fonts/2018-09/Rokkitt-SemiBold.ttf','truetype','',3,''),(1148,'Rokkitt','Rokkitt-Thin','normal',200,'','','/-/fonts/2018-09/Rokkitt-Thin.ttf','truetype','',3,''),(1149,'Rufina','Rufina-Bold','normal',800,'','','/-/fonts/2018-09/Rufina-Bold.ttf','truetype','',3,''),(1150,'Rufina','Rufina-Regular','normal',400,'','','/-/fonts/2018-09/Rufina-Regular.ttf','truetype','',3,''),(1151,'Sanchez','Sanchez-Italic','italic',400,'','','/-/fonts/2018-09/Sanchez-Italic.ttf','truetype','',3,''),(1152,'Sanchez','Sanchez-Regular','normal',400,'','','/-/fonts/2018-09/Sanchez-Regular.ttf','truetype','',3,''),(1153,'Sarala','Sarala-Bold','normal',800,'','','/-/fonts/2018-09/Sarala-Bold.ttf','truetype','',3,''),(1154,'Sarala','Sarala-Regular','normal',400,'','','/-/fonts/2018-09/Sarala-Regular.ttf','truetype','',3,''),(1155,'Scheherazade','Scheherazade-Bold','normal',800,'','','/-/fonts/2018-09/Scheherazade-Bold.ttf','truetype','',3,''),(1156,'Scheherazade','Scheherazade-Regular','normal',400,'','','/-/fonts/2018-09/Scheherazade-Regular.ttf','truetype','',3,''),(1157,'Slabo13px','Slabo13px-Regular','normal',400,'','','/-/fonts/2018-09/Slabo13px-Regular.ttf','truetype','',3,''),(1158,'Slabo27px','Slabo27px-Regular','normal',400,'','','/-/fonts/2018-09/Slabo27px-Regular.ttf','truetype','',3,''),(1159,'Taviraj','Taviraj-BlackItalic','italic',900,'','','/-/fonts/2018-09/Taviraj-BlackItalic.ttf','truetype','',3,''),(1160,'Taviraj','Taviraj-Black','normal',900,'','','/-/fonts/2018-09/Taviraj-Black.ttf','truetype','',3,''),(1161,'Taviraj','Taviraj-BoldItalic','italic',800,'','','/-/fonts/2018-09/Taviraj-BoldItalic.ttf','truetype','',3,''),(1162,'Taviraj','Taviraj-Bold','normal',800,'','','/-/fonts/2018-09/Taviraj-Bold.ttf','truetype','',3,''),(1163,'Taviraj','Taviraj-ExtraBoldItalic','italic',800,'','','/-/fonts/2018-09/Taviraj-ExtraBoldItalic.ttf','truetype','',3,''),(1164,'Taviraj','Taviraj-ExtraBold','normal',800,'','','/-/fonts/2018-09/Taviraj-ExtraBold.ttf','truetype','',3,''),(1165,'Taviraj','Taviraj-ExtraLightItalic','italic',300,'','','/-/fonts/2018-09/Taviraj-ExtraLightItalic.ttf','truetype','',3,''),(1166,'Taviraj','Taviraj-ExtraLight','normal',300,'','','/-/fonts/2018-09/Taviraj-ExtraLight.ttf','truetype','',3,''),(1167,'Taviraj','Taviraj-Italic','italic',400,'','','/-/fonts/2018-09/Taviraj-Italic.ttf','truetype','',3,''),(1168,'Taviraj','Taviraj-LightItalic','italic',300,'','','/-/fonts/2018-09/Taviraj-LightItalic.ttf','truetype','',3,''),(1169,'Taviraj','Taviraj-Light','normal',300,'','','/-/fonts/2018-09/Taviraj-Light.ttf','truetype','',3,''),(1170,'Taviraj','Taviraj-MediumItalic','italic',500,'','','/-/fonts/2018-09/Taviraj-MediumItalic.ttf','truetype','',3,''),(1171,'Taviraj','Taviraj-Medium','normal',500,'','','/-/fonts/2018-09/Taviraj-Medium.ttf','truetype','',3,''),(1172,'Taviraj','Taviraj-Regular','normal',400,'','','/-/fonts/2018-09/Taviraj-Regular.ttf','truetype','',3,''),(1173,'Taviraj','Taviraj-SemiBoldItalic','italic',600,'','','/-/fonts/2018-09/Taviraj-SemiBoldItalic.ttf','truetype','',3,''),(1174,'Taviraj','Taviraj-SemiBold','normal',600,'','','/-/fonts/2018-09/Taviraj-SemiBold.ttf','truetype','',3,''),(1175,'Taviraj','Taviraj-ThinItalic','italic',200,'','','/-/fonts/2018-09/Taviraj-ThinItalic.ttf','truetype','',3,''),(1176,'Taviraj','Taviraj-Thin','normal',200,'','','/-/fonts/2018-09/Taviraj-Thin.ttf','truetype','',3,''),(1177,'TitilliumWeb','TitilliumWeb-Black','normal',900,'','','/-/fonts/2018-09/TitilliumWeb-Black.ttf','truetype','',3,''),(1178,'TitilliumWeb','TitilliumWeb-BoldItalic','italic',800,'','','/-/fonts/2018-09/TitilliumWeb-BoldItalic.ttf','truetype','',3,''),(1179,'TitilliumWeb','TitilliumWeb-Bold','normal',800,'','','/-/fonts/2018-09/TitilliumWeb-Bold.ttf','truetype','',3,''),(1180,'TitilliumWeb','TitilliumWeb-ExtraLight','normal',300,'','','/-/fonts/2018-09/TitilliumWeb-ExtraLight.ttf','truetype','',3,''),(1181,'TitilliumWeb','TitilliumWeb-Italic','italic',400,'','','/-/fonts/2018-09/TitilliumWeb-Italic.ttf','truetype','',3,''),(1182,'TitilliumWeb','TitilliumWeb-LightItalic','italic',300,'','','/-/fonts/2018-09/TitilliumWeb-LightItalic.ttf','truetype','',3,''),(1183,'TitilliumWeb','TitilliumWeb-Light','normal',300,'','','/-/fonts/2018-09/TitilliumWeb-Light.ttf','truetype','',3,''),(1184,'TitilliumWeb','TitilliumWeb-Regular','normal',400,'','','/-/fonts/2018-09/TitilliumWeb-Regular.ttf','truetype','',3,''),(1185,'TitilliumWeb','TitilliumWeb-SemiBold','normal',600,'','','/-/fonts/2018-09/TitilliumWeb-SemiBold.ttf','truetype','',3,''),(1186,'Trirong','Trirong-BlackItalic','italic',900,'','','/-/fonts/2018-09/Trirong-BlackItalic.ttf','truetype','',3,''),(1187,'Trirong','Trirong-Black','normal',900,'','','/-/fonts/2018-09/Trirong-Black.ttf','truetype','',3,''),(1188,'Trirong','Trirong-BoldItalic','italic',800,'','','/-/fonts/2018-09/Trirong-BoldItalic.ttf','truetype','',3,''),(1189,'Trirong','Trirong-Bold','normal',800,'','','/-/fonts/2018-09/Trirong-Bold.ttf','truetype','',3,''),(1190,'Trirong','Trirong-ExtraBoldItalic','italic',800,'','','/-/fonts/2018-09/Trirong-ExtraBoldItalic.ttf','truetype','',3,''),(1191,'Trirong','Trirong-ExtraBold','normal',800,'','','/-/fonts/2018-09/Trirong-ExtraBold.ttf','truetype','',3,''),(1192,'Trirong','Trirong-ExtraLightItalic','italic',300,'','','/-/fonts/2018-09/Trirong-ExtraLightItalic.ttf','truetype','',3,''),(1193,'Trirong','Trirong-ExtraLight','normal',300,'','','/-/fonts/2018-09/Trirong-ExtraLight.ttf','truetype','',3,''),(1194,'Trirong','Trirong-Italic','italic',400,'','','/-/fonts/2018-09/Trirong-Italic.ttf','truetype','',3,''),(1195,'Trirong','Trirong-LightItalic','italic',300,'','','/-/fonts/2018-09/Trirong-LightItalic.ttf','truetype','',3,''),(1196,'Trirong','Trirong-Light','normal',300,'','','/-/fonts/2018-09/Trirong-Light.ttf','truetype','',3,''),(1197,'Trirong','Trirong-MediumItalic','italic',500,'','','/-/fonts/2018-09/Trirong-MediumItalic.ttf','truetype','',3,''),(1198,'Trirong','Trirong-Medium','normal',500,'','','/-/fonts/2018-09/Trirong-Medium.ttf','truetype','',3,''),(1199,'Trirong','Trirong-Regular','normal',400,'','','/-/fonts/2018-09/Trirong-Regular.ttf','truetype','',3,''),(1200,'Trirong','Trirong-SemiBoldItalic','italic',600,'','','/-/fonts/2018-09/Trirong-SemiBoldItalic.ttf','truetype','',3,''),(1201,'Trirong','Trirong-SemiBold','normal',600,'','','/-/fonts/2018-09/Trirong-SemiBold.ttf','truetype','',3,''),(1202,'Trirong','Trirong-ThinItalic','italic',200,'','','/-/fonts/2018-09/Trirong-ThinItalic.ttf','truetype','',3,''),(1203,'Trirong','Trirong-Thin','normal',200,'','','/-/fonts/2018-09/Trirong-Thin.ttf','truetype','',3,''),(1204,'Trocchi','Trocchi-Regular','normal',400,'','','/-/fonts/2018-09/Trocchi-Regular.ttf','truetype','',3,''),(1205,'Ubuntu','Ubuntu-BoldItalic','italic',800,'','','/-/fonts/2018-09/Ubuntu-BoldItalic.ttf','truetype','',3,''),(1206,'Ubuntu','Ubuntu-Bold','normal',800,'','','/-/fonts/2018-09/Ubuntu-Bold.ttf','truetype','',3,''),(1207,'Ubuntu','Ubuntu-Italic','italic',400,'','','/-/fonts/2018-09/Ubuntu-Italic.ttf','truetype','',3,''),(1208,'Ubuntu','Ubuntu-LightItalic','italic',300,'','','/-/fonts/2018-09/Ubuntu-LightItalic.ttf','truetype','',3,''),(1209,'Ubuntu','Ubuntu-Light','normal',300,'','','/-/fonts/2018-09/Ubuntu-Light.ttf','truetype','',3,''),(1210,'Ubuntu','Ubuntu-MediumItalic','italic',500,'','','/-/fonts/2018-09/Ubuntu-MediumItalic.ttf','truetype','',3,''),(1211,'Ubuntu','Ubuntu-Medium','normal',500,'','','/-/fonts/2018-09/Ubuntu-Medium.ttf','truetype','',3,''),(1212,'Ubuntu','Ubuntu-Regular','normal',400,'','','/-/fonts/2018-09/Ubuntu-Regular.ttf','truetype','',3,''),(1213,'Ultra','Ultra-Regular','normal',400,'','','/-/fonts/2018-09/Ultra-Regular.ttf','truetype','',3,''),(1214,'Unna','Unna-BoldItalic','italic',800,'','','/-/fonts/2018-09/Unna-BoldItalic.ttf','truetype','',3,''),(1215,'Unna','Unna-Bold','normal',800,'','','/-/fonts/2018-09/Unna-Bold.ttf','truetype','',3,''),(1216,'Unna','Unna-Italic','italic',400,'','','/-/fonts/2018-09/Unna-Italic.ttf','truetype','',3,''),(1217,'Unna','Unna-Regular','normal',400,'','','/-/fonts/2018-09/Unna-Regular.ttf','truetype','',3,''),(1218,'Varela','Varela-Regular','normal',400,'','','/-/fonts/2018-09/Varela-Regular.ttf','truetype','',3,''),(1219,'ZillaSlab','ZillaSlab-BoldItalic','italic',800,'','','/-/fonts/2018-09/ZillaSlab-BoldItalic.ttf','truetype','',3,''),(1220,'ZillaSlab','ZillaSlab-Bold','normal',800,'','','/-/fonts/2018-09/ZillaSlab-Bold.ttf','truetype','',3,''),(1221,'ZillaSlab','ZillaSlab-Italic','italic',400,'','','/-/fonts/2018-09/ZillaSlab-Italic.ttf','truetype','',3,''),(1222,'ZillaSlab','ZillaSlab-LightItalic','italic',300,'','','/-/fonts/2018-09/ZillaSlab-LightItalic.ttf','truetype','',3,''),(1223,'ZillaSlab','ZillaSlab-Light','normal',300,'','','/-/fonts/2018-09/ZillaSlab-Light.ttf','truetype','',3,''),(1224,'ZillaSlab','ZillaSlab-MediumItalic','italic',500,'','','/-/fonts/2018-09/ZillaSlab-MediumItalic.ttf','truetype','',3,''),(1225,'ZillaSlab','ZillaSlab-Medium','normal',500,'','','/-/fonts/2018-09/ZillaSlab-Medium.ttf','truetype','',3,''),(1226,'ZillaSlab','ZillaSlab-Regular','normal',400,'','','/-/fonts/2018-09/ZillaSlab-Regular.ttf','truetype','',3,''),(1227,'ZillaSlab','ZillaSlab-SemiBoldItalic','italic',600,'','','/-/fonts/2018-09/ZillaSlab-SemiBoldItalic.ttf','truetype','',3,''),(1228,'ZillaSlab','ZillaSlab-SemiBold','normal',600,'','','/-/fonts/2018-09/ZillaSlab-SemiBold.ttf','truetype','',3,''),(1229,'DFXSM1B','DFXSM1B','normal',400,'','','/-/fonts/zh/DFXSM1B.TTF','truetype','',3,''),(1230,'GoJuOn','GoJuOn','normal',400,'','','/-/fonts/zh/GoJuOn.TTF','truetype','',3,''),(1231,'Wang-han-zong-boldface-Font-Traditional','Wang-han-zong-boldface-Font-Traditional','bold',800,'','','/-/fonts/zh/Wang-han-zong-boldface-Font-Traditional-Chinese.ttf','truetype','',3,''),(1232,'HelveticaNeue','HelveticaNeue-Hv','normal',400,'HelveticaNeueHv','HelveticaNeueHv','/-/fonts/HelveticaNeueHv.ttf','truetype','',3,''),(1233,'HelveticaNeue','HelveticaNeue-Lt','normal',300,'HelveticaNeueLt','HelveticaNeueLt','/-/fonts/HelveticaNeueLt.ttf','truetype','',3,''),(1234,'HelveticaNeue','HelveticaNeue-It','italic',400,'HelveticaNeueIt','HelveticaNeueIt','/-/fonts/HelveticaNeueIt.ttf','truetype','',3,''),(1235,'HelveticaNeue','HelveticaNeue-Bd','normal',400,'HelveticaNeueBd','HelveticaNeueBd','/-/fonts/HelveticaNeueBd.ttf','truetype','',3,''),(1236,'HelveticaNeue','HelveticaNeue-Light','normal',400,'HelveticaNeue-Light','HelveticaNeue-Light','/-/fonts/HelveticaNeue-Light.ttf','truetype','',3,''),(1237,'HelveticaNeue','HelveticaNeue','normal',400,'HelveticaNeue','HelveticaNeue','/-/fonts/HelveticaNeue.ttf','truetype','',3,''),(1238,'HelveticaNeue','HelveticaNeue-BlackCond','bold',800,'HelveticaNeue-BlackCond','HelveticaNeue-BlackCond','/-/fonts/HelveticaNeue-BlackCond.ttf','truetype','',3,''),(1239,'HelveticaNeue','HelveticaNeue-Bold','bold',600,'HelveticaNeu-Bold','HelveticaNeu-Bold','/-/fonts/Helvetica-Neu-Bold.ttf','truetype','',3,''),(1240,'HelveticaNeue','HelveticaNeue-Medium','normal',400,'HelveticaNeue-Medium','HelveticaNeue-Medium','/-/fonts/HelveticaNeue-Medium.ttf','truetype','',3,''),(1241,'HelveticaNeue','HelveticaNeue-Med','normal',400,'HelveticaNeueMed','HelveticaNeueMed','/-/fonts/HelveticaNeueMed.ttf','truetype','',3,''),(1242,'HelveticaNeue','HelveticaNeue-Thin','normal',200,'HelveticaNeue-Thin','HelveticaNeue-Thin','/-/fonts/HelveticaNeue-Thin.ttf','truetype','',3,'');
/*!40000 ALTER TABLE `font` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `guest`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `guest` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(16) NOT NULL,
  `email` varchar(512) NOT NULL,
  `firstname` varchar(128) DEFAULT '',
  `lastname` varchar(128) DEFAULT '',
  `expiry_time` int(11) NOT NULL DEFAULT 0,
  `ctime` int(11) DEFAULT NULL,
  `utime` int(11) DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`),
  UNIQUE KEY `email` (`email`),
  KEY `firstname` (`firstname`),
  KEY `lastname` (`lastname`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `guest` WRITE;
/*!40000 ALTER TABLE `guest` DISABLE KEYS */;
/*!40000 ALTER TABLE `guest` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `handshake`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `handshake` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(64) NOT NULL,
  `ip` varchar(64) NOT NULL,
  `ctime` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `handshake` WRITE;
/*!40000 ALTER TABLE `handshake` DISABLE KEYS */;
/*!40000 ALTER TABLE `handshake` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `header`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `header` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varbinary(16) NOT NULL,
  `language` varchar(50) NOT NULL,
  `icon` varchar(1024) DEFAULT NULL,
  `title` varchar(500) NOT NULL,
  `keywords` varchar(500) NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`,`language`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `header` WRITE;
/*!40000 ALTER TABLE `header` DISABLE KEYS */;
/*!40000 ALTER TABLE `header` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `helpdesk`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `helpdesk` (
  `ord` int(11) unsigned NOT NULL,
  `ln` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `category` varchar(2000) DEFAULT NULL,
  `category_desc` varchar(2000) DEFAULT NULL,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  UNIQUE KEY `ord` (`ord`,`ln`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `helpdesk` WRITE;
/*!40000 ALTER TABLE `helpdesk` DISABLE KEYS */;
INSERT INTO `helpdesk` VALUES (1,'en','Use the Drive','\nTo upload files from your computer -> <span>Drag and drop</span> a single/multiple files or a folder from your computer. You can also click on the <span>Upload icon</span> available in tools bar (on top of the Drumee Drive)\n','[\n\n \n{ \"LH\":\"To open and interact with a file/folder\" , \n\"RH\":\" Open a file/folder, <span>click and hold</span> the header of the window to move around, <span>catch the borders</span> and drag it to resize\" },\n \n{ \"LH\":\"To organize files/folders on drive\" , \n \"RH\":\"<span> Click and hold</span> the file/folder, then <span>drag and drop</span> it anywhere on the drive to change its position. You can also organize multiple files/folders at the same time by selecting them with your mouse or by clicking on the <span>checkbox</span>(on the top-left when you hover) on each folder to select individually.\" },\n \n{ \"LH\":\"To Create a folder\" , \n \"RH\":\" <span>Click</span> on the <span>blue folder icon</span> on the bottom-bar, a new folder will appear on the drive you can rename it, <span>click</span> on it open. Now you can <span>drag and drop</span> files/folders from your computer or from Drumee drive to this folder. You can also be able to create or <span>drag and drop</span> sub-folders.\" },\n \n{ \"LH\":\"To delete a file/folder\" , \n \"RH\":\"You can simply <span>drag the file</span> and <span>drop</span> it on the <span>Trash icon</span> on the bottom-bar. You can also select multiple files/folders at the same time by selecting them with your mouse or by clicking on the <span>checkbox</span>(on the top-left when you hover) on each folder to select individually and <span>click on Trash icon</span>.\" }\n\n]'),(1,'fr','Utiliser le drive',NULL,'[\n { \"LH\":\"Importer des fichiers depuis votre ordinateur\" ,\n \"RH\":\"<span>Glissez/collez</span> directement des  fichiers ou dossier depuis votre ordinateur. Vous pouvez aussi cliquer sur <span>outil</span> (en haut) puis cliquez sur importer.\" },\n{ \"LH\":\"Ouvrir et bouger un fichier ouvert\" , \n\"RH\":\"<span>Cliquez</span> sur un fichier. Il s’ouvre en mode aperçu. Pour le déplacer, <span>clic continu</span> sur le bandeau du haut. Pour modifier sa taille étirez les cotés.\" },\n { \"LH\":\"Modifier la place de ses fichiers sur le drive\" , \n \"RH\":\"<span>Cliquez en continu</span> sur un <span>icone fichier ou dossier</span> et déplacez le entre deux autres fichiers. Vous pouvez également faire une sélection multiple pour en déplacer plusieurs d’un coup.\" },\n { \"LH\":\"Créer et utiliser un premier dossier\" , \n \"RH\":\"<span>Cliquez</span>  sur <span>l’icone dossier bleu</span> en bas: il se crée sur le drive. Nommez le. Puis <span>cliquez</span> dessus pour l’ouvrir  <span>Glissez déposez</span> des fichiers à l’intérieur. \" },\n{ \"LH\":\"Placer un fichier à la poubelle\" , \n \"RH\":\"<span>Survolez de l’icone</span> et cliquez sur la case de séléction (coin en haut). Puis <span>cliquez</span> sur la poubelle.  Autre moyen: <span>glissez déposez</span> directement sur l’icone poubelle\" }\n]'),(2,'en','Communication','<span><u>Information:</u></span> You can communicate with another user in following ways. If the contact is in your addressbook and also a Drumee user - you can use the <span>Drumee Chat</span> to do <span>chat, audio/video call</span>. If the contact is in your addressbook and not a user of Drumee or a completely external contact - you can use the <span>External Meeting</span> to do a <span>audio/video call</span>.','[\n { \"LH\":\"To invite a contact\" ,\n \"RH\":\" <span>Click</span> and open the <span>Contacts</span> icon at the bottom-bar and <span>click</span> on the <span>+ icon</span> at the header & select <span>Invite a contact</span>, then enter the contact`s email & click the <span>Invite button</span>. The user will receive a notification to join Drumee. You can also use the <span>+ icon</span> at the top bar to do the same.\" },\n{ \"LH\":\"To do a chat, audio/video call\" , \n\"RH\":\" <span>Click</span> and open the <span>Chat/Internal video</span> icon at the bottom-bar. You can select the desired contact and chat with him, to make a call <span>click</span> on the <span>Call icon</span> at the top-right of the chat screen, you can <span>switch on/off</span> the video during the call anytime.\" },\n{ \"LH\":\"To have a meeting with External contact\", \n\"RH\":\"<span>Click</span> and open the <span>External call/video</span> icon at the bottom-bar, then <span>click</span> on the <span>+ icon</span> at the top-left of the header to </span>create a new meeting</span>., then enter necessary details, emails/contacts you want to invite for the call and <span>click</span> on <span>Invite</span>.\" }\n]'),(2,'fr','Partager, transférer des fichiers','  Pour transférer des fichiers en externe (hors carnet d’adresse) on crée des <span>boites de transferts externes</span> (dossier orange). Pour partager des fichiers en interne (c à d avec des contacts de son carnet d’adresse), on créé des <span>dossiers partagés internes</span> (dossier violet)','[\n { \"LH\":\"Créer une `boite de transfert externe`\" ,\n \"RH\":\"<span>Cliquez</span> sur <span>l’icone dossier orange</span> en bas. Lorsque la boite est créée, <span>Glissez</span> y des fichiers à transférer.  Cliquez sur <span>l’icone cloche</span> pour envoyer un mail de notification et envoyez.\" },\n\n{ \"LH\":\"Créer une `boite de transfert externe`\" , \n\"RH\":\" <span>Cliquez</span> sur <span>l’icone dossier orange</span> en bas. Lorsque la boite est créée, <span>Glissez</span> y des fichiers à transférer.  Cliquez sur <span>l’icone cloche</span> pour envoyer un mail de notification et envoyez.\" },\n\n{ \"LH\":\"Créer une `boite de partage interne`\", \n\"RH\":\"<span>Cliquez</span> sur l’icone dossier violet en bas. (Vous pourrez indiquer les contacts de partage lorsque vous en aurez). Une fois la boite de partage interne créé, <span>glissez</span> y des fichiers.\" },\n\n{ \"LH\":\"Gérer les boites de transfert / partages\", \n\"RH\":\"Lorsqu’une boite de transfert ou un dossier partagé est ouvert, <span>Cliquez</span> sur l’icone roue (dans le bandeau). Paramétrez les droits, les contacts, etc.\" }\n\n\n\n]'),(3,'en','Share/Transfer files','<span><u>Information:</u></span> You can <span>share/transfer</span> or <span>receive files</span> in the following ways. If the contact is in your addressbook and also a Drumee user - you can <span>create</span> a <span>Internal Shared folder</span> (purple color folder). If the contact is in your addressbook and not a user of Drumee or a completely external contact - you can use the <span>External Transfer Box</span> (orange color folder).','[\n { \"LH\":\"To create an Internal Share folder\" ,\n \"RH\":\"<span>Click</span> on the <span>purple color folder</span> icon at the bottom bar. Enter the name and the contacts you want to share files and <span>click</span> on <span>Create</span>. Then you can <span>drag and drop<span> or <span>upload</span> files to this folder.\" },\n{ \"LH\":\"To create an External share folder\" , \n\"RH\":\"  <span>Click</span> on the <span>orange color folder</span> icon at the bottom bar. Enter the name and the emails/contacts you want to share files and <span>click</span> on <span>Create</span>. Then you can <span>drag and drop</span> or <span>upload</span> files to this folder.\" },\n{ \"LH\":\"Managing Internal/External folder\", \n\"RH\":\" <span>Open</span> any <span>internal/external folder</span> from your Drumee drive and <span>click</span> on the <span>settings icon</span> at the header, which will open the folder details. You can <span>edit</span> the details(name, rights, contacts, etc., ) or <span>delete</span> the folder completely.\" }\n]'),(3,'fr','Communiquer',' Pour les <span>communications internes</span> à son carnet d’adresse on utilise le <span>chat/appel/visio interne</span>  (icone du  bas). Pour les <span>communications externes</span> hors de son carnet d’adresse on utilise l’<span>appel/visio externe</span> (icone du  bas)','[\n { \"LH\":\"Inviter un premier contact\" ,\n \"RH\":\"<span>Cliquez</span> sur l’icone <span>carnet d’adresse</span> en bas. Une fois ouvert <span>cliquez</span> sur l’icone « + contact » (dans le bandeau gris) et rentrez le mail du contact puis invitez le.\" },\n\n{ \"LH\":\"Chat, appel, visio avec des contacts internes\" , \n\"RH\":\"<span>Cliquez</span> sur <span>l’icone chat/téléphone</span> en bas. Vous pouvez chater, envoyer des documents, faire une visio (il vous faut au moins un premier contact).\" },\n{ \"LH\":\"Appel, visio avec des contacts externes\", \n\"RH\":\"<span>Cliquez</span> sur <span>l’icone appel monde</span> en bas.  Une fois ouvert <span>cliquez</span> sur + pour créer une nouvelle réunion. Rentrez les éléments et <span>invitez</span>.\" }\n]');
/*!40000 ALTER TABLE `helpdesk` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `homework`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `homework` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `home_id` varchar(16) NOT NULL,
  `work_id` varchar(16) NOT NULL,
  `ctime` int(11) DEFAULT NULL,
  `utime` int(11) DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `pkey` (`home_id`,`work_id`),
  UNIQUE KEY `home_id` (`home_id`),
  KEY `work_id` (`work_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `homework` WRITE;
/*!40000 ALTER TABLE `homework` DISABLE KEYS */;
/*!40000 ALTER TABLE `homework` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `hub`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `hub` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `hubname` varchar(80) DEFAULT NULL,
  `domain_id` int(10) unsigned DEFAULT NULL,
  `owner_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `origin_id` varchar(16) DEFAULT NULL,
  `dmail` varchar(255) NOT NULL DEFAULT '',
  `name` varchar(80) NOT NULL,
  `serial` int(11) unsigned NOT NULL DEFAULT 0,
  `description` varchar(2000) DEFAULT NULL,
  `keywords` varchar(2000) DEFAULT NULL,
  `permission` tinyint(4) unsigned NOT NULL DEFAULT 0,
  `profile` mediumtext DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`),
  UNIQUE KEY `_ident` (`hubname`),
  UNIQUE KEY `serial` (`owner_id`,`serial`),
  KEY `dmail` (`dmail`),
  KEY `default_perm` (`permission`),
  KEY `owner_id` (`owner_id`),
  KEY `origin_id` (`origin_id`),
  FULLTEXT KEY `keywords` (`name`,`keywords`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `hub` WRITE;
/*!40000 ALTER TABLE `hub` DISABLE KEYS */;
/*!40000 ALTER TABLE `hub` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `icons`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `icons` (
  `sys_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(128) DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `icons` WRITE;
/*!40000 ALTER TABLE `icons` DISABLE KEYS */;
INSERT INTO `icons` VALUES (122,'2'),(65,'account'),(67,'add'),(66,'add-cart'),(68,'analytics'),(69,'animation'),(72,'arrow--map'),(73,'arrow--pages'),(70,'arrow-down'),(71,'arrow-left'),(74,'arrow-right'),(75,'arrow-up'),(76,'arrow-vertical'),(77,'available'),(78,'ban'),(79,'bars'),(80,'cellphone'),(81,'center-old'),(82,'checkbox'),(83,'checked'),(84,'colorpicker_brush'),(85,'colorpicker_classic'),(86,'colorpicker_harmony'),(87,'colorpicker_picker'),(88,'cross'),(90,'cursor-corner'),(89,'cursor-corner-reversed'),(91,'cursor-move'),(92,'cursor-new'),(93,'digicode'),(94,'double-fleche'),(95,'download'),(96,'drag-and-drop'),(97,'drag-arrows'),(98,'drive'),(99,'droite'),(100,'dropbox'),(103,'editbox_animation'),(101,'editbox_animation--line'),(102,'editbox_animation--popup'),(104,'editbox_animation--texticon'),(105,'editbox_arrow--down'),(106,'editbox_background'),(107,'editbox_block'),(109,'editbox_bold'),(108,'editbox_boldold'),(110,'editbox_bullet--distance'),(111,'editbox_bullet--padding'),(112,'editbox_bullets--numbers'),(113,'editbox_bullets--points'),(115,'editbox_button'),(114,'editbox_button--icon'),(116,'editbox_center--alignment'),(117,'editbox_center-alignment'),(118,'editbox_checkmark'),(119,'editbox_click'),(120,'editbox_cog'),(123,'editbox_color'),(124,'editbox_corner'),(125,'editbox_dashedline'),(127,'editbox_delete'),(129,'editbox_doc'),(128,'editbox_docdown'),(130,'editbox_doubleline'),(131,'editbox_extra'),(132,'editbox_fill'),(133,'editbox_filter'),(134,'editbox_fontsize'),(135,'editbox_frames'),(136,'editbox_fullline'),(137,'editbox_gallery'),(138,'editbox_gradient'),(139,'editbox_highlight'),(140,'editbox_horizontal'),(144,'editbox_icon'),(141,'editbox_icon--left'),(142,'editbox_icon--no-icon'),(143,'editbox_icon--no-text'),(145,'editbox_icon--top'),(146,'editbox_indent'),(147,'editbox_insertbutton'),(148,'editbox_italic'),(149,'editbox_justify'),(151,'editbox_left--alignment'),(150,'editbox_left--alignment.png'),(152,'editbox_leftbottom'),(153,'editbox_lefttop'),(154,'editbox_lettersize'),(155,'editbox_letterspace'),(158,'editbox_line--style'),(157,'editbox_lines'),(156,'editbox_linespace'),(159,'editbox_link'),(160,'editbox_list-arrow'),(162,'editbox_list-circle'),(161,'editbox_list-circleno'),(163,'editbox_list-ok'),(164,'editbox_list-polygon'),(166,'editbox_list-rhombus'),(165,'editbox_list-rhombusno'),(168,'editbox_list-square'),(167,'editbox_list-squareno'),(169,'editbox_list-star'),(171,'editbox_list-triangle'),(170,'editbox_list-triangleno'),(172,'editbox_margin'),(174,'editbox_menu'),(173,'editbox_menu.png'),(175,'editbox_newpage'),(176,'editbox_nolink'),(177,'editbox_numberbullets'),(178,'editbox_opacity'),(179,'editbox_openmenu'),(180,'editbox_otherlinks'),(181,'editbox_paragraph'),(182,'editbox_pencil'),(191,'editbox_photo'),(183,'editbox_photo--change'),(184,'editbox_photo--crop'),(186,'editbox_photo--free'),(185,'editbox_photo--freeform'),(187,'editbox_photo--landscape'),(188,'editbox_photo--portrait'),(189,'editbox_photo--retouch'),(190,'editbox_photo--square'),(192,'editbox_picture'),(193,'editbox_plus'),(194,'editbox_pointbullets'),(196,'editbox_right--alignment'),(197,'editbox_right-alignment'),(198,'editbox_right-arrow'),(199,'editbox_rightbottom'),(200,'editbox_righttop'),(195,'editbox_right_alignment'),(201,'editbox_rounding'),(202,'editbox_scroll'),(203,'editbox_search'),(204,'editbox_sections'),(206,'editbox_separator'),(205,'editbox_separator--horizontal'),(207,'editbox_separatorV'),(208,'editbox_shadow'),(209,'editbox_shapes'),(211,'editbox_size'),(210,'editbox_size--animation'),(212,'editbox_slider'),(213,'editbox_smalldashed'),(214,'editbox_space'),(215,'editbox_structure'),(216,'editbox_symbols'),(218,'editbox_text'),(217,'editbox_text--animation'),(219,'editbox_time'),(220,'editbox_underline'),(221,'editbox_unpublish'),(222,'editbox_up-arrow'),(223,'editbox_va'),(224,'editbox_video'),(225,'editbox_webpage'),(226,'email'),(227,'eye'),(228,'file-doc'),(229,'file-other'),(230,'file-pdf'),(231,'file-txt'),(233,'floppy'),(232,'floppy-2'),(234,'folder'),(235,'gears'),(236,'graphics'),(237,'header_ajouter'),(238,'header_arrow-up'),(240,'header_grid'),(239,'header_grid1'),(242,'header_mobile'),(241,'header_mobilenew'),(243,'header_plus'),(244,'header_positionning'),(245,'header_preview'),(246,'header_question'),(247,'header_redo'),(248,'header_save'),(249,'header_tools'),(250,'header_undo'),(251,'horizontal-old'),(252,'informations'),(253,'instagram'),(254,'lens'),(255,'lines'),(256,'list'),(257,'lock'),(258,'logo'),(259,'lyon'),(260,'mail'),(261,'maintenance'),(262,'menu_edit'),(263,'menu_expand'),(264,'menu_history'),(265,'menu_linkedpages'),(266,'menu_pages'),(267,'message'),(269,'middle'),(268,'middle-old'),(271,'mini-arrow-bottom-new'),(270,'mini-arrow-bottom-new-min'),(272,'mini-arrow-horizontal-new'),(273,'mini-arrow-left-new'),(274,'mini-arrow-right-new'),(276,'mini-arrow-top-new'),(275,'mini-arrow-top-new-min'),(278,'mini-arrow-vertical'),(277,'mini-arrow-vertical-new'),(280,'mobile'),(279,'mobile-phone'),(281,'more'),(282,'mosaique'),(283,'my-sites'),(291,'newsletter'),(284,'new_Headphone_fill'),(285,'new_lamp'),(286,'new_Map_fill'),(288,'new_musical-note'),(287,'new_musical-note-2'),(289,'new_paint-roller'),(290,'new_reload'),(292,'new_sofa'),(293,'new_Star_fill'),(294,'new_sync'),(295,'new_tree'),(296,'new_water'),(298,'new_wifi'),(297,'new_wifi-2'),(299,'notification'),(300,'onedrive'),(302,'page-menu_edit'),(303,'page-menu_history'),(301,'PAGEMAP.png'),(304,'palette-switch'),(305,'paragraphe'),(306,'password'),(307,'pensil'),(308,'phone'),(311,'quadruple-fleche'),(309,'quadruple-fleche-new'),(310,'quadruple-fleche-small'),(312,'quickmenu_arrow-up'),(313,'rating-star'),(314,'rotation'),(315,'search-bar__arrow-down'),(316,'settings'),(317,'share'),(318,'sun'),(319,'symetry-hor'),(320,'texte_vert_A'),(321,'toolbox_block'),(322,'toolbox_more'),(323,'toolbox_picture'),(324,'toolbox_t-letter'),(325,'tools_alignment--bottom'),(326,'tools_alignment--horizontal'),(327,'tools_alignment--left'),(328,'tools_alignment--right'),(329,'tools_alignment--top'),(330,'tools_alignment--vertical'),(331,'tools_copy'),(332,'tools_delete'),(333,'tools_flipH'),(334,'tools_flipV'),(335,'tools_layer--down'),(336,'tools_layer--up'),(338,'tools_paste'),(337,'tools_pasteOld'),(339,'tools_pin'),(340,'tools_rotate'),(341,'trash'),(342,'unavailable'),(343,'unlock'),(344,'weather');
/*!40000 ALTER TABLE `icons` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `job_credential`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `job_credential` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `app_key` varchar(100) NOT NULL,
  `customer_key` varchar(100) NOT NULL,
  `job_id` varchar(100) NOT NULL,
  `user_id` varchar(100) NOT NULL,
  `ctime` int(11) NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `job_id` (`job_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `job_credential` WRITE;
/*!40000 ALTER TABLE `job_credential` DISABLE KEYS */;
/*!40000 ALTER TABLE `job_credential` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `language`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `language` (
  `code` varchar(8) NOT NULL,
  `lcid` varchar(16) NOT NULL,
  `locale_en` varchar(128) NOT NULL,
  `locale` varchar(128) NOT NULL,
  `flag_image` varchar(200) DEFAULT NULL,
  `state` enum('active','deleted') NOT NULL DEFAULT 'deleted',
  `comment` varchar(128) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `language` WRITE;
/*!40000 ALTER TABLE `language` DISABLE KEYS */;
INSERT INTO `language` VALUES ('af','af-NA','Afrikaans (Namibia)','',NULL,'deleted',''),('af','af-ZA','Afrikaans (South Africa)','',NULL,'deleted',''),('af','af','Afrikaans','','/images/flags/languages_Afrikaans.svg','active',''),('ak','ak-GH','Akan (Ghana)','',NULL,'deleted',''),('ak','ak','Akan','',NULL,'deleted',''),('sq','sq-AL','Albanian (Albania)','',NULL,'deleted',''),('sq','sq','Albanian','','/images/flags/languages_Albanian.svg','active',''),('am','am-ET','Amharic (Ethiopia)','',NULL,'deleted',''),('am','am','Amharic','',NULL,'deleted',''),('ar','ar-DZ','Arabic (Algeria)','العربية',NULL,'deleted',''),('ar','ar-BH','Arabic (Bahrain)','العربية',NULL,'deleted',''),('ar','ar-EG','Arabic (Egypt)','العربية',NULL,'deleted',''),('ar','ar-IQ','Arabic (Iraq)','العربية',NULL,'deleted',''),('ar','ar-JO','Arabic (Jordan)','العربية',NULL,'deleted',''),('ar','ar-KW','Arabic (Kuwait)','العربية',NULL,'deleted',''),('ar','ar-LB','Arabic (Lebanon)','العربية',NULL,'deleted',''),('ar','ar-LY','Arabic (Libya)','العربية',NULL,'deleted',''),('ar','ar-MA','Arabic (Morocco)','العربية',NULL,'deleted',''),('ar','ar-OM','Arabic (Oman)','العربية',NULL,'deleted',''),('ar','ar-QA','Arabic (Qatar)','العربية',NULL,'deleted',''),('ar','ar-SA','Arabic (Saudi Arabia)','العربية',NULL,'deleted',''),('ar','ar-SD','Arabic (Sudan)','العربية',NULL,'deleted',''),('ar','ar-SY','Arabic (Syria)','العربية',NULL,'deleted',''),('ar','ar-TN','Arabic (Tunisia)','العربية',NULL,'deleted',''),('ar','ar-AE','Arabic (United Arab Emirates)','العربية',NULL,'deleted',''),('ar','ar-YE','Arabic (Yemen)','العربية',NULL,'deleted',''),('ar','ar','Arabic','العربية','/images/flags/languages_Arabic.svg','active',''),('hy','hy-AM','Armenian (Armenia)','',NULL,'deleted',''),('hy','hy','Armenian','','/images/flags/languages_Armenian.svg','active',''),('as','as-IN','Assamese (India)','',NULL,'deleted',''),('as','as','Assamese','',NULL,'deleted',''),('asa','asa-TZ','Asu (Tanzania)','',NULL,'deleted',''),('asa','asa','Asu','',NULL,'deleted',''),('az','az-Cyrl','Azerbaijani (Cyrillic)','',NULL,'deleted',''),('az','az-Cyrl-AZ','Azerbaijani (Cyrillic, Azerbaijan)','',NULL,'deleted',''),('az','az-Latn','Azerbaijani (Latin)','',NULL,'deleted',''),('az','az-Latn-AZ','Azerbaijani (Latin, Azerbaijan)','',NULL,'deleted',''),('az','az','Azerbaijani','','/images/flags/languages_Azerbaijani.svg','active',''),('bm','bm-ML','Bambara (Mali)','',NULL,'deleted',''),('bm','bm','Bambara','',NULL,'deleted',''),('eu','eu-ES','Basque (Spain)','',NULL,'deleted',''),('eu','eu','Basque','',NULL,'deleted',''),('be','be-BY','Belarusian (Belarus)','',NULL,'deleted',''),('be','be','Belarusian','',NULL,'deleted',''),('bem','bem-ZM','Bemba (Zambia)','',NULL,'deleted',''),('bem','bem','Bemba','',NULL,'deleted',''),('bez','bez-TZ','Bena (Tanzania)','',NULL,'deleted',''),('bez','bez','Bena','',NULL,'deleted',''),('bn','bn-BD','Bengali (Bangladesh)','',NULL,'deleted',''),('bn','bn-IN','Bengali (India)','',NULL,'deleted',''),('bn','bn','Bengali','','/images/flags/languages_Bengali.svg','active',''),('bs','bs-BA','Bosnian (Bosnia and Herzegovina)','',NULL,'deleted',''),('bs','bs','Bosnian','','/images/flags/languages_Bosnian.svg','active',''),('bg','bg-BG','Bulgarian (Bulgaria)','Български',NULL,'deleted',''),('bg','bg','Bulgarian','Български','/images/flags/languages_Bulgarian.svg','active',''),('my','my-MM','Burmese (Myanmar [Burma])','',NULL,'deleted',''),('my','my','Burmese','',NULL,'deleted',''),('ca','ca-ES','Catalan (Spain)','',NULL,'deleted',''),('ca','ca','Catalan','',NULL,'deleted',''),('tzm','tzm-Latn','Central Morocco Tamazight (Latin)','',NULL,'deleted',''),('tzm','tzm-Latn-MA','Central Morocco Tamazight (Latin, Morocco)','',NULL,'deleted',''),('tzm','tzm','Central Morocco Tamazight','',NULL,'deleted',''),('chr','chr-US','Cherokee (United States)','',NULL,'deleted',''),('chr','chr','Cherokee','',NULL,'deleted',''),('cgg','cgg-UG','Chiga (Uganda)','',NULL,'deleted',''),('cgg','cgg','Chiga','',NULL,'deleted',''),('zh','zh-Hans','Chinese (Simplified Han)','汉语',NULL,'deleted',''),('zh','zh-Hans-CN','Chinese (Simplified Han, China)','汉语',NULL,'deleted',''),('zh','zh-Hans-HK','Chinese (Simplified Han, Hong Kong SAR China)','华语',NULL,'deleted',''),('zh','zh-Hans-MO','Chinese (Simplified Han, Macau SAR China)','华语',NULL,'deleted',''),('zh','zh-Hans-SG','Chinese (Simplified Han, Singapore)','华语',NULL,'deleted',''),('zh','zh-Hant','Chinese (Traditional Han)','漢語',NULL,'deleted',''),('zh','zh-Hant-HK','Chinese (Traditional Han, Hong Kong SAR China)','華語',NULL,'deleted',''),('zh','zh-Hant-MO','Chinese (Traditional Han, Macau SAR China)','華語',NULL,'deleted',''),('zh','zh-Hant-TW','Chinese (Traditional Han, Taiwan)','華語',NULL,'deleted',''),('zh','zh','Chinese','中文','/images/flags/languages_Chinese.svg','active',''),('kw','kw-GB','Cornish (United Kingdom)','',NULL,'deleted',''),('kw','kw','Cornish','',NULL,'deleted',''),('hr','hr-HR','Croatian (Croatia)','',NULL,'deleted',''),('hr','hr','Croatian','','/images/flags/languages_Croatian.svg','active',''),('cs','cs-CZ','Czech (Czech Republic)','Čeština',NULL,'deleted',''),('cs','cs','Czech','Čeština','/images/flags/languages_Czech.svg','active',''),('da','da-DK','Danish (Denmark)','',NULL,'deleted',''),('da','da','Danish','','/images/flags/languages_Danish.svg','active',''),('nl','nl-BE','Dutch (Belgium)','',NULL,'deleted',''),('nl','nl-NL','Dutch (Netherlands)','',NULL,'deleted',''),('nl','nl','Dutch','','/images/flags/languages_Dutch.svg','active',''),('ebu','ebu-KE','Embu (Kenya)','',NULL,'deleted',''),('ebu','ebu','Embu','',NULL,'deleted',''),('en','en-AS','English (American Samoa)','',NULL,'deleted',''),('en','en-AU','English (Australia)','',NULL,'deleted',''),('en','en-BE','English (Belgium)','',NULL,'deleted',''),('en','en-BZ','English (Belize)','',NULL,'deleted',''),('en','en-BW','English (Botswana)','',NULL,'deleted',''),('en','en-CA','English (Canada)','',NULL,'deleted',''),('en','en-GU','English (Guam)','',NULL,'deleted',''),('en','en-HK','English (Hong Kong SAR China)','',NULL,'deleted',''),('en','en-IN','English (India)','',NULL,'deleted',''),('en','en-IE','English (Ireland)','',NULL,'deleted',''),('en','en-JM','English (Jamaica)','',NULL,'deleted',''),('en','en-MT','English (Malta)','',NULL,'deleted',''),('en','en-MH','English (Marshall Islands)','',NULL,'deleted',''),('en','en-MU','English (Mauritius)','',NULL,'deleted',''),('en','en-NA','English (Namibia)','',NULL,'deleted',''),('en','en-NZ','English (New Zealand)','',NULL,'deleted',''),('en','en-MP','English (Northern Mariana Islands)','',NULL,'deleted',''),('en','en-PK','English (Pakistan)','',NULL,'deleted',''),('en','en-PH','English (Philippines)','',NULL,'deleted',''),('en','en-SG','English (Singapore)','',NULL,'deleted',''),('en','en-ZA','English (South Africa)','',NULL,'deleted',''),('en','en-TT','English (Trinidad and Tobago)','',NULL,'deleted',''),('en','en-UM','English (U.S. Minor Outlying Islands)','',NULL,'deleted',''),('en','en-VI','English (U.S. Virgin Islands)','',NULL,'deleted',''),('en','en-GB','English (United Kingdom)','',NULL,'deleted',''),('en','en-US','English (United States)','',NULL,'deleted',''),('en','en-ZW','English (Zimbabwe)','',NULL,'deleted',''),('en','en','English','','/images/flags/languages_English.svg','active',''),('eo','eo','Esperanto','',NULL,'deleted',''),('et','et-EE','Estonian (Estonia)','',NULL,'deleted',''),('et','et','Estonian','','/images/flags/languages_Estonian.svg','active',''),('ee','ee-GH','Ewe (Ghana)','',NULL,'deleted',''),('ee','ee-TG','Ewe (Togo)','',NULL,'deleted',''),('ee','ee','Ewe','',NULL,'deleted',''),('fo','fo-FO','Faroese (Faroe Islands)','',NULL,'deleted',''),('fo','fo','Faroese','','/images/flags/languages_Faroese.svg','active',''),('fil','fil-PH','Filipino (Philippines)','',NULL,'deleted',''),('fil','fil','Filipino','','/images/flags/languages_Filipino.svg','active',''),('fi','fi-FI','Finnish (Finland)','',NULL,'deleted',''),('fi','fi','Finnish','','/images/flags/languages_Finnish.svg','active',''),('fr','fr-BE','French (Belgium)','Français (Belgique)',NULL,'deleted',''),('fr','fr-BJ','French (Benin)','Français (Benin)',NULL,'deleted',''),('fr','fr-BF','French (Burkina Faso)','Français (Burkina Faso)',NULL,'deleted',''),('fr','fr-BI','French (Burundi)','Français (Burundi)',NULL,'deleted',''),('fr','fr-CM','French (Cameroon)','Français (Cameroune)',NULL,'deleted',''),('fr','fr-CA','French (Canada)','Français (Canada)',NULL,'deleted',''),('fr','fr-CF','French (Central African Republic)','Français (République Centre Africaine)',NULL,'deleted',''),('fr','fr-TD','French (Chad)','Français (Chad)',NULL,'deleted',''),('fr','fr-KM','French (Comoros)','Français (Comores)',NULL,'deleted',''),('fr','fr-CG','French (Congo - Brazzaville)','Français (Congo - Brazzaville)',NULL,'deleted',''),('fr','fr-CD','French (Congo - Kinshasa)','Français (Congo - Kinshasa)',NULL,'deleted',''),('fr','fr-CI','French (Yvory Coast)','Français (Côte d’Ivoire)',NULL,'deleted',''),('fr','fr-DJ','French (Djibouti)','Français (Djibouti)',NULL,'deleted',''),('fr','fr-GQ','French (Equatorial Guinea)','Français (Guinée Equatoriale)',NULL,'deleted',''),('fr','fr-FR','French (France)','Français (France)',NULL,'deleted',''),('fr','fr-GA','French (Gabon)','Français (Gabon)',NULL,'deleted',''),('fr','fr-GP','French (Guadeloupe)','Français (Guadeloupe)',NULL,'deleted',''),('fr','fr-GN','French (Guinea)','',NULL,'deleted','Français (Guinée)'),('fr','fr-LU','French (Luxembourg)','Français (Luxembourg)',NULL,'deleted',''),('fr','fr-MG','French (Madagascar)','Français (Madagascar)',NULL,'deleted',''),('fr','fr-ML','French (Mali)','Français (Mali)',NULL,'deleted',''),('fr','fr-MQ','French (Martinique)','Français (Martinique)',NULL,'deleted',''),('fr','fr-MC','French (Monaco)','Français (Monaco)',NULL,'deleted',''),('fr','fr-NE','French (Niger)','Français (Niger)',NULL,'deleted',''),('fr','fr-RW','French (Rwanda)','Français (Rwanda)',NULL,'deleted',''),('fr','fr-RE','French (Réunion)','Français (Réunion)',NULL,'deleted',''),('fr','fr-BL','French (Saint Barthelemy)','Français (Saint Barthélemy)',NULL,'deleted',''),('fr','fr-MF','French (Saint Martin)','Français (Saint Martin)',NULL,'deleted',''),('fr','fr-SN','French (Senegal)','Français (Sénégal)',NULL,'deleted',''),('fr','fr-CH','French (Switzerland)','Français (Suisse)',NULL,'deleted',''),('fr','fr-TG','French (Togo)','Français (Togo)',NULL,'deleted',''),('fr','fr','French','Français','/images/flags/languages_French.svg','active','Générique'),('ff','ff-SN','Fulah (Senegal)','',NULL,'deleted',''),('ff','ff','Fulah','',NULL,'deleted',''),('gl','gl-ES','Galician (Spain)','',NULL,'deleted',''),('gl','gl','Galician','',NULL,'deleted',''),('lg','lg-UG','Ganda (Uganda)','',NULL,'deleted',''),('lg','lg','Ganda','',NULL,'deleted',''),('ka','ka-GE','Georgian (Georgia)','',NULL,'deleted',''),('ka','ka','Georgian','','/images/flags/languages_Georgian.svg','active',''),('de','de-AT','German (Austria)','',NULL,'deleted',''),('de','de-BE','German (Belgium)','',NULL,'deleted',''),('de','de-DE','German (Germany)','',NULL,'deleted',''),('de','de-LI','German (Liechtenstein)','',NULL,'deleted',''),('de','de-LU','German (Luxembourg)','',NULL,'deleted',''),('de','de-CH','German (Switzerland)','',NULL,'deleted',''),('de','de','German','','/images/flags/languages_German.svg','active',''),('el','el-CY','Greek (Cyprus)','',NULL,'deleted',''),('el','el-GR','Greek (Greece)','',NULL,'deleted',''),('el','el','Greek','','/images/flags/languages_Greek.svg','active',''),('gu','gu-IN','Gujarati (India)','',NULL,'deleted',''),('gu','gu','Gujarati','',NULL,'deleted',''),('guz','guz-KE','Gusii (Kenya)','',NULL,'deleted',''),('guz','guz','Gusii','',NULL,'deleted',''),('ha','ha-Latn','Hausa (Latin)','',NULL,'deleted',''),('ha','ha-Latn-GH','Hausa (Latin, Ghana)','',NULL,'deleted',''),('ha','ha-Latn-NE','Hausa (Latin, Niger)','',NULL,'deleted',''),('ha','ha-Latn-NG','Hausa (Latin, Nigeria)','',NULL,'deleted',''),('ha','ha','Hausa','',NULL,'deleted',''),('haw','haw-US','Hawaiian (United States)','',NULL,'deleted',''),('haw','haw','Hawaiian','','/images/flags/languages_Hawaiian.svg','active',''),('he','he-IL','Hebrew (Israel)','',NULL,'deleted',''),('he','he','Hebrew','','/images/flags/languages_Hebrew.svg','active',''),('hi','hi-IN','Hindi (India)','',NULL,'deleted',''),('hi','hi','Hindi','','/images/flags/languages_Hindi.svg','active',''),('hu','hu-HU','Hungarian (Hungary)','',NULL,'deleted',''),('hu','hu','Hungarian','','/images/flags/languages_Hungarian.svg','active',''),('is','is-IS','Icelandic (Iceland)','',NULL,'deleted',''),('is','is','Icelandic','','/images/flags/languages_Icelandic.svg','active',''),('ig','ig-NG','Igbo (Nigeria)','',NULL,'deleted',''),('ig','ig','Igbo','',NULL,'deleted',''),('id','id-ID','Indonesian (Indonesia)','',NULL,'deleted',''),('id','id','Indonesian','','/images/flags/languages_Indonesian.svg','active',''),('ga','ga-IE','Irish (Ireland)','',NULL,'deleted',''),('ga','ga','Irish','','/images/flags/languages_Irish.svg','active',''),('it','it-IT','Italian (Italy)','',NULL,'deleted',''),('it','it-CH','Italian (Switzerland)','',NULL,'deleted',''),('it','it','Italian','','/images/flags/languages_Italian.svg','active',''),('ja','ja-JP','Japanese (Japan)','日本語 (Japan)',NULL,'deleted',''),('ja','ja','Japanese','日本語 (Japan)','/images/flags/languages_Japanese.svg','active',''),('kea','kea-CV','Kabuverdianu (Cape Verde)','',NULL,'deleted',''),('kea','kea','Kabuverdianu','',NULL,'deleted',''),('kab','kab-DZ','Kabyle (Algeria)','',NULL,'deleted',''),('kab','kab','Kabyle','','/images/flags/languages_Kabyle.svg','active',''),('kl','kl-GL','Kalaallisut (Greenland)','',NULL,'deleted',''),('kl','kl','Kalaallisut','',NULL,'deleted',''),('kln','kln-KE','Kalenjin (Kenya)','',NULL,'deleted',''),('kln','kln','Kalenjin','',NULL,'deleted',''),('kam','kam-KE','Kamba (Kenya)','',NULL,'deleted',''),('kam','kam','Kamba','',NULL,'deleted',''),('kn','kn-IN','Kannada (India)','',NULL,'deleted',''),('kn','kn','Kannada','',NULL,'deleted',''),('kk','kk-Cyrl','Kazakh (Cyrillic)','',NULL,'deleted',''),('kk','kk-Cyrl-KZ','Kazakh (Cyrillic, Kazakhstan)','',NULL,'deleted',''),('kk','kk','Kazakh','',NULL,'deleted',''),('km','km-KH','Khmer (Cambodia)','',NULL,'deleted',''),('km','km','Khmer','','/images/flags/languages_Khmer.svg','active',''),('ki','ki-KE','Kikuyu (Kenya)','',NULL,'deleted',''),('ki','ki','Kikuyu','',NULL,'deleted',''),('rw','rw-RW','Kinyarwanda (Rwanda)','',NULL,'deleted',''),('rw','rw','Kinyarwanda','',NULL,'deleted',''),('kok','kok-IN','Konkani (India)','',NULL,'deleted',''),('kok','kok','Konkani','',NULL,'deleted',''),('ko','ko-KR','Korean (South Korea)','한국어 (South Korea)',NULL,'deleted',''),('ko','ko','Korean','한국어','/images/flags/languages_Korean.svg','active',''),('khq','khq-ML','Koyra Chiini (Mali)','',NULL,'deleted',''),('khq','khq','Koyra Chiini','',NULL,'deleted',''),('ses','ses-ML','Koyraboro Senni (Mali)','',NULL,'deleted',''),('ses','ses','Koyraboro Senni','',NULL,'deleted',''),('lag','lag-TZ','Langi (Tanzania)','',NULL,'deleted',''),('lag','lag','Langi','',NULL,'deleted',''),('lv','lv-LV','Latvian (Latvia)','',NULL,'deleted',''),('lv','lv','Latvian','','/images/flags/languages_Latvian.svg','active',''),('lt','lt-LT','Lithuanian (Lithuania)','',NULL,'deleted',''),('lt','lt','Lithuanian','','/images/flags/languages_Lithuanian.svg','active',''),('luo','luo-KE','Luo (Kenya)','',NULL,'deleted',''),('luo','luo','Luo','',NULL,'deleted',''),('luy','luy-KE','Luyia (Kenya)','',NULL,'deleted',''),('luy','luy','Luyia','',NULL,'deleted',''),('mk','mk-MK','Macedonian (Macedonia)','',NULL,'deleted',''),('mk','mk','Macedonian','','/images/flags/languages_Macedonian.svg','active',''),('jmc','jmc-TZ','Machame (Tanzania)','',NULL,'deleted',''),('jmc','jmc','Machame','',NULL,'deleted',''),('kde','kde-TZ','Makonde (Tanzania)','',NULL,'deleted',''),('kde','kde','Makonde','',NULL,'deleted',''),('mg','mg-MG','Malagasy (Madagascar)','',NULL,'deleted',''),('mg','mg','Malagasy','',NULL,'deleted',''),('ms','ms-BN','Malay (Brunei)','',NULL,'deleted',''),('ms','ms-MY','Malay (Malaysia)','',NULL,'deleted',''),('ms','ms','Malay','','/images/flags/languages_Malay.svg','active',''),('ml','ml-IN','Malayalam (India)','',NULL,'deleted',''),('ml','ml','Malayalam','',NULL,'deleted',''),('mt','mt-MT','Maltese (Malta)','',NULL,'deleted',''),('mt','mt','Maltese','','/images/flags/languages_Maltese.svg','active',''),('gv','gv-GB','Manx (United Kingdom)','',NULL,'deleted',''),('gv','gv','Manx','',NULL,'deleted',''),('mr','mr-IN','Marathi (India)','',NULL,'deleted',''),('mr','mr','Marathi','',NULL,'deleted',''),('mas','mas-KE','Masai (Kenya)','',NULL,'deleted',''),('mas','mas-TZ','Masai (Tanzania)','',NULL,'deleted',''),('mas','mas','Masai','',NULL,'deleted',''),('mer','mer-KE','Meru (Kenya)','',NULL,'deleted',''),('mer','mer','Meru','',NULL,'deleted',''),('mfe','mfe-MU','Morisyen (Mauritius)','',NULL,'deleted',''),('mfe','mfe','Morisyen','',NULL,'deleted',''),('naq','naq-NA','Nama (Namibia)','',NULL,'deleted',''),('naq','naq','Nama','',NULL,'deleted',''),('ne','ne-IN','Nepali (India)','',NULL,'deleted',''),('ne','ne-NP','Nepali (Nepal)','',NULL,'deleted',''),('ne','ne','Nepali','','/images/flags/languages_Nepali.svg','active',''),('nd','nd-ZW','North Ndebele (Zimbabwe)','',NULL,'deleted',''),('nd','nd','North Ndebele','',NULL,'deleted',''),('nb','nb-NO','Norwegian Bokmål (Norway)','',NULL,'deleted',''),('nb','nb','Norwegian Bokmål','','/images/flags/languages_Norwegian.svg','active',''),('nn','nn-NO','Norwegian Nynorsk (Norway)','',NULL,'deleted',''),('nn','nn','Norwegian Nynorsk','',NULL,'deleted',''),('nyn','nyn-UG','Nyankole (Uganda)','',NULL,'deleted',''),('nyn','nyn','Nyankole','',NULL,'deleted',''),('or','or-IN','Oriya (India)','',NULL,'deleted',''),('or','or','Oriya','',NULL,'deleted',''),('om','om-ET','Oromo (Ethiopia)','',NULL,'deleted',''),('om','om-KE','Oromo (Kenya)','',NULL,'deleted',''),('om','om','Oromo','',NULL,'deleted',''),('ps','ps-AF','Pashto (Afghanistan)','',NULL,'deleted',''),('ps','ps','Pashto','',NULL,'deleted',''),('fa','fa-AF','Persian (Afghanistan)','',NULL,'deleted',''),('fa','fa-IR','Persian (Iran)','',NULL,'deleted',''),('fa','fa','Persian','','/images/flags/languages_Persian.svg','active',''),('pl','pl-PL','Polish (Poland)','',NULL,'deleted',''),('pl','pl','Polish','','/images/flags/languages_Polish.svg','active',''),('pt','pt-BR','Portuguese (Brazil)','',NULL,'deleted',''),('pt','pt-GW','Portuguese (Guinea-Bissau)','',NULL,'deleted',''),('pt','pt-MZ','Portuguese (Mozambique)','',NULL,'deleted',''),('pt','pt-PT','Portuguese (Portugal)','',NULL,'deleted',''),('pt','pt','Portuguese','','/images/flags/languages_Portuguese.svg','active',''),('pa','pa-Arab','Punjabi (Arabic)','',NULL,'deleted',''),('pa','pa-Arab-PK','Punjabi (Arabic, Pakistan)','',NULL,'deleted',''),('pa','pa-Guru','Punjabi (Gurmukhi)','',NULL,'deleted',''),('pa','pa-Guru-IN','Punjabi (Gurmukhi, India)','',NULL,'deleted',''),('pa','pa','Punjabi','',NULL,'deleted',''),('ro','ro-MD','Romanian (Moldova)','',NULL,'deleted',''),('ro','ro-RO','Romanian (Romania)','',NULL,'deleted',''),('ro','ro','Romanian','','/images/flags/languages_Romanian.svg','active',''),('rm','rm-CH','Romansh (Switzerland)','',NULL,'deleted',''),('rm','rm','Romansh','',NULL,'deleted',''),('rof','rof-TZ','Rombo (Tanzania)','',NULL,'deleted',''),('rof','rof','Rombo','',NULL,'deleted',''),('ru','ru-MD','Russian (Moldova)','',NULL,'deleted',''),('ru','ru-RU','Russian (Russia)','',NULL,'deleted',''),('ru','ru-UA','Russian (Ukraine)','',NULL,'deleted',''),('ru','ru','Russian','','/images/flags/languages_Russian.svg','active',''),('rwk','rwk-TZ','Rwa (Tanzania)','',NULL,'deleted',''),('rwk','rwk','Rwa','',NULL,'deleted',''),('saq','saq-KE','Samburu (Kenya)','',NULL,'deleted',''),('saq','saq','Samburu','',NULL,'deleted',''),('sg','sg-CF','Sango (Central African Republic)','',NULL,'deleted',''),('sg','sg','Sango','',NULL,'deleted',''),('seh','seh-MZ','Sena (Mozambique)','',NULL,'deleted',''),('seh','seh','Sena','',NULL,'deleted',''),('sr','sr-Cyrl','Serbian (Cyrillic)','',NULL,'deleted',''),('sr','sr-Cyrl-BA','Serbian (Cyrillic, Bosnia and Herzegovina)','',NULL,'deleted',''),('sr','sr-Cyrl-ME','Serbian (Cyrillic, Montenegro)','',NULL,'deleted',''),('sr','sr-Cyrl-RS','Serbian (Cyrillic, Serbia)','',NULL,'deleted',''),('sr','sr-Latn','Serbian (Latin)','',NULL,'deleted',''),('sr','sr-Latn-BA','Serbian (Latin, Bosnia and Herzegovina)','',NULL,'deleted',''),('sr','sr-Latn-ME','Serbian (Latin, Montenegro)','',NULL,'deleted',''),('sr','sr-Latn-RS','Serbian (Latin, Serbia)','',NULL,'deleted',''),('sr','sr','Serbian','','/images/flags/languages_Serbian.svg','active',''),('sn','sn-ZW','Shona (Zimbabwe)','',NULL,'deleted',''),('sn','sn','Shona','',NULL,'deleted',''),('ii','ii-CN','Sichuan Yi (China)','',NULL,'deleted',''),('ii','ii','Sichuan Yi','',NULL,'deleted',''),('si','si-LK','Sinhala (Sri Lanka)','',NULL,'deleted',''),('si','si','Sinhala','',NULL,'deleted',''),('sk','sk-SK','Slovak (Slovakia)','',NULL,'deleted',''),('sk','sk','Slovak','','/images/flags/languages_Slovak.svg','active',''),('sl','sl-SI','Slovenian (Slovenia)','',NULL,'deleted',''),('sl','sl','Slovenian','','/images/flags/languages_Slovenian.svg','active',''),('xog','xog-UG','Soga (Uganda)','',NULL,'deleted',''),('xog','xog','Soga','',NULL,'deleted',''),('so','so-DJ','Somali (Djibouti)','',NULL,'deleted',''),('so','so-ET','Somali (Ethiopia)','',NULL,'deleted',''),('so','so-KE','Somali (Kenya)','',NULL,'deleted',''),('so','so-SO','Somali (Somalia)','',NULL,'deleted',''),('so','so','Somali','',NULL,'deleted',''),('es','es-AR','Spanish (Argentina)','',NULL,'deleted',''),('es','es-BO','Spanish (Bolivia)','',NULL,'deleted',''),('es','es-CL','Spanish (Chile)','',NULL,'deleted',''),('es','es-CO','Spanish (Colombia)','',NULL,'deleted',''),('es','es-CR','Spanish (Costa Rica)','',NULL,'deleted',''),('es','es-DO','Spanish (Dominican Republic)','',NULL,'deleted',''),('es','es-EC','Spanish (Ecuador)','',NULL,'deleted',''),('es','es-SV','Spanish (El Salvador)','',NULL,'deleted',''),('es','es-GQ','Spanish (Equatorial Guinea)','',NULL,'deleted',''),('es','es-GT','Spanish (Guatemala)','',NULL,'deleted',''),('es','es-HN','Spanish (Honduras)','',NULL,'deleted',''),('es','es-419','Spanish (Latin America)','',NULL,'deleted',''),('es','es-MX','Spanish (Mexico)','',NULL,'deleted',''),('es','es-NI','Spanish (Nicaragua)','',NULL,'deleted',''),('es','es-PA','Spanish (Panama)','',NULL,'deleted',''),('es','es-PY','Spanish (Paraguay)','',NULL,'deleted',''),('es','es-PE','Spanish (Peru)','',NULL,'deleted',''),('es','es-PR','Spanish (Puerto Rico)','',NULL,'deleted',''),('es','es-ES','Spanish (Spain)','',NULL,'deleted',''),('es','es-US','Spanish (United States)','',NULL,'deleted',''),('es','es-UY','Spanish (Uruguay)','',NULL,'deleted',''),('es','es-VE','Spanish (Venezuela)','',NULL,'deleted',''),('es','es','Spanish','','/images/flags/languages_Spanish.svg','active',''),('sw','sw-KE','Swahili (Kenya)','',NULL,'deleted',''),('sw','sw-TZ','Swahili (Tanzania)','',NULL,'deleted',''),('sw','sw','Swahili','',NULL,'deleted',''),('sv','sv-FI','Swedish (Finland)','',NULL,'deleted',''),('sv','sv-SE','Swedish (Sweden)','',NULL,'deleted',''),('sv','sv','Swedish','','/images/flags/languages_Swedish.svg','active',''),('gsw','gsw-CH','Swiss German (Switzerland)','',NULL,'deleted',''),('gsw','gsw','Swiss German','',NULL,'deleted',''),('shi','shi-Latn','Tachelhit (Latin)','',NULL,'deleted',''),('shi','shi-Latn-MA','Tachelhit (Latin, Morocco)','',NULL,'deleted',''),('shi','shi-Tfng','Tachelhit (Tifinagh)','',NULL,'deleted',''),('shi','shi-Tfng-MA','Tachelhit (Tifinagh, Morocco)','',NULL,'deleted',''),('shi','shi','Tachelhit','',NULL,'deleted',''),('dav','dav-KE','Taita (Kenya)','',NULL,'deleted',''),('dav','dav','Taita','',NULL,'deleted',''),('ta','ta-IN','Tamil (India)','',NULL,'deleted',''),('ta','ta-LK','Tamil (Sri Lanka)','',NULL,'deleted',''),('ta','ta','Tamil','',NULL,'deleted',''),('te','te-IN','Telugu (India)','',NULL,'deleted',''),('te','te','Telugu','',NULL,'deleted',''),('teo','teo-KE','Teso (Kenya)','',NULL,'deleted',''),('teo','teo-UG','Teso (Uganda)','',NULL,'deleted',''),('teo','teo','Teso','',NULL,'deleted',''),('th','th-TH','Thai (Thailand)','ไทย',NULL,'deleted',''),('th','th','Thai','ไทย','/images/flags/languages_Thai.svg','active',''),('bo','bo-CN','Tibetan (China)','',NULL,'deleted',''),('bo','bo-IN','Tibetan (India)','',NULL,'deleted',''),('bo','bo','Tibetan','','/images/flags/languages_Tibetan.svg','active',''),('ti','ti-ER','Tigrinya (Eritrea)','',NULL,'deleted',''),('ti','ti-ET','Tigrinya (Ethiopia)','',NULL,'deleted',''),('ti','ti','Tigrinya','',NULL,'deleted',''),('to','to-TO','Tonga (Tonga)','',NULL,'deleted',''),('to','to','Tonga','','/images/flags/languages_Tonga.svg','active',''),('tr','tr-TR','Turkish (Turkey)','',NULL,'deleted',''),('tr','tr','Turkish','','/images/flags/languages_Turkish.svg','active',''),('uk','uk-UA','Ukrainian (Ukraine)','',NULL,'deleted',''),('uk','uk','Ukrainian','','/images/flags/languages_Ukrainian.svg','active',''),('ur','ur-IN','Urdu (India)','',NULL,'deleted',''),('ur','ur-PK','Urdu (Pakistan)','',NULL,'deleted',''),('ur','ur','Urdu','',NULL,'deleted',''),('uz','uz-Arab','Uzbek (Arabic)','',NULL,'deleted',''),('uz','uz-Arab-AF','Uzbek (Arabic, Afghanistan)','',NULL,'deleted',''),('uz','uz-Cyrl','Uzbek (Cyrillic)','',NULL,'deleted',''),('uz','uz-Cyrl-UZ','Uzbek (Cyrillic, Uzbekistan)','',NULL,'deleted',''),('uz','uz-Latn','Uzbek (Latin)','',NULL,'deleted',''),('uz','uz-Latn-UZ','Uzbek (Latin, Uzbekistan)','',NULL,'deleted',''),('uz','uz','Uzbek','','/images/flags/languages_Uzbek.svg','active',''),('vi','vi-VN','Vietnamese (Vietnam)','Tiếng Việt',NULL,'deleted',''),('vi','vi','Vietnamese','Tiếng Việt','/images/flags/languages_Vietnamese.svg','active',''),('vun','vun-TZ','Vunjo (Tanzania)','',NULL,'deleted',''),('vun','vun','Vunjo','',NULL,'deleted',''),('cy','cy-GB','Welsh (United Kingdom)','',NULL,'deleted',''),('cy','cy','Welsh','','/images/flags/languages_Welsh.svg','active',''),('yo','yo-NG','Yoruba (Nigeria)','',NULL,'deleted',''),('yo','yo','Yoruba','',NULL,'deleted',''),('zu','zu-ZA','Zulu (South Africa)','',NULL,'deleted',''),('zu','zu','Zulu','',NULL,'deleted','');
/*!40000 ALTER TABLE `language` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `languages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `languages` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `key_code` varchar(40) NOT NULL,
  `category` varchar(40) DEFAULT NULL,
  `lng` varchar(20) NOT NULL,
  `des` text NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`key_code`,`category`,`lng`),
  KEY `key_code` (`key_code`),
  KEY `category` (`category`),
  KEY `lng` (`lng`),
  FULLTEXT KEY `des` (`des`)
) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `languages` WRITE;
/*!40000 ALTER TABLE `languages` DISABLE KEYS */;
/*!40000 ALTER TABLE `languages` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `log` (
  `sn` int(8) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(64) NOT NULL DEFAULT '',
  `key_id` varchar(64) NOT NULL DEFAULT '',
  `user_id` varbinary(16) NOT NULL DEFAULT '0',
  `username` varchar(40) NOT NULL,
  `update_time` int(11) unsigned NOT NULL DEFAULT 0,
  `start_time` int(11) unsigned NOT NULL DEFAULT 0,
  `ttl` int(11) unsigned NOT NULL DEFAULT 0,
  `last_ip` varchar(40) NOT NULL DEFAULT '',
  `last_ip_fwd_for` varchar(40) NOT NULL DEFAULT '',
  `req_uri` varchar(255) NOT NULL DEFAULT '',
  `referer` varchar(255) NOT NULL DEFAULT '',
  `ua` varchar(255) NOT NULL,
  `action` varchar(40) NOT NULL,
  PRIMARY KEY (`sn`),
  KEY `user_id` (`user_id`),
  KEY `last_ip` (`last_ip`),
  KEY `ua` (`ua`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `log` WRITE;
/*!40000 ALTER TABLE `log` DISABLE KEYS */;
/*!40000 ALTER TABLE `log` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `map_role`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `map_role` (
  `sys_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `uid` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `role_id` int(11) NOT NULL,
  `org_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `name` (`org_id`,`role_id`,`uid`),
  KEY `idx_uid` (`uid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `map_role` WRITE;
/*!40000 ALTER TABLE `map_role` DISABLE KEYS */;
/*!40000 ALTER TABLE `map_role` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `membership`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `membership` (
  `id` varbinary(40) NOT NULL,
  `user_id` varbinary(16) DEFAULT NULL,
  `drumate_id` varbinary(16) NOT NULL,
  `privilege` tinyint(4) unsigned NOT NULL,
  `hub_id` varbinary(16) NOT NULL,
  `area_id` varbinary(16) DEFAULT NULL,
  `area` enum('private','restricted','public') DEFAULT NULL,
  `username` varchar(40) DEFAULT NULL,
  `add_time` int(11) unsigned NOT NULL,
  `update_time` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  KEY `area` (`area`),
  KEY `username` (`username`),
  KEY `permission` (`privilege`),
  KEY `area_id` (`area_id`) USING BTREE,
  KEY `id` (`id`),
  KEY `hub_id` (`hub_id`),
  KEY `drumate_id` (`drumate_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `membership` WRITE;
/*!40000 ALTER TABLE `membership` DISABLE KEYS */;
/*!40000 ALTER TABLE `membership` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `mimic`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `mimic` (
  `id` varchar(16) NOT NULL,
  `mimicker` varchar(16) NOT NULL,
  `uid` varchar(16) NOT NULL,
  `status` enum('new','active','reject','endbytime','endbyuser','endbymimic') NOT NULL,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  `estimatetime` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `name` (`mimicker`,`uid`),
  KEY `status` (`status`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `mimic` WRITE;
/*!40000 ALTER TABLE `mimic` DISABLE KEYS */;
/*!40000 ALTER TABLE `mimic` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `non_drumate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `non_drumate` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varbinary(16) NOT NULL,
  `email` varchar(500) NOT NULL,
  `firstname` varchar(200) DEFAULT NULL,
  `lastname` varchar(200) DEFAULT NULL,
  `mobile` varchar(40) DEFAULT NULL,
  `extra` mediumtext DEFAULT NULL,
  `privilege` varchar(50) DEFAULT NULL,
  `token` varchar(255) NOT NULL,
  `action` enum('add_contributor','add_contact','share_media') NOT NULL,
  `entity_id` varchar(100) NOT NULL,
  `item_id` varchar(100) NOT NULL,
  `expiry_time` int(11) NOT NULL DEFAULT 0,
  `ctime` int(11) NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `email` (`email`,`action`,`entity_id`,`item_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `non_drumate` WRITE;
/*!40000 ALTER TABLE `non_drumate` DISABLE KEYS */;
/*!40000 ALTER TABLE `non_drumate` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `notice`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `notice` (
  `id` int(6) unsigned NOT NULL AUTO_INCREMENT,
  `dest_email` varchar(255) NOT NULL DEFAULT '',
  `category` enum('invitation','request','rendezvous','event','security','other') NOT NULL DEFAULT 'invitation',
  `sender_id` varbinary(16) NOT NULL,
  `dest_id` varbinary(16) NOT NULL,
  `link_id` varbinary(16) NOT NULL,
  `link_type` enum('community','event','poll') NOT NULL DEFAULT 'community',
  `status` enum('sent','received','open','declined') NOT NULL DEFAULT 'sent',
  `ctime` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `status` (`status`),
  KEY `subject_id` (`link_id`),
  KEY `subject_type` (`link_type`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `notice` WRITE;
/*!40000 ALTER TABLE `notice` DISABLE KEYS */;
/*!40000 ALTER TABLE `notice` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `notification`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `notification` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `share_id` varchar(50) DEFAULT NULL,
  `owner_id` varchar(16) NOT NULL,
  `resource_id` varchar(16) NOT NULL,
  `entity_id` varchar(512) NOT NULL,
  `message` mediumtext DEFAULT NULL,
  `expiry_time` int(11) NOT NULL DEFAULT 0,
  `permission` tinyint(4) unsigned NOT NULL,
  `status` enum('receive','accept','refuse','remove','change') DEFAULT 'receive',
  `ctime` int(11) DEFAULT NULL,
  `utime` int(11) DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `pkey` (`resource_id`,`entity_id`),
  KEY `entity_id` (`entity_id`),
  KEY `owner_id` (`owner_id`),
  KEY `resource_id` (`resource_id`),
  KEY `permission` (`permission`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `notification` WRITE;
/*!40000 ALTER TABLE `notification` DISABLE KEYS */;
/*!40000 ALTER TABLE `notification` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `organisation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation` (
  `sys_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `domain_id` int(11) NOT NULL,
  `name` varchar(512) DEFAULT NULL,
  `link` varchar(1024) DEFAULT NULL,
  `ident` varchar(80) DEFAULT NULL,
  `password_level` int(4) DEFAULT 1,
  `dir_visibility` varchar(40) DEFAULT 'all',
  `dir_info` varchar(40) DEFAULT 'all',
  `double_auth` int(1) DEFAULT 0,
  `usb_auth` int(1) DEFAULT 0,
  `owner_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `domain_id` (`domain_id`),
  UNIQUE KEY `id` (`id`),
  UNIQUE KEY `name` (`name`),
  UNIQUE KEY `owner_id` (`owner_id`),
  UNIQUE KEY `ident` (`ident`,`domain_id`),
  UNIQUE KEY `link` (`link`) USING HASH
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `organisation` WRITE;
/*!40000 ALTER TABLE `organisation` DISABLE KEYS */;
/*!40000 ALTER TABLE `organisation` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `organisation_entity`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation_entity` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `org_id` varchar(128) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `old_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `temp_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `is_checked` int(11) DEFAULT 0,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `org_id` (`org_id`),
  UNIQUE KEY `old_id` (`old_id`),
  UNIQUE KEY `old_idorg_id` (`org_id`,`old_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `organisation_entity` WRITE;
/*!40000 ALTER TABLE `organisation_entity` DISABLE KEYS */;
/*!40000 ALTER TABLE `organisation_entity` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `organisation_token`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organisation_token` (
  `email` varchar(512) NOT NULL,
  `secret` varchar(255) NOT NULL,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  PRIMARY KEY (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `organisation_token` WRITE;
/*!40000 ALTER TABLE `organisation_token` DISABLE KEYS */;
/*!40000 ALTER TABLE `organisation_token` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `organization`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `organization` (
  `sys_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(16) DEFAULT NULL,
  `domain_id` int(11) NOT NULL,
  `name` varchar(512) DEFAULT NULL,
  `home` varchar(1024) DEFAULT NULL,
  `ident` varchar(80) DEFAULT NULL,
  `password_level` int(4) DEFAULT 1,
  `dir_visibility` varchar(40) DEFAULT 'all',
  `dir_info` varchar(40) DEFAULT 'all',
  `double_auth` int(1) DEFAULT 0,
  `usb_auth` int(1) DEFAULT 0,
  `owner_id` varchar(16) DEFAULT NULL,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `domain_id` (`domain_id`),
  UNIQUE KEY `id` (`id`),
  UNIQUE KEY `name` (`name`),
  UNIQUE KEY `owner_id` (`owner_id`),
  UNIQUE KEY `ident` (`ident`,`domain_id`),
  UNIQUE KEY `home` (`home`) USING HASH
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `organization` WRITE;
/*!40000 ALTER TABLE `organization` DISABLE KEYS */;
/*!40000 ALTER TABLE `organization` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `orphaned_wicket`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `orphaned_wicket` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(64) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `owner_id` varchar(64) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `db_name` varchar(64) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `db_name` (`db_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `orphaned_wicket` WRITE;
/*!40000 ALTER TABLE `orphaned_wicket` DISABLE KEYS */;
/*!40000 ALTER TABLE `orphaned_wicket` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `otp`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `otp` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `uid` varchar(16) NOT NULL,
  `secret` varchar(64) NOT NULL,
  `code` int(11) DEFAULT NULL,
  `ctime` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `secret` (`secret`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `otp` WRITE;
/*!40000 ALTER TABLE `otp` DISABLE KEYS */;
/*!40000 ALTER TABLE `otp` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `payment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `payment` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `payment_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `entity_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `subscription_id` varchar(30) DEFAULT NULL,
  `payment_intent_id` varchar(30) DEFAULT NULL,
  `status` enum('initiated','pending','paid','failed','subscribed','other','manual') DEFAULT NULL,
  `product_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `product` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'pro',
  `plan` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'pro',
  `period` enum('free','month','year') DEFAULT 'free',
  `recurring` int(11) DEFAULT 0,
  `price` float DEFAULT 0,
  `offer_price` float DEFAULT NULL,
  `pay_mode` enum('free','pay','company','other') DEFAULT 'free',
  `is_active` int(1) DEFAULT 1,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  `ctime` int(11) unsigned NOT NULL,
  `utime` int(11) unsigned DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `payment_id` (`payment_id`,`subscription_id`,`payment_intent_id`,`entity_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `payment` WRITE;
/*!40000 ALTER TABLE `payment` DISABLE KEYS */;
/*!40000 ALTER TABLE `payment` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `plan`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `plan` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `plan` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'basic',
  `display_name` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'Basic',
  `cycle` enum('no','monthly','yearly','company','other') DEFAULT 'no',
  `duration` int(11) DEFAULT 0,
  `amount` float DEFAULT 0,
  `offer_amount` float DEFAULT NULL,
  `mode` enum('free','pay','company','other') DEFAULT 'free',
  `state` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'active',
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  `ctime` int(11) unsigned NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `plan` (`plan`,`cycle`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `plan` WRITE;
/*!40000 ALTER TABLE `plan` DISABLE KEYS */;
/*!40000 ALTER TABLE `plan` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `privilege`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `privilege` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `uid` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `domain_id` int(11) unsigned NOT NULL,
  `privilege` int(4) unsigned DEFAULT 0,
  `is_authoritative` tinyint(4) DEFAULT 0,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `uid` (`uid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `privilege` WRITE;
/*!40000 ALTER TABLE `privilege` DISABLE KEYS */;
/*!40000 ALTER TABLE `privilege` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `product`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `product` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `product` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'pro',
  `plan` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'pro',
  `period` enum('free','month','year') DEFAULT 'free',
  `recurring` int(11) DEFAULT 0,
  `price` float DEFAULT 0,
  `offer_price` float DEFAULT NULL,
  `pay_mode` enum('free','pay','company','other') DEFAULT 'free',
  `is_active` int(1) DEFAULT 1,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  `ctime` int(11) unsigned NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `product` WRITE;
/*!40000 ALTER TABLE `product` DISABLE KEYS */;
/*!40000 ALTER TABLE `product` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `profile`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `profile` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(80) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `drumate_id` varbinary(16) NOT NULL,
  `photo` varbinary(16) NOT NULL,
  `area` varchar(10) DEFAULT 'public',
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`),
  KEY `public` (`photo`),
  KEY `drumate_id` (`drumate_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `profile` WRITE;
/*!40000 ALTER TABLE `profile` DISABLE KEYS */;
/*!40000 ALTER TABLE `profile` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `public_key`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `public_key` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` varchar(16) NOT NULL,
  `key` varchar(512) NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `user_id` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `public_key` WRITE;
/*!40000 ALTER TABLE `public_key` DISABLE KEYS */;
/*!40000 ALTER TABLE `public_key` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `pulic_key`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `pulic_key` (
  `domain` varchar(256) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `key` varchar(256) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `hash` varchar(512) GENERATED ALWAYS AS (sha2(`key`,512)) VIRTUAL,
  PRIMARY KEY (`domain`),
  UNIQUE KEY `hash` (`hash`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `pulic_key` WRITE;
/*!40000 ALTER TABLE `pulic_key` DISABLE KEYS */;
/*!40000 ALTER TABLE `pulic_key` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `push_route`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `push_route` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `address` varchar(256) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `path` varchar(16) DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `address` (`address`),
  UNIQUE KEY `path` (`path`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `push_route` WRITE;
/*!40000 ALTER TABLE `push_route` DISABLE KEYS */;
/*!40000 ALTER TABLE `push_route` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `quota`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `quota` (
  `id` varbinary(16) NOT NULL,
  `size` decimal(12,1) NOT NULL DEFAULT 0.0,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `quota` WRITE;
/*!40000 ALTER TABLE `quota` DISABLE KEYS */;
/*!40000 ALTER TABLE `quota` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `read_media`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `read_media` (
  `uid` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `ref_sys_id` int(11) unsigned NOT NULL,
  `ctime` int(11) NOT NULL,
  UNIQUE KEY `id` (`uid`,`ref_sys_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `read_media` WRITE;
/*!40000 ALTER TABLE `read_media` DISABLE KEYS */;
/*!40000 ALTER TABLE `read_media` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `read_ticket_channel`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `read_ticket_channel` (
  `uid` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `ticket_id` int(11) unsigned NOT NULL,
  `ref_sys_id` int(11) unsigned NOT NULL,
  `ctime` int(11) NOT NULL,
  UNIQUE KEY `id` (`uid`,`ticket_id`),
  KEY `ref_sys_id` (`ref_sys_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `read_ticket_channel` WRITE;
/*!40000 ALTER TABLE `read_ticket_channel` DISABLE KEYS */;
/*!40000 ALTER TABLE `read_ticket_channel` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `redirect_state`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `redirect_state` (
  `sys_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(16) DEFAULT NULL,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `redirect_state` WRITE;
/*!40000 ALTER TABLE `redirect_state` DISABLE KEYS */;
/*!40000 ALTER TABLE `redirect_state` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `reminder`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `reminder` (
  `id` varchar(16) NOT NULL,
  `uid` varchar(16) NOT NULL,
  `task` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT '{}' CHECK (json_valid(`task`)),
  `ctime` int(11) unsigned GENERATED ALWAYS AS (json_value(`task`,'$.ctime')) VIRTUAL,
  `mtime` int(11) unsigned GENERATED ALWAYS AS (json_value(`task`,'$.mtime')) VIRTUAL,
  `stime` int(11) unsigned GENERATED ALWAYS AS (json_value(`task`,'$.stime')) VIRTUAL,
  `etime` int(11) unsigned GENERATED ALWAYS AS (json_value(`task`,'$.etime')) VIRTUAL,
  `nid` varchar(16) GENERATED ALWAYS AS (json_value(`task`,'$.nid')) VIRTUAL,
  `hub_id` varchar(16) GENERATED ALWAYS AS (json_value(`task`,'$.hub_id')) VIRTUAL,
  `period` int(11) unsigned GENERATED ALWAYS AS (json_value(`task`,'$.period')) VIRTUAL,
  `duration` int(11) unsigned GENERATED ALWAYS AS (json_value(`task`,'$.duration')) VIRTUAL,
  `repeat` enum('once','hourly','daily','weekly','monthly','yearly','period','onload') GENERATED ALWAYS AS (json_value(`task`,'$.repeat')) VIRTUAL,
  PRIMARY KEY (`id`),
  KEY `uid` (`uid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `reminder` WRITE;
/*!40000 ALTER TABLE `reminder` DISABLE KEYS */;
/*!40000 ALTER TABLE `reminder` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `remit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `remit` (
  `method` varchar(255) NOT NULL,
  `level` bit(3) NOT NULL,
  UNIQUE KEY `method` (`method`),
  KEY `module` (`level`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `remit` WRITE;
/*!40000 ALTER TABLE `remit` DISABLE KEYS */;
/*!40000 ALTER TABLE `remit` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `renewal`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `renewal` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `entity_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `subscription_id` varchar(30) DEFAULT NULL,
  `payment_intent_id` varchar(30) DEFAULT NULL,
  `product` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'pro',
  `plan` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'advanced',
  `period` enum('free','month','year') DEFAULT 'free',
  `recurring` int(11) DEFAULT 0,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  `stime` int(11) unsigned NOT NULL,
  `next_renewal_time` int(11) unsigned NOT NULL,
  `cancel_time` int(11) unsigned DEFAULT NULL,
  `ctime` int(11) unsigned NOT NULL,
  `next_action` varchar(10) GENERATED ALWAYS AS (case when json_value(`metadata`,'$.1.on') = 1 then '1' else case when json_value(`metadata`,'$.5.on') = 1 then '5' else case when json_value(`metadata`,'$.6.on') = 1 then '6' else case when json_value(`metadata`,'$.7.on') = 1 then '7' else case when json_value(`metadata`,'$.8.on') = 1 then '8' else case when json_value(`metadata`,'$.9.on') = 1 then '9' else case when json_value(`metadata`,'$.10.on') = 1 then '10' else case when json_value(`metadata`,'$.11.on') = 1 then '11' else case when json_value(`metadata`,'$.12.on') = 1 then '12' else case when json_value(`metadata`,'$.13.on') = 1 then '13' else case when json_value(`metadata`,'$.14.on') = 1 then '14' else case when json_value(`metadata`,'$.15.on') = 1 then '15' else case when json_value(`metadata`,'$.16.on') = 1 then '16' else case when json_value(`metadata`,'$.17.on') = 1 then '17' else case when json_value(`metadata`,'$.18.on') = 1 then '18' else case when json_value(`metadata`,'$.19.on') = 1 then '19' end end end end end end end end end end end end end end end end) VIRTUAL,
  `next_action_time` varchar(10) GENERATED ALWAYS AS (case when json_value(`metadata`,'$.1.on') = 1 then json_value(`metadata`,'$.1.date') else case when json_value(`metadata`,'$.5.on') = 1 then json_value(`metadata`,'$.5.date') else case when json_value(`metadata`,'$.6.on') = 1 then json_value(`metadata`,'$.6.date') else case when json_value(`metadata`,'$.7.on') = 1 then json_value(`metadata`,'$.7.date') else case when json_value(`metadata`,'$.8.on') = 1 then json_value(`metadata`,'$.8.date') else case when json_value(`metadata`,'$.9.on') = 1 then json_value(`metadata`,'$.9.date') else case when json_value(`metadata`,'$.10.on') = 1 then json_value(`metadata`,'$.10.date') else case when json_value(`metadata`,'$.11.on') = 1 then json_value(`metadata`,'$.11.date') else case when json_value(`metadata`,'$.12.on') = 1 then json_value(`metadata`,'$.12.date') else case when json_value(`metadata`,'$.13.on') = 1 then json_value(`metadata`,'$.13.date') else case when json_value(`metadata`,'$.14.on') = 1 then json_value(`metadata`,'$.14.date') else case when json_value(`metadata`,'$.15.on') = 1 then json_value(`metadata`,'$.15.date') else case when json_value(`metadata`,'$.16.on') = 1 then json_value(`metadata`,'$.16.date') else case when json_value(`metadata`,'$.17.on') = 1 then json_value(`metadata`,'$.17.date') else case when json_value(`metadata`,'$.18.on') = 1 then json_value(`metadata`,'$.18.date') else case when json_value(`metadata`,'$.19.on') = 1 then json_value(`metadata`,'$.19.date') end end end end end end end end end end end end end end end end) VIRTUAL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `entity_id` (`entity_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `renewal` WRITE;
/*!40000 ALTER TABLE `renewal` DISABLE KEYS */;
/*!40000 ALTER TABLE `renewal` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `renewal_all`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `renewal_all` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `entity_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `payment_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `package` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'basic',
  `cycle` enum('no','monthly','yearly','company','other') DEFAULT 'no',
  `mode` enum('free','pay','company','other') DEFAULT 'free',
  `stime` int(11) unsigned NOT NULL,
  `etime` int(11) unsigned NOT NULL DEFAULT 0,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  `ctime` int(11) unsigned NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `payment_id` (`payment_id`),
  UNIQUE KEY `payment_id_entity_id` (`payment_id`,`entity_id`,`stime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `renewal_all` WRITE;
/*!40000 ALTER TABLE `renewal_all` DISABLE KEYS */;
/*!40000 ALTER TABLE `renewal_all` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `renewal_failed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `renewal_failed` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `entity_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `invoice_id` varchar(30) DEFAULT NULL,
  `subscription_id` varchar(30) DEFAULT NULL,
  `payment_intent_id` varchar(30) DEFAULT NULL,
  `product` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'pro',
  `plan` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'pro',
  `period` enum('free','month','year') DEFAULT 'free',
  `recurring` int(11) DEFAULT 0,
  `price` float DEFAULT 0,
  `offer_price` float DEFAULT NULL,
  `renewal_amount` int(11) unsigned NOT NULL,
  `url` varchar(300) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  `ctime` int(11) unsigned NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `entity_id` (`entity_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `renewal_failed` WRITE;
/*!40000 ALTER TABLE `renewal_failed` DISABLE KEYS */;
/*!40000 ALTER TABLE `renewal_failed` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `renewal_history`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `renewal_history` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `entity_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `invoice_id` varchar(30) DEFAULT NULL,
  `subscription_id` varchar(30) DEFAULT NULL,
  `payment_intent_id` varchar(30) DEFAULT NULL,
  `product` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'pro',
  `plan` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'pro',
  `period` enum('free','month','year') DEFAULT 'free',
  `recurring` int(11) DEFAULT 0,
  `price` float DEFAULT 0,
  `offer_price` float DEFAULT NULL,
  `renewal_amount` int(11) unsigned NOT NULL,
  `stime` int(11) unsigned NOT NULL,
  `etime` int(11) unsigned NOT NULL DEFAULT 0,
  `status` enum('initiated','pending','paid','failed','subscribed','other','manual','cancel','open') DEFAULT NULL,
  `pdf` varchar(300) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `url` varchar(300) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  `ctime` int(11) unsigned NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `payment_id` (`subscription_id`,`payment_intent_id`,`entity_id`),
  UNIQUE KEY `invoice_id` (`invoice_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `renewal_history` WRITE;
/*!40000 ALTER TABLE `renewal_history` DISABLE KEYS */;
/*!40000 ALTER TABLE `renewal_history` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `request`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `request` (
  `sn` int(6) unsigned NOT NULL AUTO_INCREMENT,
  `firstname` varchar(255) NOT NULL,
  `lastname` varchar(255) NOT NULL,
  `email` varchar(255) NOT NULL,
  `id` varbinary(80) NOT NULL,
  `message` text NOT NULL,
  `reason` enum('request','presub','subscribe') NOT NULL DEFAULT 'request',
  `ident` varchar(255) NOT NULL,
  `tstamp` int(11) NOT NULL,
  PRIMARY KEY (`sn`),
  KEY `name` (`firstname`(128),`lastname`(128)),
  KEY `email` (`email`),
  KEY `ident` (`ident`),
  FULLTEXT KEY `message` (`message`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `request` WRITE;
/*!40000 ALTER TABLE `request` DISABLE KEYS */;
/*!40000 ALTER TABLE `request` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `resource`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `resource` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(16) DEFAULT NULL,
  `domain_id` int(11) NOT NULL,
  `db_name` varchar(255) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `home_dir` varchar(512) NOT NULL DEFAULT '',
  `home_id` varchar(16) DEFAULT NULL,
  `type` enum('organization','hub','drumate','shop','blog','forum','guest','dummy') DEFAULT NULL,
  `area` enum('public','shared','restricted','private','personal','system','pool','domain') DEFAULT NULL,
  `status` enum('active','frozen','deleted','archived','system','locked','online','offline','hidden') DEFAULT NULL,
  `accessibility` enum('open','membership','personal') DEFAULT 'open',
  `ctime` int(11) unsigned NOT NULL,
  `mtime` int(11) unsigned NOT NULL,
  `ftime` int(11) unsigned DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`),
  KEY `category` (`type`),
  KEY `db_name` (`db_name`),
  KEY `ctime` (`ctime`,`mtime`),
  KEY `status` (`status`),
  KEY `home_dir` (`home_dir`(333)),
  KEY `home_id` (`home_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `resource` WRITE;
/*!40000 ALTER TABLE `resource` DISABLE KEYS */;
/*!40000 ALTER TABLE `resource` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `role`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `role` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(500) NOT NULL,
  `org_id` varchar(16) NOT NULL,
  `position` int(11) unsigned DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`org_id`,`name`),
  KEY `org_id` (`org_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `role` WRITE;
/*!40000 ALTER TABLE `role` DISABLE KEYS */;
/*!40000 ALTER TABLE `role` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `room`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `room` (
  `hub_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `presenter_id` varchar(64) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `ctime` int(11) unsigned NOT NULL,
  `ttime` int(11) unsigned DEFAULT 0,
  `type` enum('webinar','meeting','connect','screen') DEFAULT 'meeting',
  `status` enum('waiting','started') DEFAULT 'waiting',
  PRIMARY KEY (`id`),
  UNIQUE KEY `hub_id` (`hub_id`,`type`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `room` WRITE;
/*!40000 ALTER TABLE `room` DISABLE KEYS */;
/*!40000 ALTER TABLE `room` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `room_endpoint`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `room_endpoint` (
  `room_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `ctime` int(11) unsigned NOT NULL,
  `server` varchar(128) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `location` varchar(128) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  UNIQUE KEY `room_id` (`room_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `room_endpoint` WRITE;
/*!40000 ALTER TABLE `room_endpoint` DISABLE KEYS */;
/*!40000 ALTER TABLE `room_endpoint` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `seo_factory_check`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `seo_factory_check` (
  `sys_id` int(11) NOT NULL AUTO_INCREMENT,
  `hub_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `nid` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `mfs_root` varchar(1000) DEFAULT NULL,
  `db_name` varchar(255) DEFAULT NULL,
  `file_path` varchar(5000) DEFAULT NULL,
  `extension` varchar(100) DEFAULT NULL,
  `mimetype` varchar(100) DEFAULT NULL,
  `category` varchar(16) DEFAULT NULL,
  `isprocessed` tinyint(2) unsigned NOT NULL DEFAULT 0,
  `ctime` int(11) unsigned DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `key` (`hub_id`,`nid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `seo_factory_check` WRITE;
/*!40000 ALTER TABLE `seo_factory_check` DISABLE KEYS */;
/*!40000 ALTER TABLE `seo_factory_check` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `services_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `services_log` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(128) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'index',
  `args` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`args`)),
  `uid` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `hub_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `headers` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`headers`)),
  `ctime` int(11) unsigned NOT NULL,
  PRIMARY KEY (`sys_id`),
  KEY `uid` (`uid`),
  KEY `hub_id` (`hub_id`),
  KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `services_log` WRITE;
/*!40000 ALTER TABLE `services_log` DISABLE KEYS */;
/*!40000 ALTER TABLE `services_log` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `sessions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sessions` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varbinary(64) NOT NULL,
  `user_id` varchar(16) DEFAULT NULL,
  `username` varchar(64) NOT NULL DEFAULT '',
  `domain` varchar(128) NOT NULL DEFAULT 'drumee.net',
  `expire_time` int(11) NOT NULL DEFAULT 0,
  `update_time` int(11) NOT NULL DEFAULT 0,
  `start_time` int(11) NOT NULL DEFAULT 0,
  `ttl` int(11) NOT NULL DEFAULT 86400,
  `last_ip` varchar(64) NOT NULL DEFAULT '',
  `last_ip_fwd_for` varchar(40) NOT NULL DEFAULT '',
  `req_uri` varchar(255) NOT NULL DEFAULT '',
  `referer` varchar(64) NOT NULL DEFAULT '',
  `ua` varchar(64) NOT NULL DEFAULT '',
  `action` varchar(40) NOT NULL,
  `host_id` varchar(16) DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`),
  KEY `user_id` (`user_id`),
  KEY `last_ip` (`last_ip`),
  KEY `ua` (`ua`),
  KEY `username` (`username`),
  KEY `referer` (`referer`),
  KEY `domain` (`domain`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `sessions` WRITE;
/*!40000 ALTER TABLE `sessions` DISABLE KEYS */;
/*!40000 ALTER TABLE `sessions` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `settings`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `settings` (
  `build` int(4) unsigned NOT NULL,
  `dbhost` varchar(128) NOT NULL DEFAULT 'localhost',
  `fshost` varchar(128) NOT NULL DEFAULT 'localhost',
  `mfs_root` varchar(255) NOT NULL DEFAULT '/data/mfs/',
  `user_root` varchar(255) NOT NULL DEFAULT '/data/mfs/user/',
  `site_root` varchar(255) NOT NULL DEFAULT '/data/mfs/site/',
  `icon` varchar(1024) DEFAULT NULL,
  `overview` varchar(3000) DEFAULT NULL,
  `settings` varchar(3000) DEFAULT NULL,
  `domainname` varchar(100) DEFAULT NULL,
  `alt_domain` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`build`),
  UNIQUE KEY `domainname` (`domainname`),
  KEY `site_root` (`site_root`),
  KEY `mfs_root` (`mfs_root`),
  KEY `dbhost` (`dbhost`),
  KEY `fshost` (`fshost`),
  KEY `mfs_root_2` (`mfs_root`),
  KEY `user_root` (`user_root`),
  KEY `site_root_2` (`site_root`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `settings` WRITE;
/*!40000 ALTER TABLE `settings` DISABLE KEYS */;
/*!40000 ALTER TABLE `settings` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `setup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `setup` (
  `status` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'empty'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `setup` WRITE;
/*!40000 ALTER TABLE `setup` DISABLE KEYS */;
/*!40000 ALTER TABLE `setup` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `share_box`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `share_box` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(16) NOT NULL,
  `owner_id` varchar(16) NOT NULL,
  `root_id` varchar(16) NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`),
  UNIQUE KEY `owner_id` (`owner_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `share_box` WRITE;
/*!40000 ALTER TABLE `share_box` DISABLE KEYS */;
/*!40000 ALTER TABLE `share_box` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `share_guest`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `share_guest` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `hub_id` varchar(16) NOT NULL,
  `email` varchar(512) NOT NULL,
  `permission` tinyint(4) unsigned NOT NULL,
  `expiry_time` int(11) NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `share_guest` (`hub_id`,`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `share_guest` WRITE;
/*!40000 ALTER TABLE `share_guest` DISABLE KEYS */;
/*!40000 ALTER TABLE `share_guest` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `site`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `site` (
  `id` varchar(16) NOT NULL,
  `owner_id` varbinary(16) NOT NULL,
  `dmail` varchar(255) NOT NULL DEFAULT '',
  `name` varchar(80) NOT NULL,
  `ctime` int(11) NOT NULL,
  `photo` varchar(255) NOT NULL,
  `mtime` int(11) NOT NULL,
  `autojoin` varchar(8) NOT NULL DEFAULT 'off',
  `description` text NOT NULL,
  `keywords` text NOT NULL,
  `permission` tinyint(4) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  KEY `dmail` (`dmail`),
  KEY `default_perm` (`permission`),
  KEY `owner_id` (`owner_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `site` WRITE;
/*!40000 ALTER TABLE `site` DISABLE KEYS */;
/*!40000 ALTER TABLE `site` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `socket`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `socket` (
  `id` varchar(32) NOT NULL,
  `uid` varchar(32) NOT NULL DEFAULT '*',
  `cookie` varchar(64) DEFAULT NULL,
  `ctime` int(11) NOT NULL DEFAULT 0,
  `server` varchar(256) DEFAULT NULL,
  `location` varchar(256) DEFAULT NULL,
  `state` enum('active','idle') DEFAULT 'active',
  PRIMARY KEY (`id`),
  KEY `uid` (`uid`),
  KEY `idx_server` (`server`),
  KEY `idx_id_state` (`id`,`state`),
  KEY `idx_state_ctime` (`state`,`ctime`)
) ENGINE=InnoDB DEFAULT CHARSET=ascii COLLATE=ascii_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `socket` WRITE;
/*!40000 ALTER TABLE `socket` DISABLE KEYS */;
/*!40000 ALTER TABLE `socket` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `socket_active`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `socket_active` (
  `id` varchar(32) NOT NULL,
  `timestamp` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=ascii COLLATE=ascii_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `socket_active` WRITE;
/*!40000 ALTER TABLE `socket_active` DISABLE KEYS */;
/*!40000 ALTER TABLE `socket_active` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `states`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `states` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `country_id` int(11) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `states` WRITE;
/*!40000 ALTER TABLE `states` DISABLE KEYS */;
/*!40000 ALTER TABLE `states` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `stream`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `stream` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(64) NOT NULL,
  `socket_id` varchar(32) NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`),
  KEY `socket_id` (`socket_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `stream` WRITE;
/*!40000 ALTER TABLE `stream` DISABLE KEYS */;
/*!40000 ALTER TABLE `stream` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `subscription`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `subscription` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `payment_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `entity_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `stime` int(11) unsigned NOT NULL,
  `etime` int(11) unsigned NOT NULL DEFAULT 0,
  `mode` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  `ctime` int(11) unsigned NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `payment_id` (`payment_id`),
  UNIQUE KEY `payment_id_entity_id` (`payment_id`,`entity_id`,`stime`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `subscription` WRITE;
/*!40000 ALTER TABLE `subscription` DISABLE KEYS */;
/*!40000 ALTER TABLE `subscription` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `subscription_history`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `subscription_history` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `payment_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `entity_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `subscription_id` varchar(30) DEFAULT NULL,
  `payment_intent_id` varchar(30) DEFAULT NULL,
  `product_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `product` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'pro',
  `plan` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'pro',
  `period` enum('free','month','year') DEFAULT 'free',
  `recurring` int(11) DEFAULT 0,
  `price` float DEFAULT 0,
  `offer_price` float DEFAULT NULL,
  `renewal_amount` int(11) unsigned NOT NULL,
  `stime` int(11) unsigned NOT NULL,
  `etime` int(11) unsigned NOT NULL DEFAULT 0,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  `ctime` int(11) unsigned NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `payment_id` (`subscription_id`,`payment_intent_id`,`entity_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `subscription_history` WRITE;
/*!40000 ALTER TABLE `subscription_history` DISABLE KEYS */;
/*!40000 ALTER TABLE `subscription_history` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `subscription_new`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `subscription_new` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `entity_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `subscription_id` varchar(30) DEFAULT NULL,
  `customer_id` varchar(30) DEFAULT NULL,
  `plan` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT 'pro',
  `period` enum('free','month','year') DEFAULT 'free',
  `recurring` int(11) DEFAULT 0,
  `price` float DEFAULT 0,
  `offer_price` float DEFAULT NULL,
  `status` enum('incomplete','incomplete_expired','trialing','active','past_due','canceled','unpaid') DEFAULT NULL,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  `ctime` int(11) unsigned NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `entity_id` (`entity_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `subscription_new` WRITE;
/*!40000 ALTER TABLE `subscription_new` DISABLE KEYS */;
/*!40000 ALTER TABLE `subscription_new` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `sys_conf`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sys_conf` (
  `conf_key` varchar(40) NOT NULL,
  `conf_value` longtext DEFAULT NULL,
  PRIMARY KEY (`conf_key`),
  FULLTEXT KEY `conf_value` (`conf_value`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `sys_conf` WRITE;
/*!40000 ALTER TABLE `sys_conf` DISABLE KEYS */;
/*!40000 ALTER TABLE `sys_conf` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `sys_var`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `sys_var` (
  `name` varchar(40) NOT NULL,
  `value` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`value`)),
  PRIMARY KEY (`name`),
  FULLTEXT KEY `value` (`value`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `sys_var` WRITE;
/*!40000 ALTER TABLE `sys_var` DISABLE KEYS */;
INSERT INTO `sys_var` VALUES ('helpdesk_link','{\"hub\": {\"fr\": \"https://portal.drumee.io/hub/helpdesk-hub.html\", \"en\": \"https://portal.drumee.io/hub/helpdesk-hub.html\"}}'),('transfer','{\"hub_id\": \"21cf9a3f21cf9a5a\", \"vhost\": \"transfer.drumee.io\"}');
/*!40000 ALTER TABLE `sys_var` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `team`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `team` (
  `id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `firstname` varchar(80) NOT NULL,
  `lastname` varchar(80) NOT NULL,
  `domain` enum('tech','design','management','qos','marketing','sell') NOT NULL,
  `priority` tinyint(4) NOT NULL,
  `email` varchar(255) NOT NULL,
  `mobile` varchar(80) NOT NULL,
  KEY `priority` (`priority`),
  KEY `name` (`firstname`,`lastname`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `team` WRITE;
/*!40000 ALTER TABLE `team` DISABLE KEYS */;
/*!40000 ALTER TABLE `team` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `ticket`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ticket` (
  `ticket_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `message_id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `uid` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `metadata` longtext DEFAULT NULL CHECK (json_valid(`metadata`)),
  `status` varchar(15) GENERATED ALWAYS AS (json_unquote(json_extract(`metadata`,'$.status'))) VIRTUAL,
  `utime` int(11) NOT NULL,
  `last_sys_id` int(11) DEFAULT 0,
  PRIMARY KEY (`ticket_id`),
  UNIQUE KEY `message_id` (`message_id`),
  UNIQUE KEY `id` (`uid`,`ticket_id`),
  KEY `last_sys_id` (`last_sys_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `ticket` WRITE;
/*!40000 ALTER TABLE `ticket` DISABLE KEYS */;
/*!40000 ALTER TABLE `ticket` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `token`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `token` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `email` varchar(512) DEFAULT NULL,
  `name` varchar(512) DEFAULT NULL,
  `secret` varchar(255) NOT NULL,
  `method` varchar(80) DEFAULT NULL,
  `inviter_id` varchar(16) DEFAULT NULL,
  `status` varchar(20) NOT NULL DEFAULT 'active',
  `ctime` int(11) unsigned DEFAULT NULL,
  `expiry` int(11) unsigned DEFAULT NULL,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `secret` (`secret`),
  UNIQUE KEY `purpose` (`email`,`method`,`inviter_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `token` WRITE;
/*!40000 ALTER TABLE `token` DISABLE KEYS */;
/*!40000 ALTER TABLE `token` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `tranfer_token`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tranfer_token` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `email` varchar(512) DEFAULT NULL,
  `name` varchar(512) DEFAULT NULL,
  `secret` varchar(255) NOT NULL,
  `status` varchar(20) NOT NULL DEFAULT 'active',
  `ctime` int(11) unsigned DEFAULT NULL,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`metadata`)),
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `secret` (`secret`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `tranfer_token` WRITE;
/*!40000 ALTER TABLE `tranfer_token` DISABLE KEYS */;
/*!40000 ALTER TABLE `tranfer_token` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `translate`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `translate` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `code` varchar(40) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `key_code` varchar(40) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `lang` varchar(40) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `content` text DEFAULT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `code` (`code`,`lang`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `translate` WRITE;
/*!40000 ALTER TABLE `translate` DISABLE KEYS */;
/*!40000 ALTER TABLE `translate` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `tutorial`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tutorial` (
  `name` varchar(40) NOT NULL,
  `src` longtext NOT NULL,
  PRIMARY KEY (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `tutorial` WRITE;
/*!40000 ALTER TABLE `tutorial` DISABLE KEYS */;
INSERT INTO `tutorial` VALUES ('addressbook','https://tunnel.drumee.io/faq/intro/main.mp4'),('bigchat','https://tunnel.drumee.io/faq/intro/main.mp4'),('external-meeting','https://tunnel.drumee.io/faq/intro/main.mp4'),('folder','https://tunnel.drumee.io/faq/intro/main.mp4'),('intro','https://tunnel.drumee.io/faq/intro/main.mp4'),('sharebox','https://tunnel.drumee.io/faq/intro/main.mp4'),('teamroom','https://tunnel.drumee.io/faq/intro/main.mp4'),('test-addressbook','https://sovanah.drumee.io/sovanah/tutorials/addressbook.mp4'),('test-bigchat','https://sovanah.drumee.io/sovanah/tutorials/bigchat.mp4'),('test-external-meeting','https://sovanah.drumee.io/sovanah/tutorials/external-meeting.mp4'),('test-folder','https://sovanah.drumee.io/sovanah/tutorials/folder.mp4'),('test-intro','https://sovanah.drumee.io/sovanah/tutorials/intro.mp4'),('test-sharebox','https://sovanah.drumee.io/sovanah/tutorials/sharebox.mp4'),('test-teamroom','https://sovanah.drumee.io/sovanah/tutorials/teamroom.mp4');
/*!40000 ALTER TABLE `tutorial` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `unified_room`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `unified_room` (
  `id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `uid` varchar(30) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `is_mic_enabled` tinyint(4) DEFAULT 1,
  `is_video_enabled` tinyint(4) DEFAULT 0,
  `is_share_enabled` tinyint(4) DEFAULT 0,
  `is_write_enabled` tinyint(4) DEFAULT 0,
  `metadata` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '{}' CHECK (json_valid(`metadata`)),
  PRIMARY KEY (`uid`),
  UNIQUE KEY `id` (`id`,`uid`),
  KEY `idx_id` (`id`),
  KEY `idx_uid` (`uid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `unified_room` WRITE;
/*!40000 ALTER TABLE `unified_room` DISABLE KEYS */;
/*!40000 ALTER TABLE `unified_room` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varchar(16) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `domain_id` int(11) unsigned NOT NULL,
  `remit` tinyint(4) NOT NULL DEFAULT 0,
  `fingerprint` varchar(128) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `profile` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`profile`)),
  `firstname` varchar(128) GENERATED ALWAYS AS (json_value(`profile`,'$.firstname')) VIRTUAL,
  `lastname` varchar(128) GENERATED ALWAYS AS (json_value(`profile`,'$.lastname')) VIRTUAL,
  `fullname` varchar(128) GENERATED ALWAYS AS (if(concat(ifnull(`firstname`,''),' ',ifnull(`lastname`,'')) = ' ',json_value(`profile`,'$.email'),concat(ifnull(`firstname`,''),' ',ifnull(`lastname`,'')))) VIRTUAL,
  `avatar` varchar(512) GENERATED ALWAYS AS (json_value(`profile`,'$.avatar')) VIRTUAL,
  `lang` varchar(10) GENERATED ALWAYS AS (json_value(`profile`,'$.lang')) VIRTUAL,
  `allow_search` tinyint(4) GENERATED ALWAYS AS (json_value(json_value(`profile`,'$.privacy'),'$.visibility')) VIRTUAL,
  `quota` varchar(128) GENERATED ALWAYS AS (json_value(`profile`,'$.quota')) VIRTUAL,
  `email` varchar(128) GENERATED ALWAYS AS (json_value(`profile`,'$.email')) VIRTUAL,
  `dmail` varchar(128) GENERATED ALWAYS AS (json_value(`profile`,'$.dmail')) VIRTUAL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`),
  UNIQUE KEY `email` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `user_var`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user_var` (
  `name` varchar(40) NOT NULL,
  `value` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`value`)),
  PRIMARY KEY (`name`),
  FULLTEXT KEY `value` (`value`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `user_var` WRITE;
/*!40000 ALTER TABLE `user_var` DISABLE KEYS */;
/*!40000 ALTER TABLE `user_var` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `validation_code`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `validation_code` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `id` varbinary(16) NOT NULL,
  `action` enum('delete_drumate_account','forgot_password') DEFAULT NULL,
  `code` varchar(255) NOT NULL,
  `expiry_time` int(11) unsigned NOT NULL DEFAULT 0,
  `ctime` int(11) NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `id` (`id`,`action`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `validation_code` WRITE;
/*!40000 ALTER TABLE `validation_code` DISABLE KEYS */;
/*!40000 ALTER TABLE `validation_code` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `verification`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `verification` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `drumate_id` varbinary(16) NOT NULL,
  `token` varchar(255) NOT NULL,
  `ctime` int(11) NOT NULL,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `token` (`token`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `verification` WRITE;
/*!40000 ALTER TABLE `verification` DISABLE KEYS */;
/*!40000 ALTER TABLE `verification` ENABLE KEYS */;
UNLOCK TABLES;
DROP TABLE IF EXISTS `vhost`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `vhost` (
  `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `fqdn` varchar(256) CHARACTER SET ascii COLLATE ascii_general_ci NOT NULL,
  `id` varchar(16) CHARACTER SET ascii COLLATE ascii_general_ci DEFAULT NULL,
  `dom_id` int(11) unsigned DEFAULT 1,
  PRIMARY KEY (`sys_id`),
  UNIQUE KEY `fqdn` (`fqdn`),
  UNIQUE KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

LOCK TABLES `vhost` WRITE;
/*!40000 ALTER TABLE `vhost` DISABLE KEYS */;
/*!40000 ALTER TABLE `vhost` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `backquoted_dbname` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `backquoted_dbname`(_key VARCHAR(250)
) RETURNS varchar(255) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res VARCHAR(255);

  SELECT CONCAT('`', db_name, '`') FROM entity WHERE id=_key or ident=_key or vhost=_key INTO _res;

  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `chk_fingerprint` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `chk_fingerprint`(_pw VARCHAR(16) ,
  _fingerprint VARCHAR(5000) 
) RETURNS int(11)
    DETERMINISTIC
BEGIN
  DECLARE _res INTEGER DEFAULT 0;
  SELECT 
    IF( sha2(_pw, 512)  = _fingerprint , 1, 0) INTO _res;
     RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `cookie_get_uid` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `cookie_get_uid`(_key VARCHAR(512)
) RETURNS varchar(80) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _uid VARCHAR(16);
  SELECT `uid` FROM cookie WHERE id=_key LIMIT 1 INTO _uid;
  RETURN _uid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `dbname` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `dbname`(_ident VARCHAR(128)
) RETURNS varchar(128) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res VARCHAR(128);
  SELECT db_name FROM entity WHERE ident=_ident or id=_ident into _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `disk_free` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `disk_free`(_entity_id  VARCHAR(16) CHARACTER SET ascii
) RETURNS double
    DETERMINISTIC
BEGIN
  DECLARE _uid VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _hub_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _owner_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _drumate_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _org_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _quota json ;

  DECLARE _u_desk_disk  double  default 0.0 ;
  DECLARE _u_hub_disk  double  default 0.0 ;


  DECLARE _q_desk_disk  double  default 0.0 ;
  DECLARE _q_hub_disk  double  default 0.0 ;
  DECLARE _q_disk  double  default 0.0 ;


  DECLARE _l_disk  double  default 0.0 ;

  SELECT id, owner_id  FROM yp.hub WHERE id = _entity_id  INTO _hub_id , _owner_id; 
  SELECT id FROM yp.drumate WHERE id = _entity_id  AND  _owner_id IS NULL  INTO _owner_id; 

  SELECT quota FROM yp.drumate WHERE id = _owner_id INTO _quota;

  SELECT o.id
  FROM  yp.drumate d  
  INNER JOIN yp.organisation o ON o.domain_id= d.domain_id
  WHERE d.id =  _owner_id AND  d.domain_id > 1  INTO _org_id;
    SELECT JSON_VALUE(_quota, "$.disk") INTO _q_disk;
    SELECT JSON_VALUE(_quota, "$.desk_disk") INTO _q_desk_disk;
    SELECT JSON_VALUE(_quota, "$.hub_disk") INTO _q_hub_disk;
    SELECT IFNULL(_q_desk_disk,_q_disk) INTO _q_desk_disk;
    SELECT IFNULL(_q_hub_disk,_q_disk) INTO _q_hub_disk;


  
  IF (_hub_id IS NULL AND _org_id IS NULL) THEN 

      SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.hub h ON du.hub_id = h.id
        WHERE h.owner_id=_owner_id INTO _u_hub_disk;
      SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.drumate d ON du.hub_id = d.id
        WHERE d.id=_owner_id  INTO _u_desk_disk;

      SELECT  IFNULL(_u_hub_disk , 0)  INTO _u_hub_disk;
      SELECT  IFNULL(_u_desk_disk , 0)  INTO _u_desk_disk;

      SELECT LEAST( _q_disk - _u_desk_disk - _u_hub_disk   , _q_desk_disk - _u_desk_disk ) INTO _l_disk;

  END IF ;

 
  IF (_hub_id IS NOT NULL AND _org_id IS NULL) THEN 

      SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.hub h ON du.hub_id = h.id
        WHERE h.owner_id=_owner_id INTO _u_hub_disk;
    
        
      SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.drumate d ON du.hub_id = d.id
        WHERE d.id=_owner_id  INTO _u_desk_disk;

      SELECT  IFNULL(_u_hub_disk , 0)  INTO _u_hub_disk;
      SELECT  IFNULL(_u_desk_disk , 0)  INTO _u_desk_disk;

      SELECT LEAST( _q_disk - _u_desk_disk - _u_hub_disk  , _q_hub_disk - _u_hub_disk ) INTO _l_disk;
     
  END IF ;



  
  IF (_hub_id IS NULL AND _org_id IS NOT  NULL) THEN 

     SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.hub h ON du.hub_id = h.id
        INNER JOIN yp.map_role m ON  h.owner_id = m.uid
        WHERE m.org_id=_org_id INTO _u_hub_disk;	
        
    SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.drumate d ON du.hub_id = d.id
        INNER JOIN yp.map_role m ON  d.id = m.uid
        WHERE  m.org_id=_org_id INTO _u_desk_disk;

      SELECT  IFNULL(_u_hub_disk , 0)  INTO _u_hub_disk;
      SELECT  IFNULL(_u_desk_disk , 0)  INTO _u_desk_disk;

      SELECT LEAST( _q_disk - _u_desk_disk - _u_hub_disk   , _q_desk_disk - _u_desk_disk ) INTO _l_disk;

  END IF ;

 
  IF (_hub_id IS NOT NULL AND _org_id IS NOT NULL) THEN 

      SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.hub h ON du.hub_id = h.id
        INNER JOIN yp.map_role m ON  h.owner_id = m.uid
        WHERE m.org_id=_org_id INTO _u_hub_disk;	
        
      SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.drumate d ON du.hub_id = d.id
        INNER JOIN yp.map_role m ON  d.id = m.uid
        WHERE  m.org_id=_org_id INTO _u_desk_disk;

      SELECT  IFNULL(_u_hub_disk , 0)  INTO _u_hub_disk;
      SELECT  IFNULL(_u_desk_disk , 0)  INTO _u_desk_disk;

      SELECT LEAST( _q_disk - _u_desk_disk - _u_hub_disk   , _q_hub_disk - _u_hub_disk ) INTO _l_disk;

  END IF ;

  RETURN _l_disk;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `disk_usage` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `disk_usage`(_uid VARCHAR(16) 
) RETURNS float
    DETERMINISTIC
BEGIN 
  DECLARE _res FLOAT;
  DECLARE _user FLOAT;
  SELECT SUM(du.size) FROM disk_usage du 
    LEFT JOIN(entity e, hub h) ON hub_id=e.id 
    AND h.id = e.id 
    WHERE h.owner_id=_uid INTO _res;
    
  SELECT SUM(du.size) FROM disk_usage du 
    LEFT JOIN drumate d ON hub_id=d.id 
    WHERE d.id=_uid INTO _user;
  
  RETURN _res + _user;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `dmail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `dmail`(_ident VARCHAR(128)
) RETURNS text CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
DECLARE _res VARCHAR(1000);
  SELECT CONCAT(_ident, '@', domain_name()) INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `domain_id` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `domain_id`(_key VARCHAR(1024)
) RETURNS int(11)
    DETERMINISTIC
BEGIN
  DECLARE _res INTEGER DEFAULT 1;
  SELECT o.domain_id FROM entity e INNER JOIN organisation o on e.dom_id=o.domain_id 
  WHERE e.id=_key OR db_name=_key INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `domain_name` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `domain_name`(_key VARCHAR(1024)
) RETURNS varchar(1024) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res VARCHAR(1024);
  SELECT d.name FROM entity e INNER JOIN domain d on e.dom_id=d.id 
  WHERE e.id=_key OR ident=_key OR db_name=_key INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `domain_permission` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `domain_permission`(_uid VARCHAR(80),
  _dom_id INT,
  _perm TINYINT(6)
) RETURNS tinyint(6)
    DETERMINISTIC
BEGIN
  DECLARE _res TINYINT(6);
  SELECT privilege&_perm FROM privilege 
    WHERE `uid` = _uid AND domain_id=_dom_id INTO _res;
  RETURN IFNULL(_res, 0);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `drumate_photo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `drumate_photo`(_key varchar(255),
    _vhost varchar(255)
) RETURNS varchar(255) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _area varchar(30);
  DECLARE _uid varchar(16);
  DECLARE _res varchar(255);

  SELECT id FROM entity WHERE ident=_key OR id=_key INTO _uid;
  SELECT REPLACE(JSON_EXTRACT(`profile`, '$.avatar'), '"', "") 
    FROM drumate WHERE id=_uid INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `drumate_photo_old` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `drumate_photo_old`(_key varchar(255),
    _vhost varchar(255)
) RETURNS varbinary(16)
    DETERMINISTIC
BEGIN
  DECLARE _area varchar(30);
  DECLARE _uid VARBINARY(16);
  DECLARE _res VARBINARY(16);

  SELECT id FROM entity WHERE ident=_key OR id=_key INTO _uid;
  SELECT area FROM vhost INNER JOIN entity using(id) WHERE fqdn=_vhost INTO _area;
  IF _area = 'personal' THEN
    SELECT 'private' INTO  _area;
  END IF;

  SELECT photo FROM profile WHERE id=CONCAT(_uid, "@", _area) INTO _res;

  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `duration_days` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `duration_days`(expiry_time INT(11)
) RETURNS int(11)
    DETERMINISTIC
BEGIN 
  DECLARE _res INTEGER;
  DECLARE _ts INT(11);
  SELECT UNIX_TIMESTAMP() INTO _ts;
  SELECT  CASE 
    WHEN expiry_time = 0 THEN  NULL
    WHEN (expiry_time - _ts) < 86400  THEN 0
    WHEN (expiry_time - _ts) > 86400  THEN FLOOR((expiry_time - _ts)/86400)
  END INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `duration_hours` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `duration_hours`(expiry_time INT(11)
) RETURNS int(11)
    DETERMINISTIC
BEGIN 
  DECLARE _res INTEGER;
  DECLARE _ts INT(11);
  SELECT UNIX_TIMESTAMP() INTO _ts;
  SELECT  CASE 
    WHEN expiry_time = 0 THEN  NULL
    WHEN 
    (expiry_time - _ts) > 0  THEN CEIL(MOD((expiry_time - _ts),86400)/3600)  
    WHEN (expiry_time - _ts) > 0  THEN 0
  END INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `email_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `email_exists`(_key  varchar(512)
) RETURNS tinyint(1)
    DETERMINISTIC
BEGIN
  DECLARE _email VARCHAR(512);

  SELECT email FROM drumate WHERE email=_key INTO _email;
   IF _email IS NOT NULL OR _email != '' THEN
     RETURN TRUE;
   END IF;

  RETURN FALSE;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `entity_db` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `entity_db`(_id VARCHAR(160)
) RETURNS varchar(30) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _r VARCHAR(30);
  SELECT db_name FROM entity WHERE id=_id INTO _r;
  RETURN _r;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_area_id` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `get_area_id`(_level VARCHAR(16),
  _owner VARCHAR(16)
) RETURNS varchar(80) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res VARCHAR(120);
  SELECT id FROM area WHERE owner_id=_owner and level=_level INTO _res;
  SELECT IF(_res IS NULL, 'private', _res) INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_dmail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `get_dmail`(_ident VARCHAR(80)
) RETURNS varchar(512) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res VARCHAR(512);
  SELECT CONCAT(_ident, '@', utils.domain_name()) INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_domain` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `get_domain`(_ident VARCHAR(80)
) RETURNS varchar(512) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res VARCHAR(512);
  SELECT utils.domain_name() INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_domain_name` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `get_domain_name`(_key VARCHAR(1024)
) RETURNS varchar(1024) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res VARCHAR(1024);
  SELECT d.name FROM entity e INNER JOIN domain d on e.dom_id=d.id
  WHERE e.id=_key OR db_name=_key INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_json_array` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `get_json_array`(_json json,
  _index int(8) unsigned
) RETURNS text CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res text;
  SELECT JSON_UNQUOTE(JSON_EXTRACT(_json, CONCAT("$[", _index, "]"))) INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_json_object` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `get_json_object`(_json json,
  _name text
) RETURNS text CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res text;
  SELECT JSON_UNQUOTE(JSON_EXTRACT(_json, CONCAT("$.", _name))) INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_remit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `get_remit`(_key  varchar(512)
) RETURNS tinyint(1)
    DETERMINISTIC
BEGIN
  DECLARE _res VARCHAR(512);
  SELECT remit FROM drumate WHERE id=_key INTO _res ;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_sysconf` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `get_sysconf`(_key VARCHAR(1024)
) RETURNS varchar(512) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res text;
  SELECT conf_value FROM yp.sys_conf WHERE conf_key=_key INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `get_vhost` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `get_vhost`(_ident VARCHAR(80)
) RETURNS varchar(512) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res VARCHAR(512);
  SELECT CONCAT(_ident, '.', utils.domain_name()) INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `has_attachment` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `has_attachment`(_did VARCHAR(16)
) RETURNS int(11)
    DETERMINISTIC
BEGIN
  DECLARE _a INT;
  SELECT  count(*) FROM attachments WHERE drum_id=_did INTO _a;
  RETURN _a;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `hub_id` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `hub_id`(_key VARCHAR(1024)
) RETURNS varchar(16) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res VARCHAR(16);
  DECLARE _vhost VARCHAR(1024);

  IF _key NOT REGEXP '^(.+)\\\.(.+)' THEN
    SELECT concat(hubname, '.', yp.domain_name(hubname)) FROM hub 
      WHERE hubname=_key OR id=_key INTO _vhost;
  END IF;

  SELECT id FROM vhost INNER JOIN entity using(id) 
    WHERE fqdn=_vhost OR fqdn=CONCAT(_key, '.', yp.domain_name(_key)) INTO _res;
  IF _res IS NULL THEN 
    SELECT e.id FROM entity e INNER JOIN domain d on 
    e.dom_id=d.id WHERE e.id=_key INTO _res;
  END IF;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `hub_id_old` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `hub_id_old`(_key VARCHAR(1024)
) RETURNS varchar(16) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res VARCHAR(16);
  DECLARE _vhost VARCHAR(1024);

  IF _key NOT REGEXP '^(.+)\\\.(.+)' THEN
    SELECT concat(ident, '.', yp.domain_name(ident)) FROM entity 
      WHERE ident=_key OR id=_key INTO _vhost;
  END IF;

  SELECT id FROM vhost INNER JOIN entity using(id) WHERE fqdn=_vhost INTO _res;
  IF _res IS NULL THEN 
    SELECT e.id FROM entity e INNER JOIN domain d on 
    e.dom_id=d.id WHERE e.id=_key INTO _res;
  END IF;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `hub_photo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `hub_photo`(_key varchar(255)
) RETURNS varchar(16) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res VARBINARY(16);

  SELECT photo FROM hub_ssv WHERE ident=_key OR id=_key OR vhost=_key INTO _res;

  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `ident_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `ident_exists`(_key  varchar(512)
) RETURNS tinyint(1)
    DETERMINISTIC
BEGIN
  DECLARE _ident VARCHAR(80);






  SELECT ident FROM entity WHERE id=_key OR ident=_key INTO _ident;
  SELECT ident FROM organisation WHERE _ident IS NULL AND ident=_key INTO _ident;

  IF _ident IS NOT NULL OR _ident != '' THEN
    RETURN TRUE;
  END IF;

  RETURN FALSE;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `ident_exists_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `ident_exists_next`(_key  varchar(512),
  _domain_name VARCHAR(1000)
) RETURNS tinyint(1)
    DETERMINISTIC
BEGIN
  DECLARE _ident VARCHAR(80);

  SELECT ident FROM entity e INNER JOIN `domain` d ON e.dom_id = d.id 
    WHERE d.name=_domain_name AND e.ident = _key INTO _ident;

  IF _ident IS NOT NULL OR _ident != '' THEN
    RETURN TRUE;
  END IF;

  RETURN FALSE;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `is_socket_active` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `is_socket_active`(_sid VARCHAR(80) CHARACTER SET ascii
) RETURNS int(11)
    DETERMINISTIC
BEGIN
  DECLARE _r INTEGER DEFAULT 0;
  SELECT COUNT(*) FROM socket WHERE id=_sid AND state='active' INTO _r;
  RETURN _r;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `is_socket_bound` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `is_socket_bound`(_sid VARCHAR(80) CHARACTER SET ascii,
  _cid VARCHAR(80) CHARACTER SET ascii
) RETURNS int(11)
    DETERMINISTIC
BEGIN
  DECLARE _r INTEGER DEFAULT 0;
  SELECT COUNT(*) FROM socket WHERE cookie=_cid AND id=_sid INTO _r;
  RETURN _r;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `is_user_online` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `is_user_online`(_key VARCHAR(1024)
) RETURNS varchar(1024) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _r INTEGER DEFAULT 0;
  SELECT COUNT(*) FROM socket s 
    INNER JOIN drumate d ON s.uid=d.id 
    WHERE s.state = 'active' AND s.uid=_key OR d.email=_key INTO _r;
  RETURN _r;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `license` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `license`() RETURNS varchar(1024) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _r VARCHAR(1024);
  SELECT JSON_VALUE(conf_value, "$.key")  AS license_key FROM sys_conf WHERE conf_key='license' INTO _r;
  RETURN _r;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `main_domain` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `main_domain`() RETURNS varchar(512) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res text;
  SELECT conf_value FROM yp.sys_conf WHERE conf_key='domain_name' INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `make_db_name` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `make_db_name`() RETURNS varchar(20) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res VARCHAR(20);
  SELECT concat(substring(uniqueId(),-1,1), '_', uniqueId()) INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `nobody_id` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `nobody_id`() RETURNS text CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  RETURN "ffffffffffffffff";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `online_state` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `online_state`(_uid VARCHAR(80) CHARACTER SET ascii 
) RETURNS int(11)
    DETERMINISTIC
BEGIN
  DECLARE _meeting INTEGER DEFAULT 0;
  DECLARE _online INTEGER DEFAULT 0;

  SELECT count(*) FROM conference u INNER JOIN socket s ON 
    s.uid = u.uid WHERE s.uid = _uid AND s.state='active' INTO _meeting;

  SELECT count(*) FROM socket s 
    WHERE s.uid=_uid AND `state`='active' INTO _online;

  RETURN IF(_meeting > 0, 2, IF(_online > 0, 1, 0));

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `pool_free` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `pool_free`(_type VARCHAR(80)
) RETURNS varchar(512) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res VARCHAR(512);
  select count(id) from yp.entity where area='pool' and type=_type INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `read_json_array` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `read_json_array`(_json json,
  _index int(8) unsigned
) RETURNS text CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res text;
  SELECT TRIM(IFNULL(JSON_UNQUOTE(JSON_EXTRACT(_json, CONCAT("$[", _index, "]"))), '')) INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `read_json_object` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `read_json_object`(_json json,
  _name text
) RETURNS text CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res text;
  SELECT TRIM(IFNULL(JSON_UNQUOTE(JSON_EXTRACT(_json, CONCAT("$.", _name))), '')) INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `session_get_otp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `session_get_otp`(_uid VARCHAR(16)
) RETURNS varchar(80) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _key VARCHAR(80) DEFAULT NULL;
  SELECT `secret` FROM otp WHERE uid=_uid ORDER BY ctime DESC LIMIT 1 INTO _key;
  RETURN _key;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `set_env` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `set_env`(_home_root VARCHAR(512),
  _date_format VARCHAR(512),
  _lc_time VARCHAR(512),
  _rows_per_page tinyint(4),
  _domain VARCHAR(512)
) RETURNS varchar(80) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  SET @home_root = _home_root;
  SET @dformat = _date_format;
  SET lc_time_names = _lc_time;
  SET @rows_per_page = _rows_per_page;
  SET @nobody = 'ffffffffffffffff';
  IF _domain='' or _domain=NULL THEN
    SET @domain_name =utils.domain_name();
  ELSE
    SET @domain_name = _domain;
  END IF;

  RETURN @home_root;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `socket_user_connections` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `socket_user_connections`(_uid VARCHAR(80) CHARACTER SET ascii 
) RETURNS int(11)
    DETERMINISTIC
BEGIN
  DECLARE _res INTEGER DEFAULT 0;
  SELECT count(*) FROM socket WHERE 
    uid=_uid AND `state`='active' INTO _res;
  RETURN _res;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `SPLIT_STRING` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `SPLIT_STRING`(str VARCHAR(255) ,
  delim VARCHAR(12) ,
  pos INT
) RETURNS varchar(255) CHARSET utf8 COLLATE utf8_general_ci
    DETERMINISTIC
BEGIN 
  RETURN
    REPLACE(
      SUBSTRING(
        SUBSTRING_INDEX(str , delim , pos) ,
        CHAR_LENGTH(
          SUBSTRING_INDEX(str , delim , pos - 1)
        ) + 1
      ) ,
      delim , ''
    );
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `sys_conf_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `sys_conf_get`(_key VARCHAR(1024)
) RETURNS varchar(1024) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
DECLARE _r LONGTEXT DEFAULT "";
  SELECT conf_value FROM sys_conf WHERE conf_key=_key INTO _r;
  RETURN _r;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `uniqueId` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `uniqueId`() RETURNS varchar(16) CHARSET ascii COLLATE ascii_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _res VARCHAR(16);
  SELECT CONCAT(
    SUBSTRING_INDEX(UUID(), '-', 1),
    SUBSTRING_INDEX(UUID(), '-', 1)
  ) INTO _res;
  RETURN _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `unique_hubname` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `unique_hubname`(_name VARCHAR(200),
  _domain_id INTEGER
) RETURNS varchar(1024) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _r VARCHAR(1024);
  DECLARE _count TINYINT(8) DEFAULT 1;
  DECLARE _i TINYINT(6) DEFAULT 0;
  DECLARE _depth TINYINT(6) DEFAULT 0;
  
  SELECT _name INTO _r;

  SELECT count(*) FROM hub WHERE hubname = _r AND domain_id = _domain_id INTO _count;
 
  IF _name regexp '[\_\-]\([0-9]+\)$' THEN 
    SELECT SUBSTRING_INDEX(_name, '-', -1) INTO _depth;
    SELECT SUBSTRING_INDEX(_name, '-', 1) INTO @base;
    WHILE _depth  < 1000 AND _count <> 0 DO 
      SELECT _depth + 1 INTO _depth;
      SELECT CONCAT(@base, "-", _depth) INTO _r;
      SELECT count(*) FROM hub WHERE hubname = _r AND domain_id = _domain_id INTO _count;
    END WHILE;
  ELSE 
    WHILE _count <> 0 DO
      SELECT count(*) FROM hub WHERE hubname = _r AND domain_id = _domain_id INTO _count;
      IF _count >0 THEN 
        SELECT _i + 1 INTO _i;
        SELECT CONCAT(_name, _i) INTO _r;
      END IF;
    END WHILE;
  END IF;
  IF _r IS NULL THEN 
    SELECT uniqueId() INTO _r;
  END IF;
  RETURN _r;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `unique_ident` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `unique_ident`(_ident VARCHAR(200)
) RETURNS varchar(1024) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _r VARCHAR(1024);
  DECLARE _count TINYINT(8) DEFAULT 1;
  DECLARE _i TINYINT(6) DEFAULT 0;
  DECLARE _depth TINYINT(6) DEFAULT 0;
  
  SELECT _ident INTO _r;

  SELECT count(*) FROM entity WHERE ident = _r INTO _count;
  SELECT count(*) + _count FROM organisation WHERE ident = _r INTO _count;
 
  IF _ident regexp '[\_\-]\([0-9]+\)$' THEN 
    SELECT SUBSTRING_INDEX(_ident, '-', -1) INTO _depth;
    SELECT SUBSTRING_INDEX(_ident, '-', 1) INTO @base;
    WHILE _depth  < 1000 AND _count <> 0 DO 
      SELECT _depth + 1 INTO _depth;
      SELECT CONCAT(@base, "-", _depth) INTO _r;
      SELECT count(*) FROM hub WHERE hubname = _r INTO _count;
       SELECT count(*) + _count FROM organisation WHERE ident = _r INTO _count;
    END WHILE;
  ELSE 
    WHILE _count <> 0 DO
      SELECT count(*) FROM hub WHERE hubname = _r INTO _count;
      SELECT count(*) + _count FROM organisation WHERE ident = _r INTO _count;
      IF _count >0 THEN 
        SELECT _i + 1 INTO _i;
        SELECT CONCAT(_ident, _i) INTO _r;
      END IF;
    END WHILE;
  END IF;
  RETURN _r;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `unique_ident1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `unique_ident1`(_ident VARCHAR(200)
) RETURNS varchar(1024) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _r VARCHAR(1024);
  DECLARE _count TINYINT(8) DEFAULT 1;
  DECLARE _i TINYINT(6) DEFAULT 0;
  DECLARE _depth TINYINT(6) DEFAULT 0;
  
  SELECT _ident INTO _r;

  SELECT count(*) FROM entity WHERE ident = _r INTO _count;
  SELECT count(*) + _count FROM organisation WHERE ident = _r INTO _count;
 
  IF _ident regexp '[\_\-]\([0-9]+\)$' THEN 
    SELECT SUBSTRING_INDEX(_ident, '-', -1) INTO _depth;
    SELECT SUBSTRING_INDEX(_ident, '-', 1) INTO @base;
    WHILE _depth  < 1000 AND _count <> 0 DO 
      SELECT _depth + 1 INTO _depth;
      SELECT CONCAT(@base, "-", _depth) INTO _r;
      SELECT count(*) FROM entity WHERE ident = _r INTO _count;
       SELECT count(*) + _count FROM organisation WHERE ident = _r INTO _count;
    END WHILE;
  ELSE 
    WHILE _count <> 0 DO
      SELECT count(*) FROM entity WHERE ident = _r INTO _count;
      SELECT count(*) + _count FROM organisation WHERE ident = _r INTO _count;
      IF _count >0 THEN 
        SELECT _i + 1 INTO _i;
        SELECT CONCAT(_ident, _i) INTO _r;
      END IF;
    END WHILE;
  END IF;
  RETURN _r;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `unique_role` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `unique_role`(_name VARCHAR(500),
  _cnk_role_id INT(10),  
  _org_id VARCHAR(16) 
) RETURNS varchar(1024) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _r VARCHAR(1024);
  DECLARE _count INT(8) DEFAULT 0;
  DECLARE _depth INT(4) DEFAULT 0;

  IF _cnk_role_id IN ('',  '0') THEN 
   SELECT NULL INTO  _cnk_role_id;
  END IF;

  SELECT count(*) FROM role WHERE name = _name  AND org_id= _org_id AND id <> IFNULL(_cnk_role_id,-99)
  INTO _count;
 
  IF _count = 0 THEN 
    SELECT _name INTO _r;
  ELSE 
      WHILE _depth  < 1000 AND _count > 0 DO 
            SELECT _depth + 1 INTO _depth;
            SELECT CONCAT(_name, " (", _depth, ")") INTO _r;
            SELECT count(*) FROM role WHERE name = _r AND org_id= _org_id  AND id <> IFNULL(_cnk_role_id,-99)
            INTO _count;

      END WHILE;  
  END IF;   
  RETURN _r;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `unique_username` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `unique_username`(_username VARCHAR(200),
  _domain_name VARCHAR(500)
) RETURNS varchar(1024) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _r VARCHAR(1024);
  DECLARE _count TINYINT(8) DEFAULT 0;
  DECLARE _i TINYINT(6) DEFAULT 0;
  DECLARE _depth TINYINT(6) DEFAULT 0;
  
  SELECT _username INTO _r;
  SELECT count(*) FROM drumate u INNER JOIN(domain d) ON u.domain_id=d.id 
    WHERE username = _r AND (d.name=_domain_name OR d.id=_domain_name) INTO _count;
  IF _username regexp '[\_\-]\([0-9]+\)$' THEN 
    SELECT SUBSTRING_INDEX(_username, '-', -1) INTO _depth;
    SELECT SUBSTRING_INDEX(_username, '-', 1) INTO @base;
    WHILE _depth  < 1000 AND _count <> 0 DO 
      SELECT _depth + 1 INTO _depth;
      SELECT CONCAT(@base, "-", _depth) INTO _r;
      SELECT count(*) FROM drumate u INNER JOIN(domain d) ON u.domain_id=d.id
      WHERE username = _r AND (d.name=_domain_name OR d.id=_domain_name) INTO _count;
    END WHILE;
  ELSE 
    WHILE _count <> 0 DO
      SELECT count(*) FROM drumate u INNER JOIN(domain d) ON u.domain_id=d.id
        WHERE username = _r AND (d.name=_domain_name OR d.id=_domain_name) INTO _count;
      IF _count >0 THEN 
        SELECT _i + 1 INTO _i;
        SELECT CONCAT(_username, _i) INTO _r;
      END IF;
    END WHILE;
  END IF;
  RETURN _r;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `user_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `user_exists`(_key  varchar(512) CHARACTER SET ascii
) RETURNS tinyint(1)
    DETERMINISTIC
BEGIN
  DECLARE _id VARCHAR(16);






  SELECT id FROM drumate WHERE id=_key or email = _key  LIMIT 1 INTO _id;


  IF _id IS NOT NULL OR _id != '' THEN
    RETURN TRUE;
  END IF;

  RETURN FALSE;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `vhost` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `vhost`(_key VARCHAR(1024)
) RETURNS varchar(1024) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _vhost VARCHAR(1024);

  IF _key REGEXP '^(.+)\\\.(.+)' THEN
    SELECT _key INTO _vhost;
  ELSE
    SELECT v.fqdn FROM entity e 
      INNER JOIN yp.domain d ON d.id = e.dom_id 
      LEFT JOIN yp.vhost v ON v.id = e.id
      LEFT JOIN yp.entity dr ON e.id = dr.id AND e.area='personal'
      LEFT JOIN yp.entity h ON e.id = h.id AND e.area IN('private', 'public', 'share','dmz','restricted')
      WHERE e.id=_key OR e.db_name=_key GROUP BY (v.id) LIMIT 1 INTO _vhost;
  END IF;

  RETURN _vhost;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `vhost_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `vhost_next`(_key VARCHAR(1024)
) RETURNS varchar(1024) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _vhost VARCHAR(1024);

  SELECT v.fqdn FROM entity e 
    INNER JOIN vhost v ON v.id=e.id
    WHERE v.fqdn=_key OR e.id=_key OR e.db_name=_key LIMIT 1 INTO _vhost;

  RETURN _vhost;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP FUNCTION IF EXISTS `vhost_old` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE FUNCTION `vhost_old`(_key VARCHAR(1024)
) RETURNS varchar(1024) CHARSET utf8mb4 COLLATE utf8mb4_general_ci
    DETERMINISTIC
BEGIN
  DECLARE _vhost VARCHAR(1024);

  IF _key REGEXP '^(.+)\\\.(.+)' THEN
    SELECT _key INTO _vhost;
  ELSE
    SELECT v.fqdn FROM entity e 
      INNER JOIN vhost v ON v.id=e.id
      INNER JOIN domain d ON e.dom_id=d.id 
      INNER JOIN hub h ON h.id=e.id
      WHERE h.hubname=_key OR e.id=_key OR e.db_name=_key LIMIT 1 INTO _vhost;
  END IF;

  RETURN _vhost;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `add_alias` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `add_alias`(
  IN _ident VARCHAR(80),
  IN _alias VARCHAR(512)
)
BEGIN
  INSERT INTO alias VALUES (_ident, _alias, 'user', SUBSTRING_INDEX(_alias, '.', -2))
  ON DUPLICATE KEY UPDATE vhost=_alias;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `add_site` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `add_site`(
  IN _ident VARCHAR(40),
  IN _owner_id VARCHAR(40),
  IN _name VARCHAR(40),
  IN _headline VARCHAR(255),
  IN _home VARCHAR(255),
  IN _description TEXT,
  IN _permission TINYINT(4),
  IN _domain VARCHAR(500),
  IN _area VARCHAR(20)
)
BEGIN
  DECLARE _db_host VARCHAR(255);
  DECLARE _fs_host VARCHAR(255);
  DECLARE _home_dir VARCHAR(255);
  DECLARE _id VARCHAR(16);
  DECLARE _now INT(11);

  SELECT dbhost, fshost, CONCAT(user_root, _id) FROM settings WHERE build=1
  	 INTO _db_host, _fs_host, _home_dir;

  SELECT uniqueId(), UNIX_TIMESTAMP() INTO _id, _now;
  START TRANSACTION;
    INSERT INTO entity (`id`,`ident`,`vhost`,`db_name`,`db_host`,`fs_host`,
           `home_dir`, `type`,`area`,`area_id`, `status`, `ctime`, `mtime`)
    VALUES (_id, _ident, get_vhost(_ident), make_db_name(), _db_host, _fs_host,
           _home_dir , 'community', _area, uniqueId(), 'active', _now, _now);

    INSERT INTO community (`id`,`owner_id`,`dmail`,`cname`,`create_time`,`mtime`,
    	   `description`, `permission`)
    VALUES (_id, _owner_id, get_dmail(_ident), _name, _now, _now,
    	   _description, _permission);

    INSERT INTO `alias` (`id`,`ident`,`vhost`,`scope`,`domain`)
    VALUES (_id, _ident, get_vhost(_ident), 'alternate', get_domain(@domain_name));

    INSERT INTO `alias` (`id`,`ident`,`vhost`,`scope`,`domain`)
    VALUES (_id, _ident, CONCAT(_ident, '.', 'drumee.net'), 'alternate', 'drumee.net');

  COMMIT;
  SELECT * FROM drumate_view WHERE ident=_ident;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `add_unified_room` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `add_unified_room`(
  IN _id VARCHAR(16) CHARACTER SET ascii,
  IN _uid VARCHAR(30) CHARACTER SET ascii,
  IN _is_mic_enabled TINYINT ,
  IN _is_video_enabled TINYINT ,
  IN _is_share_enabled TINYINT ,
  IN _is_write_enabled TINYINT ,
  IN _metadata JSON 
)
BEGIN
   
    REPLACE INTO unified_room
    (id, uid, is_mic_enabled, is_video_enabled, is_share_enabled, is_write_enabled, metadata)
    SELECT 
    _id ,_uid, _is_mic_enabled, _is_video_enabled, _is_share_enabled, _is_write_enabled, _metadata;
    
    
    
    SELECT 
    u.id, u.uid, is_mic_enabled, is_video_enabled, is_share_enabled, is_write_enabled, metadata,
    coalesce(guest_name, firstname) username FROM unified_room u 
      INNER JOIN socket s ON u.uid=s.id 
      INNER JOIN cookie c ON s.cookie=c.id
      LEFT JOIN drumate d on c.uid=d.id
    WHERE u.id =_id AND s.state='active';

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_contact_invitation_token_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `all_contact_invitation_token_get`(
  IN _secret      VARCHAR(512)
)
BEGIN

  
  SELECT 
    t.email,
    t.name,
    t.secret,
    t.inviter_id,
    t.status,
    t.ctime,
    d.email as inviter_email,  
    CASE WHEN  JSON_VALUE(metadata, "$.mode")  IS NOT NULL THEN 'b2bsignup' ELSE t.method END method , 
    t.metadata
  FROM 
  token t
    LEFT JOIN drumate d on d.id=t.inviter_id
  WHERE 
    status = 'active' AND 
    method = 'signup' AND 
    inviter_id  IS NOT NULL AND 
    t.email  = (SELECT email FROM token WHERE  secret = _secret);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `all_read_count` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `all_read_count`()
BEGIN

  DECLARE _db_name VARCHAR(500);
  DECLARE _temp_result JSON;
  DECLARE _uid VARCHAR(16);
  DECLARE _nid VARCHAR(16);
  DECLARE _read_cnt INT ;
  DECLARE _is_archive INT ;  
  DECLARE _contact_chat_cnt INT DEFAULT 0;  
  DECLARE _share_chat_cnt INT DEFAULT 0 ;  
  DECLARE _archive_chat_cnt INT DEFAULT 0 ; 
  DECLARE _support_chat_cnt INT DEFAULT 0 ; 
  DECLARE _head_chat_cnt INT DEFAULT 0 ; 
  DECLARE _archive_head_chat_cnt INT DEFAULT 0 ; 

  DECLARE _domain_id INT;
  DECLARE _is_support INT DEFAULT 0 ;

  SELECT 
    COUNT(1) , COUNT( DISTINCT ch.entity_id )
  FROM 
  channel ch 
  INNER JOIN  read_channel rc ON ch.entity_id= rc.entity_id 
  INNER JOIN  contact c ON c.uid = ch.entity_id
  WHERE
    ch.entity_id = ch.author_id AND 
    rc.entity_id <> rc.uid  AND 
    ch.sys_id > rc.ref_sys_id INTO _contact_chat_cnt,_head_chat_cnt; 


  SELECT 
    COUNT(1) , COUNT( DISTINCT ch.entity_id )
  FROM 
  channel ch 
  INNER JOIN  read_channel rc ON ch.entity_id= rc.entity_id 
  INNER JOIN  contact c ON c.uid = ch.entity_id
  INNER JOIN  archive_entity ae ON c.id = ae.entity_id
  WHERE
    ch.entity_id = ch.author_id AND 
    rc.entity_id <> rc.uid  AND 
    ch.sys_id > rc.ref_sys_id INTO _archive_chat_cnt,_archive_head_chat_cnt ; 

  SELECT _contact_chat_cnt -  _archive_chat_cnt INTO _contact_chat_cnt;
  SELECT _head_chat_cnt -  _archive_head_chat_cnt INTO _head_chat_cnt;

  DROP TABLE IF EXISTS _show_node;
  CREATE TEMPORARY TABLE _show_node  AS  
    SELECT 
      m.id, db_name,  CASE WHEN ae.entity_id = m.id THEN 1 ELSE 0 END is_archive
    FROM 
    media m
    INNER JOIN yp.hub h on  h.id = m.id 
    INNER  JOIN yp.entity he ON m.id = he.id
    LEFT JOIN  archive_entity ae ON m.id = ae.entity_id
    WHERE category = 'hub' ;

  ALTER TABLE _show_node ADD `is_checked` boolean default 0 ;

  SELECT id FROM yp.entity WHERE db_name = DATABASE() INTO _uid;
  SELECT id, db_name, is_archive FROM _show_node WHERE is_checked =0  LIMIT 1 
    INTO _nid, _db_name,_is_archive; 

  WHILE _nid IS NOT NULL DO

    SET @st = CONCAT('CALL ', _db_name ,'.room_detail(?,?)');
    PREPARE stamt FROM @st;
    EXECUTE stamt USING  JSON_OBJECT('uid',_uid ), _temp_result ;
    DEALLOCATE PREPARE stamt; 
      
    SELECT JSON_VALUE(_temp_result, "$.read_cnt") INTO _read_cnt;  

    IF _is_archive = 0 THEN  
      SELECT IFNULL(_read_cnt, 0) +  _share_chat_cnt INTO _share_chat_cnt; 
      SELECT _head_chat_cnt + 1 INTO _head_chat_cnt  WHERE IFNULL(_read_cnt, 0) > 0; 
                 
    ELSE
      SELECT IFNULL(_read_cnt, 0) +  _archive_chat_cnt INTO _archive_chat_cnt; 
    END IF ; 

    UPDATE _show_node SET is_checked = 1 WHERE id = _nid ;
    SELECT 0, NULL INTO _read_cnt, _nid;
    SELECT id, db_name FROM _show_node WHERE is_checked =0  LIMIT 1 INTO _nid, _db_name; 
  END WHILE;


    SELECT domain_id FROM yp.privilege WHERE uid = _uid INTO _domain_id;
    SELECT 1  FROM yp.sys_conf WHERE  conf_key = 'support_domain' AND conf_value =_domain_id INTO _is_support;


    
    
    
    
    
    
    
    
    


    IF _is_support = 1 THEN
      SELECT 
        COUNT(1)
      FROM 
      yp.ticket t 
      LEFT JOIN yp.read_ticket_channel rtc on rtc.ticket_id = t.ticket_id AND rtc.uid = _uid
      WHERE 
        t.last_sys_id > IFNULL(rtc.ref_sys_id,0)  
      INTO _support_chat_cnt;
    ELSE 
      explain SELECT 
        COUNT(1)
      FROM 
      yp.ticket t 
      INNER JOIN yp.read_ticket_channel rtc on rtc.ticket_id = t.ticket_id AND rtc.uid = _uid
      WHERE 
        t.last_sys_id > rtc.ref_sys_id AND t.uid = _uid
      INTO _support_chat_cnt;

  END  IF; 
  
    SELECT _share_chat_cnt  share_chat_cnt , _contact_chat_cnt  contact_chat_cnt, _archive_chat_cnt archive_chat_cnt, _support_chat_cnt support_cnt,
          _head_chat_cnt head_chat_cnt, (_share_chat_cnt + _contact_chat_cnt + _archive_chat_cnt +_support_chat_cnt ) total_cnt; 


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `analytics_connection` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `analytics_connection`(
  IN _json JSON
)
BEGIN
  DECLARE _format VARCHAR(120);
  DECLARE _probe_id VARCHAR(16);
  DECLARE _domain VARCHAR(1000);
  DECLARE _domains json;
  DECLARE _service VARCHAR(1000);
  DECLARE _start INT(11) unsigned;
  DECLARE _end INT(11) unsigned;
  DECLARE _epoch INT(11) unsigned;
  DECLARE _drumates INT(11) unsigned;
  DECLARE _i INT DEFAULT 0;

  DROP TABLE IF EXISTS _tmp_analytics;

  SELECT NAME FROM domain WHERE id=1 INTO _domain;
  CALL yp.parseDateRange(_json, _format, _start, _end);


  CREATE TEMPORARY TABLE _tmp_analytics(
    `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
    `ctime` int(11) unsigned NOT NULL,
    `date_time` varchar(128) CHARACTER SET ascii DEFAULT '',
    `day` varchar(128) CHARACTER SET ascii DEFAULT '',
    `count` int(11) unsigned DEFAULT 1,
    `name` varchar(128) CHARACTER SET ascii DEFAULT '',
    PRIMARY KEY (`sys_id`)
  );
  
  INSERT INTO _tmp_analytics SELECT 
    sys_id,
    ctime,
    FROM_UNIXTIME(ctime, _format),
    FROM_UNIXTIME(ctime, "%Y-%m-%d"),
    1,
    `name`
    FROM services_log WHERE 
      `name` IN (
        '', 
        'butler.b2b_signup_password', 
        'butler.b2c_signup_password', 
        'butler.signup', 
        'desk.home'
      ) AND
      (ctime <= _end AND ctime >= _start);

  UPDATE _tmp_analytics SET `name`='index' WHERE `name`='';

  SELECT
    GROUP_CONCAT(DISTINCT
      CONCAT(
        "SUM(IF(`name`=", QUOTE(`name`), ", 1, 0)) AS `", `name`, "` "
      )
    ) INTO @sql
  FROM _tmp_analytics;

  SET @sql = CONCAT(@sql, ", SUM(IF(`name`='account', count, 0)) AS account ");

  INSERT INTO _tmp_analytics SELECT 
    null, 
    ctime, 
    FROM_UNIXTIME(ctime, _format),
    FROM_UNIXTIME(ctime, "%Y-%m-%d"),
    count(*),
    'account'
    FROM entity WHERE (ctime <= _end AND ctime >= _start) AND 
    `status`="active" AND `type`='drumate' GROUP BY ctime;


  DROP TABLE IF EXISTS _tmp_results;
  SET @sql = CONCAT(
    'CREATE TEMPORARY TABLE _tmp_results AS SELECT ctime, date_time, ', 
    'CAST(FROM_UNIXTIME(ctime, "%h") AS INT) hour, ',
    'FROM_UNIXTIME(ctime, "%Y-%m-%d") AS day, ',
    @sql, 
    'FROM _tmp_analytics GROUP BY date_time'
    );

  SELECT UNIX_TIMESTAMP(STR_TO_DATE('2020-04-01' , "%Y-%m-%d"))  INTO _epoch;
  SELECT count(*) FROM entity 
    WHERE ctime <= _start AND ctime >= _epoch AND 
    `status`="active" AND `type`='drumate' INTO _drumates;

  IF @sql IS NOT NULL THEN 
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;
  SELECT *, _drumates + sum(account) OVER (ORDER BY day) AS 
    total FROM _tmp_results WHERE (ctime <= _end AND ctime >= _start);
  
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `analytics_log` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `analytics_log`(
    IN _name varchar(128),
    IN _args json,    
    IN _uid varchar(16),
    IN _hub_id varchar(16),
    IN _headers JSON
)
BEGIN

  INSERT INTO services_log SELECT
    null,
    _name,
    _args,
    _uid,
    _hub_id,
    _headers,
    UNIX_TIMESTAMP();

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `analytics_referer` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `analytics_referer`(
  IN _json JSON
)
BEGIN
  DECLARE _format VARCHAR(120);
  DECLARE _probe_id VARCHAR(16);
  DECLARE _domain VARCHAR(1000);
  DECLARE _domains json;
  DECLARE _service VARCHAR(1000);
  DECLARE _start INT(11) unsigned;
  DECLARE _end INT(11) unsigned;
  DECLARE _i INT DEFAULT 0;

  DROP TABLE IF EXISTS _tmp_analytics;

  SELECT NAME FROM domain WHERE id=1 INTO _domain;
  CALL yp.parseDateRange(_json, _format, _start, _end);

  SELECT IFNULL(json_value(_json, "$.service"), 'media.xl') INTO _service;
  SELECT json_value(_json, "$.probeId") INTO _probe_id;


  CREATE TEMPORARY TABLE _tmp_analytics AS SELECT 
    sys_id,
    ctime,
    FROM_UNIXTIME(ctime, _format) AS date_time,
    JSON_VALUE(args, "$.nid") AS probe_id,
    IFNULL(
      JSON_VALUE(args, "$.referer"), 
      IFNULL(
        REGEXP_REPLACE(
          JSON_VALUE(headers, "$.referer"), 
          "^http.+://(www.){0,1}|/.+$", ""
        ), 
        'other'
      )
    ) AS referer
    FROM services_log WHERE (`name` = _service OR `name` = '') AND
      (ctime <= _end AND ctime >= _start);

  ALTER TABLE _tmp_analytics ADD PRIMARY KEY (`sys_id`); 

  UPDATE _tmp_analytics SET referer='other' 
    WHERE JSON_SEARCH(_json, 'one', referer) IS NULL 
      AND referer NOT IN (_domain, "other");


  SELECT
    GROUP_CONCAT(DISTINCT
      CONCAT(
        "SUM(IF(referer=", QUOTE(referer), ", 1, 0)) AS `", referer, "` "
      )
    ) INTO @sql
  FROM _tmp_analytics;

  
  
  
  
  
  
  

  SET @sql = CONCAT(
    'SELECT date_time, ', 
    'CAST(FROM_UNIXTIME(ctime, "%h") AS INT) hour, ',
    'FROM_UNIXTIME(ctime, "%Y-%m-%d") AS day, ',
    @sql, 
    'FROM _tmp_analytics GROUP BY date_time'
    );

  IF @sql IS NOT NULL THEN 
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;

  DROP TABLE IF EXISTS _tmp_analytics;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `analytics_service` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `analytics_service`(
  IN _json JSON
)
BEGIN
  DECLARE _format VARCHAR(120);
  DECLARE _hub_id VARCHAR(16);
  DECLARE _vhost VARCHAR(1000);
  DECLARE _service VARCHAR(1000);
  DECLARE _start INT(11) unsigned;
  DECLARE _end INT(11) unsigned;
  
  CALL yp.parseDateRange(_json, _format, _start, _end);
  SELECT json_value(_json, "$.hub_id") INTO _hub_id;
  SELECT json_value(_json, "$.vhost") INTO _vhost;
  SELECT IFNULL(json_value(_json, "$.service"), '') INTO _service;

  IF _hub_id IS NULL AND _vhost IS NOT NULL THEN
    SELECT id FROM vhost WHERE fqdn=_vhost INTO _hub_id;
  END IF;


  SELECT _format, _start, _end, _hub_id;
  SELECT FROM_UNIXTIME(ctime, _format) date_time,
  count(*) AS `count`
  FROM services_log WHERE hub_id = _hub_id AND `name` = _service 
    AND ctime <= _end AND ctime >= _start
    GROUP BY date_time ASC;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `analytic_drumates` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `analytic_drumates`(
  IN _json JSON
)
BEGIN
    DECLARE _format VARCHAR(120);
    
    DECLARE _epoch INT(11) unsigned;
    

    SELECT UNIX_TIMESTAMP(STR_TO_DATE('2020-04-01', "%Y-%m-%d")) INTO _epoch;
    WITH data1 
    AS (
      SELECT FROM_UNIXTIME(ctime, "%y-%m-%d") day,
      count(*) drumates
      FROM yp.drumate d INNER JOIN yp.entity e USING(id) WHERE 
      
      ctime >= _epoch AND e.status IN('active')
      GROUP BY day ASC
    )
    SELECT day, sum(drumates) OVER (ORDER BY day) AS `count` 
      FROM data1 GROUP BY day ORDER BY day ASC;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `analytic_hub_usage` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `analytic_hub_usage`(
  IN _json JSON
)
BEGIN
  DECLARE _finished INTEGER DEFAULT 0;
  DECLARE _db_name VARCHAR(56);

  DECLARE dbcursor CURSOR FOR SELECT e.db_name 
    FROM yp.drumate d INNER JOIN yp.entity e USING(id) 
    WHERE JSON_VALUE(profile, "$.profile_type")='hub' AND `status`="active";

  DECLARE CONTINUE HANDLER FOR NOT FOUND SET _finished = 1; 

  DROP TABLE IF EXISTS __tmp_analytics;
  CREATE TEMPORARY TABLE __tmp_analytics(
    `sys_id` int(11) unsigned NOT NULL AUTO_INCREMENT,
    `id` varchar(16) CHARACTER SET ascii DEFAULT NULL,
    `filesize` bigint(20) unsigned DEFAULT 0,
    `ctime` int(11) unsigned NOT NULL DEFAULT 0,
    `category` varchar(16) NOT NULL DEFAULT 'other',
    PRIMARY KEY (`sys_id`)
  );


  OPEN dbcursor;
    STARTLOOP: LOOP
    FETCH dbcursor INTO _db_name;
      SET @s = CONCAT("INSERT INTO __tmp_analytics SELECT NULL, ", 
      "id, 
      filesize, 
      upload_time,
      category FROM ", 
      _db_name, 
      ".media WHERE extension !='root' AND status IN('active', 'locked')");
    
    IF _finished = 1 THEN 
      LEAVE STARTLOOP;
    END IF;    
 
    IF @s IS NOT NULL THEN 
      PREPARE stmt FROM @s;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt;
    END IF;
    END LOOP STARTLOOP;
  CLOSE dbcursor;
  

  DROP TABLE IF EXISTS _tmp_results;
  CREATE TEMPORARY TABLE _tmp_results AS SELECT 
    FROM_UNIXTIME(ctime, "%y-%m-%d") day, 
    sum(filesize)/(1024*1024) AS size 
  FROM __tmp_analytics GROUP BY day;
  
  SELECT *, sum(size) OVER (ORDER BY day) AS 
    total FROM _tmp_results;
    
  DROP TABLE IF EXISTS _tmp_results;
  DROP TABLE IF EXISTS __tmp_analytics;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `analytic_hub_users` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `analytic_hub_users`(
  IN _json JSON
)
BEGIN
  DECLARE _format VARCHAR(120);
  DECLARE _start INT(11) unsigned;
  DECLARE _end INT(11) unsigned;
  CALL yp.parseDateRange(_json, _format, _start, _end);

  IF(JSON_VALUE(_json, "$.serie") = 'history') THEN 
    WITH data1 
    AS (
      SELECT FROM_UNIXTIME(ctime, _format) day,
      count(*) u
      FROM yp.drumate d INNER JOIN yp.entity e USING(id) WHERE 
        JSON_VALUE(profile, "$.profile_type")='hub' AND `status`="active" 
      GROUP BY day ASC
    )
    SELECT day, sum(u) OVER (ORDER BY day) AS `count` 
      FROM data1 GROUP BY day ORDER BY day ASC;
  ELSE 
    DROP TABLE IF EXISTS __tmp_services;
    CREATE TEMPORARY TABLE __tmp_services AS SELECT
      ctime, json_value(args, "$.hub_id") `uid` FROM services_log WHERE name='desk.home';

    SELECT FROM_UNIXTIME(s.ctime, _format) day, 
    count(DISTINCT d.id) AS `count`
    FROM yp.drumate d INNER JOIN __tmp_services s on d.id = s.uid GROUP BY day ASC;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `analytic_origin_visit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `analytic_origin_visit`(
  IN _json JSON
)
BEGIN
  DECLARE _cycle json;
  DECLARE _page json;
  DECLARE _domain json;
  DECLARE _format VARCHAR(120);
  DECLARE _start INT(11) unsigned;
  DECLARE _end INT(11) unsigned;
  DECLARE _service VARCHAR(1000);
  DECLARE _i INT(4) DEFAULT 0;
  DECLARE _cnt INT(4) DEFAULT 0;

  SELECT IFNULL(JSON_VALUE(_json, "$.cycle"), 'daterange') INTO _cycle;
  SELECT IFNULL(IFNULL(JSON_QUERY (_json, "$.page"),    JSON_VALUE(_json, "$.page")) , 'all') INTO _page;
  SELECT IFNULL(IFNULL(JSON_QUERY (_json, "$.domain"),    JSON_VALUE(_json, "$.domain")) , 'all') INTO _domain;
  SELECT IFNULL(json_value(_json, "$.service"), 'media.xl') INTO _service;
  CALL yp.parseDateRange(_json, _format, _start, _end);


  DROP TABLE IF EXISTS  _src_page;
  CREATE TEMPORARY TABLE _src_page ( page VARCHAR(50)) ENGINE=MEMORY; 

    WHILE _i < JSON_LENGTH(_page) DO 
        INSERT INTO _src_page SELECT get_json_array(_page, _i) ;
        SELECT _i + 1 INTO _i;
    END WHILE;

  SELECT  0 INTO _i;
  DROP TABLE IF EXISTS  _src_domain;
  CREATE TEMPORARY TABLE _src_domain ( domain VARCHAR(100)) ENGINE=MEMORY; 

  WHILE _i < JSON_LENGTH(_domain) DO 
      INSERT INTO _src_domain SELECT get_json_array(_domain, _i) ;
      SELECT _i + 1 INTO _i;
  END WHILE;

  DROP TABLE IF EXISTS  _tmp_analytics;
  CREATE TEMPORARY TABLE _tmp_analytics AS
  SELECT 
    sys_id,
    ctime,
    FROM_UNIXTIME(ctime, _format) AS date_time,
    FROM_UNIXTIME(ctime, '%Y-%m') AS date_mon,
    JSON_VALUE(args, "$.page") AS page,
    JSON_VALUE(headers, "$.referer") referer
  FROM services_log 
    LEFT JOIN _src_domain d ON  d.domain = JSON_VALUE(headers, "$.referer")
    LEFT JOIN _src_page p ON  p.page =  JSON_VALUE(args, "$.page") 
  WHERE 
    (`name` = _service ) AND
    JSON_VALUE(headers, "$.referer") IS NOT NULL AND
    JSON_VALUE(args, "$.page") IS NOT NULL AND 
    JSON_VALUE(args, "$.section") IS NOT NULL AND
    JSON_VALUE(args, "$.area") IS NOT NULL AND
    JSON_VALUE(args, "$.page") =  JSON_VALUE(args, "$.section") AND 
    JSON_VALUE(args, "$.section") =  JSON_VALUE(args, "$.area") AND 
    (ctime <= _end AND ctime >= _start) AND
    CASE WHEN _page  = 'all' THEN  p.page IS NULL  ELSE  p.page IS NOT NULL END AND 
    CASE WHEN _domain  = 'all' THEN  d.domain IS NULL  ELSE  d.domain IS NOT NULL END ; 
 
  SELECT COUNT(sys_id) FROM _tmp_analytics  INTO _cnt;

  
  
  
  
  



  IF _cycle = 'year' THEN

        WITH recursive all_dates(dt) as (
            SELECT FROM_UNIXTIME(_start, _format) dt 
                union all 
            SELECT dt + interval 1 month FROM all_dates where dt + interval 1 month <= FROM_UNIXTIME(_end, _format) 
        )
        SELECT  DATE_FORMAT(d.dt ,'%Y-%m-01') date_time, coalesce(t.cnt, 0) cnt ,coalesce(referer,'') referer
        FROM  all_dates d
        LEFT JOIN (SELECT COUNT(sys_id) cnt, referer , date_mon as date_time FROM _tmp_analytics GROUP BY  referer , date_mon) t ON t.date_time = DATE_FORMAT(d.dt ,'%Y-%m')
        WHERE _cnt > 0
        ORDER by d.dt;

  ELSE 

        WITH recursive all_dates(dt) as (
            SELECT FROM_UNIXTIME(_start, _format) dt 
                union all 
            SELECT dt + interval 1 DAY FROM all_dates where dt + interval 1 DAY <= FROM_UNIXTIME(_end, _format) 
        )
        SELECT  DATE_FORMAT(d.dt ,_format) date_time, coalesce(t.cnt, 0) cnt ,coalesce(referer,'') referer
        FROM  all_dates d
        LEFT JOIN (SELECT COUNT(sys_id) cnt, referer , date_time FROM _tmp_analytics GROUP BY  referer , date_time) t ON t.date_time = DATE_FORMAT(d.dt ,_format)
        WHERE _cnt > 0
        ORDER by d.dt;

  END  IF;




 DROP TABLE IF EXISTS  _src_page;
 DROP TABLE IF EXISTS  _tmp_analytics;
 DROP TABLE IF EXISTS  _src_domain;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `analytic_tracking_button` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `analytic_tracking_button`(
  IN _json JSON
)
BEGIN
  DECLARE _cycle json;
  DECLARE _page json;
  DECLARE _section json;
  DECLARE _area json;

  DECLARE _format VARCHAR(120);
  DECLARE _start INT(11) unsigned;
  DECLARE _end INT(11) unsigned;
  DECLARE _service VARCHAR(1000);
  DECLARE _i INT(4) DEFAULT 0;
  DECLARE _cnt INT(4) DEFAULT 0;

  SELECT IFNULL(JSON_VALUE(_json, "$.cycle"), 'daterange') INTO _cycle;
  SELECT IFNULL(IFNULL(JSON_QUERY (_json, "$.page"),    JSON_VALUE(_json, "$.page")) , 'all') INTO _page;
  SELECT IFNULL(IFNULL(JSON_QUERY (_json, "$.section"),    JSON_VALUE(_json, "$.section")) , 'all') INTO _section;
  SELECT IFNULL(IFNULL(JSON_QUERY (_json, "$.area"),    JSON_VALUE(_json, "$.area")) , 'all') INTO _area;

  SELECT IFNULL(json_value(_json, "$.service"), 'media.xl') INTO _service;
  CALL yp.parseDateRange(_json, _format, _start, _end);


  DROP TABLE IF EXISTS  _src_page;
  CREATE TEMPORARY TABLE _src_page ( page VARCHAR(50)) ENGINE=MEMORY; 

    WHILE _i < JSON_LENGTH(_page) DO 
        INSERT INTO _src_page SELECT get_json_array(_page, _i) ;
        SELECT _i + 1 INTO _i;
    END WHILE;

  SELECT  0 INTO _i;
  DROP TABLE IF EXISTS  _src_section;
  CREATE TEMPORARY TABLE _src_section ( section VARCHAR(100)) ENGINE=MEMORY; 

  WHILE _i < JSON_LENGTH(_section) DO 
      INSERT INTO _src_section SELECT get_json_array(_section, _i) ;
      SELECT _i + 1 INTO _i;
  END WHILE;


 SELECT  0 INTO _i;
  DROP TABLE IF EXISTS  _src_area;
  CREATE TEMPORARY TABLE _src_area ( area VARCHAR(100)) ENGINE=MEMORY; 

  WHILE _i < JSON_LENGTH(_area) DO 
      INSERT INTO _src_area SELECT get_json_array(_area, _i) ;
      SELECT _i + 1 INTO _i;
  END WHILE;

  DROP TABLE IF EXISTS  _tmp_analytics;
  CREATE TEMPORARY TABLE _tmp_analytics AS
  SELECT 
    sys_id,
    ctime,
    FROM_UNIXTIME(ctime, _format) AS date_time,
    FROM_UNIXTIME(ctime, '%Y-%m') AS date_mon,
    JSON_VALUE(args, "$.area") AS area
  FROM services_log 
    LEFT JOIN _src_page p ON  p.page =  JSON_VALUE(args, "$.page") 
    LEFT JOIN _src_section s ON  s.section = JSON_VALUE(args, "$.section")
    LEFT JOIN _src_area a ON  a.area = JSON_VALUE(args, "$.area")
  WHERE 
    (`name` = _service ) AND
    JSON_VALUE(args, "$.page") IS NOT NULL AND 
    JSON_VALUE(args, "$.section") IS NOT NULL AND
    JSON_VALUE(args, "$.area") IS NOT NULL AND
    (ctime <= _end AND ctime >= _start) AND
    CASE WHEN _page  = 'all' THEN  p.page IS NULL  ELSE  p.page IS NOT NULL END AND 
    CASE WHEN _section  = 'all' THEN  s.section IS NULL  ELSE s.section IS NOT NULL END AND
    CASE WHEN _area  = 'all' THEN  a.area IS NULL  ELSE a.area IS NOT NULL END ; 

   SELECT COUNT(sys_id) FROM _tmp_analytics  INTO _cnt;

  
  
  
  
  

  IF _cycle = 'year' THEN

        WITH recursive all_dates(dt) as (
            SELECT FROM_UNIXTIME(_start, _format) dt 
                union all 
            SELECT dt + interval 1 month FROM all_dates where dt + interval 1 month <= FROM_UNIXTIME(_end, _format) 
        )
        SELECT  DATE_FORMAT(d.dt ,'%Y-%m-01') date_time, coalesce(t.cnt, 0) cnt ,coalesce(area,'') area
        FROM  all_dates d
        LEFT JOIN (SELECT COUNT(sys_id) cnt, area , date_mon  as date_time FROM _tmp_analytics GROUP BY  area , date_mon) t ON t.date_time = DATE_FORMAT(d.dt ,'%Y-%m')
        WHERE _cnt > 0
        ORDER by d.dt;

  ELSE 

        WITH recursive all_dates(dt) as (
            SELECT FROM_UNIXTIME(_start, _format) dt 
                union all 
            SELECT dt + interval 1 DAY FROM all_dates where dt + interval 1 DAY <= FROM_UNIXTIME(_end, _format) 
        )
        SELECT  DATE_FORMAT(d.dt ,_format) date_time, coalesce(t.cnt, 0) cnt ,coalesce(area,'') area
        FROM  all_dates d
        LEFT JOIN (SELECT COUNT(sys_id) cnt, area , date_time FROM _tmp_analytics GROUP BY  area , date_time) t ON t.date_time = DATE_FORMAT(d.dt ,_format)
        WHERE _cnt > 0
        ORDER by d.dt;

  END  IF;

 DROP TABLE IF EXISTS  _src_page;
 DROP TABLE IF EXISTS  _tmp_analytics;
 DROP TABLE IF EXISTS  _src_area;
 DROP TABLE IF EXISTS  _src_section;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `analytic_visit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `analytic_visit`(
  IN _json JSON
)
BEGIN
  DECLARE _cycle json;
  DECLARE _page json;
  DECLARE _format VARCHAR(120);
  DECLARE _start INT(11) unsigned;
  DECLARE _end INT(11) unsigned;
  DECLARE _service VARCHAR(1000);
  DECLARE _i INT(4) DEFAULT 0;
  DECLARE _cnt INT(4) DEFAULT 0;

  SELECT IFNULL(JSON_VALUE(_json, "$.cycle"), 'daterange') INTO _cycle;
  SELECT IFNULL(IFNULL(JSON_QUERY (_json, "$.page"),    JSON_VALUE(_json, "$.page")) , 'all') INTO _page;
  SELECT IFNULL(json_value(_json, "$.service"), 'media.xl') INTO _service;
  CALL yp.parseDateRange(_json, _format, _start, _end);


  DROP TABLE IF EXISTS  _src_page;
  CREATE TEMPORARY TABLE _src_page ( page VARCHAR(50)) ENGINE=MEMORY; 

    WHILE _i < JSON_LENGTH(_page) DO 
        INSERT INTO _src_page SELECT get_json_array(_page, _i) ;
        SELECT _i + 1 INTO _i;
    END WHILE;



  DROP TABLE IF EXISTS  _tmp_analytics;
  CREATE TEMPORARY TABLE _tmp_analytics AS
  SELECT 
    sys_id,
    ctime,
    FROM_UNIXTIME(ctime, _format) AS date_time,
    FROM_UNIXTIME(ctime, '%Y-%m') AS date_mon,
    JSON_VALUE(args, "$.page") AS page,
    JSON_VALUE(headers, "$.referer") referer
  FROM services_log 
    LEFT JOIN _src_page p ON  p.page =  JSON_VALUE(args, "$.page") 
  WHERE 
    (`name` = _service ) AND
    JSON_VALUE(args, "$.page") IS NOT NULL AND 
    JSON_VALUE(args, "$.section") IS NOT NULL AND
    JSON_VALUE(args, "$.area") IS NOT NULL AND
    JSON_VALUE(args, "$.page") =  JSON_VALUE(args, "$.section") AND 
    JSON_VALUE(args, "$.section") =  JSON_VALUE(args, "$.area") AND 
    (ctime <= _end AND ctime >= _start) AND
    CASE WHEN _page  = 'all' THEN  p.page IS NULL  ELSE  p.page IS NOT NULL END  ;

  SELECT COUNT(sys_id) FROM _tmp_analytics  INTO _cnt;

  
  
  
  
  

  IF _cycle = 'year' THEN

        WITH recursive all_dates(dt) as (
            SELECT FROM_UNIXTIME(_start, _format) dt 
                union all 
            SELECT dt + interval 1 month FROM all_dates where dt + interval 1 month <= FROM_UNIXTIME(_end, _format) 
        )
        SELECT  DATE_FORMAT(d.dt ,'%Y-%m-01') date_time, coalesce(t.cnt, 0) cnt ,coalesce(page,'') page
        FROM  all_dates d
        LEFT JOIN ( SELECT COUNT(sys_id) cnt, page , date_mon  as date_time FROM _tmp_analytics GROUP BY  page , date_mon) t ON t.date_time = DATE_FORMAT(d.dt ,'%Y-%m')
        WHERE _cnt > 0
        ORDER by d.dt;

  ELSE 

        WITH recursive all_dates(dt) as (
            SELECT FROM_UNIXTIME(_start, _format) dt 
                union all 
            SELECT dt + interval 1 DAY FROM all_dates where dt + interval 1 DAY <= FROM_UNIXTIME(_end, _format) 
        )
        SELECT  DATE_FORMAT(d.dt ,_format) date_time, coalesce(t.cnt, 0) cnt ,coalesce(page,'') page
        FROM  all_dates d
        LEFT JOIN ( SELECT COUNT(sys_id) cnt, page , date_time FROM _tmp_analytics GROUP BY  page , date_time) t ON t.date_time = DATE_FORMAT(d.dt ,_format)
        WHERE _cnt > 0
        ORDER by d.dt;

  END  IF;


 DROP TABLE IF EXISTS  _src_page;
 DROP TABLE IF EXISTS  _tmp_analytics;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `authn_store` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `authn_store`(
  IN _token VARCHAR(90)  CHARACTER SET ascii,
  IN _value JSON
)
BEGIN
  INSERT IGNORE INTO authn (`token`, `value`) VALUES(_token, _value);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `available_ident` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `available_ident`(
  IN _key VARCHAR(84)
)
BEGIN
  SELECT _key AS ident, (SELECT NOT EXISTS (SELECT ident FROM entity WHERE ident=_key)) AS available;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `cast_user` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `cast_user`(
 IN _admin VARCHAR(90),
 IN _user   VARCHAR(90)
)
BEGIN
  DECLARE _admin_id VARCHAR(16);
  DECLARE _user_id VARCHAR(16);
  SELECT id  FROM drumate  WHERE id=_admin OR
    username=_admin AND remit&2 INTO _admin_id;
  SELECT id FROM  drumate WHERE id=_user OR
    username=_user INTO _user_id;
  SELECT _admin_id admin, _user_id user;
  IF _admin_id IS NULL OR _user_id IS NULL THEN
    SELECT null id;
  ELSE
    SELECT * FROM cookie WHERE uid=_admin_id;
    UPDATE cookie SET uid=_user_id,mimicker=_admin_id WHERE uid=_admin_id;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `change_collation` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `change_collation`(
)
BEGIN

  DECLARE _done INT DEFAULT 0;
  DECLARE _hdb VARCHAR(20);
  DECLARE _hub_db VARCHAR(20);
  DECLARE _user_db VARCHAR(20);
  DECLARE _uid VARCHAR(16);
  DECLARE _hid VARCHAR(16);
  DECLARE _privilege TINYINT(2);
  DECLARE _tx INT(11) DEFAULT 0; 
  DECLARE _ts INT(11) DEFAULT 0; 
 
  DECLARE _cursor CURSOR FOR select db_name FROM yp.entity  limit 10;
  DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET _done = 1;
  OPEN _cursor;

  REPEAT
    FETCH _cursor INTO _hub_db ;
      SET @aas = concat("ALTER DATABASE ", _hub_db , " CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;" );
        SELECT @aas;
         PREPARE stmt FROM @aas;
         EXECUTE stmt;
         DEALLOCATE PREPARE stmt;
     UNTIL _done END REPEAT;

  CLOSE _cursor;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `change_vhost` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `change_vhost`(
  _id varchar(16),
  _ident  varchar(512)
)
BEGIN
  DECLARE _exists INT(8);

  SELECT d.name FROM 
    domain d INNER JOIN vhost v ON d.id=v.dom_id WHERE v.id=_id INTO @domain;
  IF @domain IS NOT NULL THEN 
    SET @fqdn=CONCAT(_ident, '.', @domain);
    SELECT count(*) FROM vhost WHERE fqdn=@fqdn INTO _exists;
    IF _exists = 0 THEN 
      UPDATE vhost SET fqdn=@fqdn WHERE id=_id;
    END IF;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `channel_delete_drumate_me` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `channel_delete_drumate_me`(
  IN _uid VARCHAR(16) CHARACTER SET ascii,
  IN _option VARCHAR(16),
  IN _messages JSON
)
BEGIN
  DECLARE _hub_id  VARCHAR(16) CHARACTER SET ascii;
  DECLARE _memeber_cnt INT ;

  DECLARE _message_id VARCHAR(16) CHARACTER SET ascii; 
  DECLARE _ref_sys_id BIGINT default 0;
  DECLARE _attachment  JSON;
  DECLARE _idx_node INT(4) DEFAULT 0;
  DECLARE _cnt INT ;
  DECLARE _idx_attachment INT(4) DEFAULT 0;
  DECLARE _node json;
  DECLARE _nid  VARCHAR(16) CHARACTER SET ascii;

  DECLARE _drumate_hub_id  VARCHAR(16) CHARACTER SET ascii;
  DECLARE _drumate_id  VARCHAR(16) CHARACTER SET ascii;

  DECLARE _max_sys_id BIGINT;
  DECLARE _max_ref_sys_id BIGINT;
  DECLARE _read_cnt INT ;
  DECLARE _read_sys_id BIGINT default 0;

 DECLARE _entity_id VARCHAR(16) CHARACTER SET ascii;


  DROP TABLE IF EXISTS _show_node;
  CREATE TEMPORARY TABLE _show_node AS SELECT * FROM channel WHERE 1=2;
  ALTER TABLE _show_node ADD `delete_attachment` JSON;

 DROP TABLE IF EXISTS `_last_node`;
  CREATE TEMPORARY TABLE `_last_node` (
      `uid` VARCHAR(16) CHARACTER SET ascii NOT NULL,  
      `entity_id` VARCHAR(16) CHARACTER SET ascii NOT NULL,
      `message`     VARCHAR(100) ,
      `attachment`  longtext,  
      `room_count` INT DEFAULT 0,
      `ctime` int(11)  NULL,
      UNIQUE KEY `id` (`uid`)
  ) ENGINE=InnoDB  DEFAULT CHARSET=utf8mb4 ;

  WHILE _idx_node < JSON_LENGTH(_messages) DO 
    SELECT get_json_array(_messages, _idx_node) INTO _message_id;
    INSERT INTO _show_node SELECT  *, NULL FROM channel WHERE message_id = _message_id;
    SELECT attachment,sys_id,entity_id FROM channel WHERE message_id = _message_id INTO _attachment,_ref_sys_id , _entity_id;

    DELETE FROM channel WHERE message_id = _message_id;


      WHILE _idx_attachment < JSON_LENGTH(_attachment) DO 
        SELECT JSON_QUERY(_attachment, CONCAT("$[", _idx_attachment, "]") ) INTO _node;
        SELECT JSON_VALUE(_node, '$.hub_id') INTO _hub_id;
        SELECT JSON_VALUE(_node, '$.nid') INTO _nid;
     
        SELECT db_name FROM yp.entity  WHERE id = _hub_id  INTO @hub_db_name;

        SET @st = CONCAT("UPDATE yp.disk_usage SET size = IFNULL(size,0) - (SELECT IFNULL(SUM(filesize),0) FROM "
                ,@hub_db_name, ".media  WHERE id =", QUOTE(_nid) ,") WHERE hub_id =",QUOTE( _hub_id),";");
        PREPARE stmt FROM @st;
        EXECUTE stmt ;
        DEALLOCATE PREPARE stmt; 

        SET @st = CONCAT("DELETE  FROM "
                ,@hub_db_name, ".media  WHERE id =", QUOTE(_nid) ,";");
        PREPARE stmt FROM @st;
        EXECUTE stmt ;
        DEALLOCATE PREPARE stmt;

        SELECT _idx_attachment + 1 INTO _idx_attachment;
      END WHILE;

    UPDATE _show_node SET delete_attachment = _attachment WHERE message_id = _message_id; 

    SELECT _idx_node + 1 INTO _idx_node;
  END WHILE;

  SELECT max(sys_id) FROM channel  WHERE entity_id = _entity_id INTO _max_sys_id;
  DELETE FROM  time_channel WHERE entity_id = _entity_id;
  INSERT INTO time_channel(entity_id, ref_sys_id,message,ctime)
  SELECT c.entity_id, c.sys_id,c.message, c.ctime FROM channel c WHERE sys_id = _max_sys_id;
  INSERT INTO _last_node
  SELECT _uid, _entity_id, LEFT(message, 100)  , attachment ,0, ctime FROM channel  WHERE sys_id = _max_sys_id ;


  SELECT * FROM _show_node;
  SELECT * FROM _last_node;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `channel_delete_hub_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `channel_delete_hub_all`(
  IN _uid VARCHAR(16) CHARACTER SET ascii,
  IN _option VARCHAR(16),
  IN _messages JSON
)
BEGIN

  DECLARE _hub_id  VARCHAR(16) CHARACTER SET ascii;
  DECLARE _memeber_cnt INT ;

  DECLARE _message_id VARCHAR(16) CHARACTER SET ascii; 
  DECLARE _ref_sys_id BIGINT default 0;
  DECLARE _attachment  JSON;
  DECLARE _idx_node INT(4) DEFAULT 0;
  DECLARE _cnt INT ;
  DECLARE _idx_attachment INT(4) DEFAULT 0;
  DECLARE _node json;
  DECLARE _nid  VARCHAR(16) CHARACTER SET ascii;

  DECLARE _drumate_hub_id  VARCHAR(16) CHARACTER SET ascii;
  DECLARE _drumate_id  VARCHAR(16) CHARACTER SET ascii;

  DECLARE _max_sys_id BIGINT;
  DECLARE _max_ref_sys_id BIGINT;
  DECLARE _read_cnt INT ;
  DECLARE _read_sys_id BIGINT default 0;

  SELECT id FROM yp.entity WHERE db_name=DATABASE() INTO _hub_id;
  DROP TABLE IF EXISTS _show_node;
  CREATE TEMPORARY TABLE _show_node AS SELECT * FROM channel WHERE 1=2;
  ALTER TABLE _show_node ADD `delete_attachment` JSON;
  
  DROP TABLE IF EXISTS _list_uid;
  CREATE TEMPORARY TABLE _list_uid (
    id VARCHAR(16) CHARACTER SET ascii , 
    hub_id VARCHAR(16) CHARACTER SET ascii,
    `is_checked` boolean default 0 
  );

  INSERT INTO _list_uid (id) 
  SELECT  d.id
  FROM permission p 
  INNER JOIN yp.drumate d ON  p.entity_id=d.id 
  WHERE p.resource_id='*' ;

  SELECT count(id)
  FROM _list_uid p 
  INTO _memeber_cnt;

  WHILE _idx_node < JSON_LENGTH(_messages) DO 
    SELECT get_json_array(_messages, _idx_node) INTO _message_id;
    INSERT INTO _show_node SELECT  *, NULL FROM channel WHERE message_id = _message_id;
    SELECT attachment,sys_id FROM channel WHERE message_id = _message_id INTO _attachment,_ref_sys_id;
   
    INSERT INTO  delete_channel (uid,ref_sys_id,ctime)  
    SELECT id ,_ref_sys_id,UNIX_TIMESTAMP()  FROM _list_uid  ON DUPLICATE KEY UPDATE  ctime =UNIX_TIMESTAMP();
    SELECT 0 INTO _cnt;

    SELECT COUNT(1) FROM delete_channel WHERE ref_sys_id = _ref_sys_id INTO _cnt;
    DELETE FROM delete_channel WHERE ref_sys_id = _ref_sys_id AND  _cnt= _memeber_cnt ; 
    DELETE FROM channel WHERE message_id = _message_id AND  _cnt= _memeber_cnt; 


    IF _cnt = _memeber_cnt THEN 

      WHILE _idx_attachment < JSON_LENGTH(_attachment) DO 
        SELECT JSON_QUERY(_attachment, CONCAT("$[", _idx_attachment, "]") ) INTO _node;
        SELECT JSON_VALUE(_node, '$.hub_id') INTO _hub_id;
        SELECT JSON_VALUE(_node, '$.nid') INTO _nid;
        SELECT _idx_attachment + 1 INTO _idx_attachment;

        UPDATE yp.disk_usage SET size = IFNULL(size,0) - 
        (SELECT IFNULL(SUM(filesize),0) FROM  media  WHERE id  =_nid ) 
        WHERE hub_id =_hub_id;
        DELETE FROM  media WHERE id = _nid;
      END WHILE;

      UPDATE _show_node SET delete_attachment = _attachment WHERE message_id = _message_id; 

    END IF;

    SELECT _idx_node + 1 INTO _idx_node;
  END WHILE;

  DROP TABLE IF EXISTS `_last_node`;
  CREATE TEMPORARY TABLE `_last_node` (
      `uid` VARCHAR(16) CHARACTER SET ascii NOT NULL,  
      `entity_id` VARCHAR(16) CHARACTER SET ascii NOT NULL,
      `message`     VARCHAR(100) ,
      `attachment`  longtext,  
      `room_count` INT DEFAULT 0,
      `ctime` int(11)  NULL,
      UNIQUE KEY `id` (`uid`)
  ) ENGINE=InnoDB  DEFAULT CHARSET=utf8mb4 ;

  SELECT  max(sys_id)  FROM  channel c  INTO _max_sys_id; 


  SELECT id  FROM _list_uid WHERE is_checked =0  LIMIT 1 INTO _drumate_id;

    WHILE _drumate_id IS NOT NULL DO

      SELECT NULL INTO _ref_sys_id; 
      SELECT 0 INTO _read_cnt;
      SELECT 0 INTO _read_sys_id;

      SELECT max(ref_sys_id) FROM delete_channel 
      WHERE uid = _drumate_id INTO _max_ref_sys_id;

      SELECT _max_sys_id INTO _ref_sys_id; 

      IF  _max_sys_id =_max_ref_sys_id THEN 

          SELECT max(sys_id) 
            FROM  channel c 
            LEFT JOIN delete_channel dc  
            ON dc.ref_sys_id = sys_id AND uid = _drumate_id
            WHERE  ref_sys_id IS NULL INTO _ref_sys_id;

      END IF;

      SELECT  ref_sys_id FROM read_channel WHERE uid = _drumate_id INTO _read_sys_id; 
      SELECT 
         COUNT(sys_id)
      FROM 
      channel c  WHERE  c.sys_id > _read_sys_id INTO _read_cnt ;

      INSERT INTO _last_node
      SELECT _drumate_id, _hub_id, LEFT(message, 100)  , attachment ,_read_cnt, ctime 
      FROM channel  WHERE sys_id = _ref_sys_id ;

      INSERT INTO _last_node
      SELECT _drumate_id, _hub_id, NULL , NULL ,_read_cnt , NULL  WHERE  _ref_sys_id IS NULL;


      UPDATE _list_uid SET is_checked = 1 WHERE id = _drumate_id ;
      SELECT NULL INTO _drumate_id;
      SELECT id  FROM _list_uid WHERE is_checked =0  LIMIT 1 INTO _drumate_id;
    END WHILE;

  SELECT * FROM _show_node;
  SELECT * FROM _last_node;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `channel_delete_hub_me` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `channel_delete_hub_me`(
  IN _uid VARCHAR(16) CHARACTER SET ascii,
  IN _option VARCHAR(16),
  IN _messages JSON
)
BEGIN
  DECLARE _idx_node INT(4) DEFAULT 0;
  DECLARE _message_id VARCHAR(16) CHARACTER SET ascii; 
  DECLARE _ref_sys_id BIGINT default 0;
  DECLARE _cnt INT ;
  DECLARE _memeber_cnt INT ;
  DECLARE _attachment  JSON;
  DECLARE _node json;
  DECLARE _delete_attachment  JSON;
  DECLARE _idx_attachment INT(4) DEFAULT 0; 
  DECLARE _read_cnt INT ;
  DECLARE _read_sys_id BIGINT default 0; 
  DECLARE _hub_id  VARCHAR(16) CHARACTER SET ascii;
  DECLARE _nid  VARCHAR(16) CHARACTER SET ascii;
  DECLARE _max_sys_id BIGINT;
  DECLARE _max_ref_sys_id BIGINT;
 
  SELECT id FROM yp.entity WHERE db_name=DATABASE() INTO _hub_id;
   DROP TABLE IF EXISTS _show_node;
   CREATE TEMPORARY TABLE _show_node AS SELECT * FROM channel WHERE 1=2;
   ALTER TABLE _show_node ADD `delete_attachment` JSON;

  SELECT count(id)
  FROM permission p 
  INNER JOIN yp.drumate d ON  p.entity_id=d.id 
  WHERE p.resource_id='*' INTO _memeber_cnt;

  WHILE _idx_node < JSON_LENGTH(_messages) DO 
    SELECT get_json_array(_messages, _idx_node) INTO _message_id;
    INSERT INTO _show_node SELECT  *, NULL FROM channel WHERE message_id = _message_id;
    SELECT attachment,sys_id FROM channel WHERE message_id = _message_id INTO _attachment,_ref_sys_id;

     
    INSERT INTO  delete_channel (uid,ref_sys_id,ctime)  
    SELECT _uid ,_ref_sys_id,UNIX_TIMESTAMP() ON DUPLICATE KEY UPDATE  ctime =UNIX_TIMESTAMP(); 
    SELECT 0 INTO _cnt;

    SELECT COUNT(1) FROM delete_channel WHERE ref_sys_id = _ref_sys_id INTO _cnt;
    DELETE FROM delete_channel WHERE ref_sys_id = _ref_sys_id AND  _cnt= _memeber_cnt ; 
    DELETE FROM channel WHERE message_id = _message_id AND  _cnt= _memeber_cnt; 

    IF _cnt = _memeber_cnt THEN 

      WHILE _idx_attachment < JSON_LENGTH(_attachment) DO 
        SELECT JSON_QUERY(_attachment, CONCAT("$[", _idx_attachment, "]") ) INTO _node;
        SELECT JSON_VALUE(_node, '$.hub_id') INTO _hub_id;
        SELECT JSON_VALUE(_node, '$.nid') INTO _nid;
        SELECT _idx_attachment + 1 INTO _idx_attachment;
        UPDATE yp.disk_usage SET size = IFNULL(size,0) - (SELECT IFNULL(SUM(filesize),0) FROM  
        media  WHERE id  =_nid ) WHERE hub_id =_hub_id;

        DELETE FROM  media WHERE id = _nid;
      END WHILE;

     UPDATE _show_node SET delete_attachment = _attachment WHERE message_id = _message_id; 

    END IF;

    SELECT _idx_node + 1 INTO _idx_node;
  END WHILE;


  
    DROP TABLE IF EXISTS `_last_node`;
    CREATE TEMPORARY TABLE `_last_node` (
      `uid` VARCHAR(16) CHARACTER SET ascii NOT NULL,  
      `entity_id` VARCHAR(16) CHARACTER SET ascii NOT NULL,
      `message`     VARCHAR(100) ,
      `attachment`  longtext,  
      `room_count` INT DEFAULT 0,
      `ctime` int(11)  NULL,
      UNIQUE KEY `id` (`uid`)
    ) ENGINE=InnoDB  DEFAULT CHARSET=utf8mb4 ;

    SELECT NULL INTO _ref_sys_id; 
    SELECT 0 INTO _read_cnt;
    SELECT NULL INTO _read_sys_id;


   SELECT  max(sys_id)  FROM  channel c  INTO _max_sys_id; 
   SELECT max(ref_sys_id) FROM delete_channel 
   WHERE uid = _uid INTO _max_ref_sys_id;

  SELECT _max_sys_id INTO _ref_sys_id; 

  IF  _max_sys_id =_max_ref_sys_id THEN 

    SELECT max(sys_id) 
      FROM  channel c 
      LEFT JOIN delete_channel dc  
      ON dc.ref_sys_id = sys_id AND uid = _uid
      WHERE  ref_sys_id IS NULL INTO _ref_sys_id;
    END IF;

    INSERT INTO _last_node
    SELECT _uid, _hub_id, LEFT(message, 100)  , attachment ,_read_cnt, ctime 
    FROM channel  WHERE sys_id = _ref_sys_id ;

    INSERT INTO _last_node
    SELECT _uid, _hub_id, NULL , NULL ,_read_cnt , NULL  WHERE  _ref_sys_id IS NULL;

   
    SELECT * FROM _show_node;
    SELECT * FROM _last_node;


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `check_password` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `check_password`(
  IN _key VARCHAR(128),
  IN _pw VARCHAR(128)
)
BEGIN
  SELECT
    entity.id,
    entity.ident,
    db_name,
    db_host,
    fs_host,
    vhost,
    home_dir,
    type,
    status,
    email,
    lastname,
    mtime,
    ctime,
    fingerprint,
    fullname,
    headline  
  FROM entity JOIN drumate USING(id)
  WHERE fingerprint=sha2(_pw, 512) AND (ident=_key OR id=_key OR email=_key);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `check_password_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `check_password_next`(
  IN _key VARCHAR(128),
  IN _pw VARCHAR(128)
)
BEGIN

  SELECT
    entity.id,
    entity.ident,
    db_name,
    db_host,
    fs_host,
    vhost,
    home_dir,
    type,
    status,
    email,
    firstname,
    lastname,
    area,
    mtime,
    ctime,
    fingerprint,
    fullname
  FROM entity JOIN drumate USING(id)
  WHERE fingerprint=sha2(_pw, 512) AND (ident=_key OR id=_key OR email=_key);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `check_sid` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `check_sid`(
  IN _sid VARCHAR(128),
  IN _ip VARCHAR(80),
  IN _ua VARCHAR(255),
  IN _vhost VARCHAR(512)
)
BEGIN
  DECLARE _ip VARCHAR(80);
  DECLARE _uname VARCHAR(80);
  DECLARE _uid VARCHAR(16);
  DECLARE _host_id VARCHAR(16);
  DECLARE _exp VARCHAR(80);
  DECLARE _domain VARCHAR(256);
  SELECT IFNULL(domain, utils.domain_name()) FROM vhost WHERE fqdn=_vhost INTO _domain;
  SELECT IF((UNIX_TIMESTAMP() - update_time)<= ttl, 'SESSION_OK', 'SESSION_EXPIRED') AS exp,
    user_id, entity.ident, entity.id as host_id, sessions.id
    FROM sessions INNER JOIN entity ON user_id=entity.id 
      WHERE sessions.id=_sid 
      INTO _exp, _uid, _uname, _host_id;
    

    SELECT CASE
       WHEN _uid IS NULL THEN 'SESSION_NOT_FOUND'
       WHEN _uid = 'ffffffffffffffff'  THEN 'SESSION_ANONYMOUS'

       ELSE 'SESSION_OK'
    END AS status, _uid AS uid, _uname AS username, _exp AS expired, 
      _host_id AS host_id, _domain AS domain;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `cleanup_sessions` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `cleanup_sessions`(
  IN session_ttl INT(11)
)
BEGIN

  DELETE FROM sessions  WHERE cast((UNIX_TIMESTAMP() - update_time) as SIGNED) > session_ttl;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `clean_contact_remove` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `clean_contact_remove`()
BEGIN 
   
    DECLARE _domain_id INT(4);
    DECLARE _id VARCHAR(16);
    DECLARE _ident VARBINARY(80);
    DECLARE _type VARCHAR(80);
    DECLARE _db VARCHAR(80);
    DECLARE _home_dir VARCHAR(512);
    DECLARE _src_home_dir VARCHAR(512);
    DECLARE _entity_db VARCHAR(20);
    DECLARE _sys_id INT;
    DECLARE _temp_sys_id INT;
    DECLARE _drumate_id VARCHAR(16);
    DECLARE _drumate_domain_id INT(4);
    DECLARE _drumate_db VARCHAR(100);
    DECLARE _email VARCHAR(1000);
    DECLARE _rid VARCHAR(16) ;


    SELECT  id  
    FROM cleanup_drumate_log  
    WHERE  contact_remove =0 LIMIT 1 INTO  _id;  

    WHILE _id IS NOT NULL  DO
    

      SELECT email FROM drumate WHERE id = _id  INTO _email;  
      SELECT domain_id FROM privilege WHERE uid = _id INTO _domain_id;

      SELECT 0 INTO _sys_id; 
      SELECT sys_id  FROM drumate WHERE sys_id > 0  ORDER BY sys_id ASC LIMIT 1 INTO _sys_id;
        WHILE _sys_id <> 0 DO


              SELECT NULL,NULL,NULL INTO 
              _drumate_id,_drumate_domain_id,_drumate_db;

              SELECT id  FROM  drumate 
              WHERE sys_id = _sys_id INTO _drumate_id; 

              SELECT domain_id FROM privilege WHERE uid = _drumate_id 
              ORDER BY domain_id DESC  LIMIT 1  INTO _drumate_domain_id;

              SELECT db_name FROM entity 
              WHERE status <> 'deleted' AND id = _drumate_id INTO _drumate_db;



          IF ( _drumate_id IS NOT NULL AND
             _drumate_domain_id IS NOT NULL AND 
                _drumate_db IS NOT NULL) THEN
       
            IF (_drumate_domain_id = _domain_id   AND   _domain_id <> 1  AND _drumate_domain_id <> 1  ) THEN   
              SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact_email WHERE contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _id,_id,_email,_email;
              DEALLOCATE PREPARE stamt;

              SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =?');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _id,_id,_email,_email;
              DEALLOCATE PREPARE stamt; 
            END IF ;
          

            IF (_drumate_domain_id <> _domain_id) THEN    


              SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact WHERE (uid =? or entity = ? or uid = ? or entity =?) AND status="received"');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _id,_id,_email,_email;
              DEALLOCATE PREPARE stamt; 

              SET @st = CONCAT('UPDATE ', _drumate_db ,'.contact_email SET  is_default = 0 WHERE   is_default = 1 AND contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _id,_id,_email,_email;
              DEALLOCATE PREPARE stamt;


              SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact_email WHERE  email =? AND contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _email,_id,_id,_email,_email;
              DEALLOCATE PREPARE stamt;


              SET @st = CONCAT('INSERT INTO ', _drumate_db ,'.contact_email (id,email,category,ctime,mtime ,contact_id ,is_default )
              SELECT  yp.uniqueId(),?,"priv",UNIX_TIMESTAMP(),UNIX_TIMESTAMP(),id,1 FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? 
              ON DUPLICATE KEY UPDATE is_default =1');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _email,_id,_id,_email,_email;
              DEALLOCATE PREPARE stamt;


              SET @st = CONCAT('UPDATE ', _drumate_db ,'.contact SET category ="independant", metadata = JSON_OBJECT("source",? ), status="memory", uid = null, entity=? WHERE uid =? or entity =? or uid = ? or entity =?');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING  _email,_email,_id,_id,_email,_email;
              DEALLOCATE PREPARE stamt; 
            END IF;  



            IF (_drumate_domain_id =1  and _domain_id =1 )  THEN    


              SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact WHERE (uid =? or entity = ? or uid = ? or entity =?) AND status="received"');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _id,_id,_email,_email;
              DEALLOCATE PREPARE stamt; 

              SET @st = CONCAT('UPDATE ', _drumate_db ,'.contact_email SET  is_default = 0 WHERE   is_default = 1 AND contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _id,_id,_email,_email;
              DEALLOCATE PREPARE stamt;


              SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact_email WHERE  email =? AND contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _email,_id,_id,_email,_email;
              DEALLOCATE PREPARE stamt;


              SET @st = CONCAT('INSERT INTO ', _drumate_db ,'.contact_email (id,email,category,ctime,mtime ,contact_id ,is_default )
              SELECT  yp.uniqueId(),?,"priv",UNIX_TIMESTAMP(),UNIX_TIMESTAMP(),id,1 FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? 
              ON DUPLICATE KEY UPDATE is_default =1');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _email,_id,_id,_email,_email;
              DEALLOCATE PREPARE stamt;


              SET @st = CONCAT('UPDATE ', _drumate_db ,'.contact SET category ="independant", metadata = JSON_OBJECT("source",? ), status="memory", uid = null, entity=? WHERE uid =? or entity =? or uid = ? or entity =?');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING  _email,_email,_id,_id,_email,_email;
              DEALLOCATE PREPARE stamt; 
            END IF;  
          END IF;


              SELECT _sys_id INTO  _temp_sys_id ;  
              SELECT 0 INTO  _sys_id ; 
              SELECT IFNULL(sys_id,0)  
              FROM drumate WHERE sys_id >_temp_sys_id 
              ORDER BY sys_id ASC  LIMIT 1 INTO _sys_id;

        END WHILE;



    UPDATE cleanup_drumate_log SET contact_remove = 1 
    WHERE id =_id;
    SELECT NULL INTO _id;
    SELECT  id  
    FROM cleanup_drumate_log  
    WHERE  contact_remove =0 LIMIT 1 INTO  _id; 
   END WHILE;
  

  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `clean_drumate_contact_remove` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `clean_drumate_contact_remove`()
BEGIN 
   
    DECLARE _domain_id INT(4);
    DECLARE _id VARCHAR(16);
    DECLARE _ident VARBINARY(80);
    DECLARE _type VARCHAR(80);
    DECLARE _db VARCHAR(80);
    DECLARE _home_dir VARCHAR(512);
    DECLARE _src_home_dir VARCHAR(512);
    DECLARE _entity_db VARCHAR(20);
    DECLARE _sys_id INT;
    DECLARE _temp_sys_id INT;
    DECLARE _drumate_id VARCHAR(16);
    DECLARE _drumate_domain_id INT(4);
    DECLARE _drumate_db VARCHAR(100);
    DECLARE _email VARCHAR(1000);
    DECLARE _rid VARCHAR(16) ;


    SELECT  id  
    FROM cleanup_drumate_log  
    WHERE  contact_remove =0 LIMIT 1 INTO  _id;  

    WHILE _id IS NOT NULL  DO
    

      SELECT email FROM drumate WHERE id = _id  INTO _email;  
      SELECT domain_id FROM privilege WHERE uid = _id INTO _domain_id;

      SELECT 0 INTO _sys_id; 
      SELECT sys_id  FROM drumate WHERE sys_id > 0  ORDER BY sys_id ASC LIMIT 1 INTO _sys_id;
        WHILE _sys_id <> 0 DO


              SELECT NULL,NULL,NULL INTO 
              _drumate_id,_drumate_domain_id,_drumate_db;

              SELECT id  FROM  drumate 
              WHERE sys_id = _sys_id INTO _drumate_id; 

              SELECT domain_id FROM privilege WHERE uid = _drumate_id 
              ORDER BY domain_id DESC  LIMIT 1  INTO _drumate_domain_id;

              SELECT db_name FROM entity 
              WHERE status <> 'deleted' AND id = _drumate_id INTO _drumate_db;



          IF ( _drumate_id IS NOT NULL AND
             _drumate_domain_id IS NOT NULL AND 
                _drumate_db IS NOT NULL) THEN
       
            IF (_drumate_domain_id = _domain_id   AND   _domain_id <> 1  AND _drumate_domain_id <> 1  ) THEN   
              SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact_email WHERE contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _id,_id,_email,_email;
              DEALLOCATE PREPARE stamt;

              SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =?');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _id,_id,_email,_email;
              DEALLOCATE PREPARE stamt; 
            END IF ;
          

            IF (_drumate_domain_id <> _domain_id) THEN    


              SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact WHERE (uid =? or entity = ? or uid = ? or entity =?) AND status="received"');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _id,_id,_email,_email;
              DEALLOCATE PREPARE stamt; 

              SET @st = CONCAT('UPDATE ', _drumate_db ,'.contact_email SET  is_default = 0 WHERE   is_default = 1 AND contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _id,_id,_email,_email;
              DEALLOCATE PREPARE stamt;


              SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact_email WHERE  email =? AND contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _email,_id,_id,_email,_email;
              DEALLOCATE PREPARE stamt;


              SET @st = CONCAT('INSERT INTO ', _drumate_db ,'.contact_email (id,email,category,ctime,mtime ,contact_id ,is_default )
              SELECT  yp.uniqueId(),?,"priv",UNIX_TIMESTAMP(),UNIX_TIMESTAMP(),id,1 FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? 
              ON DUPLICATE KEY UPDATE is_default =1');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _email,_id,_id,_email,_email;
              DEALLOCATE PREPARE stamt;


              SET @st = CONCAT('UPDATE ', _drumate_db ,'.contact SET category ="independant", metadata = JSON_OBJECT("source",? ), status="memory", uid = null, entity=? WHERE uid =? or entity =? or uid = ? or entity =?');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING  _email,_email,_id,_id,_email,_email;
              DEALLOCATE PREPARE stamt; 
            END IF;  



            IF (_drumate_domain_id =1  and _domain_id =1 )  THEN    


              SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact WHERE (uid =? or entity = ? or uid = ? or entity =?) AND status="received"');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _id,_id,_email,_email;
              DEALLOCATE PREPARE stamt; 

              SET @st = CONCAT('UPDATE ', _drumate_db ,'.contact_email SET  is_default = 0 WHERE   is_default = 1 AND contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _id,_id,_email,_email;
              DEALLOCATE PREPARE stamt;


              SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact_email WHERE  email =? AND contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _email,_id,_id,_email,_email;
              DEALLOCATE PREPARE stamt;


              SET @st = CONCAT('INSERT INTO ', _drumate_db ,'.contact_email (id,email,category,ctime,mtime ,contact_id ,is_default )
              SELECT  yp.uniqueId(),?,"priv",UNIX_TIMESTAMP(),UNIX_TIMESTAMP(),id,1 FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? 
              ON DUPLICATE KEY UPDATE is_default =1');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING _email,_id,_id,_email,_email;
              DEALLOCATE PREPARE stamt;


              SET @st = CONCAT('UPDATE ', _drumate_db ,'.contact SET category ="independant", metadata = JSON_OBJECT("source",? ), status="memory", uid = null, entity=? WHERE uid =? or entity =? or uid = ? or entity =?');
              PREPARE stamt FROM @st;
              EXECUTE stamt USING  _email,_email,_id,_id,_email,_email;
              DEALLOCATE PREPARE stamt; 
            END IF;  
          END IF;


              SELECT _sys_id INTO  _temp_sys_id ;  
              SELECT 0 INTO  _sys_id ; 
              SELECT IFNULL(sys_id,0)  
              FROM drumate WHERE sys_id >_temp_sys_id 
              ORDER BY sys_id ASC  LIMIT 1 INTO _sys_id;

        END WHILE;



    UPDATE cleanup_drumate_log SET contact_remove = 1 
    WHERE id =_id;
    SELECT NULL INTO _id;
    SELECT  id  
    FROM cleanup_drumate_log  
    WHERE  contact_remove =0 LIMIT 1 INTO  _id; 
   END WHILE;
  

  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `clean_drumate_leave_non_owner_hub` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `clean_drumate_leave_non_owner_hub`()
BEGIN 
  DECLARE _id VARCHAR(16);
   DECLARE _db VARCHAR(100);
  DECLARE _temp_sys_id INT;
  DECLARE _sys_id INT;
  DECLARE _drumate_db VARCHAR(100);
  DECLARE _drumate_id VARCHAR(16);
  DECLARE _idx INT(4) DEFAULT 0; 

  SELECT  id ,db_name  
  FROM cleanup_drumate_log  
  WHERE leave_hub =0 LIMIT 1 INTO  _id ,_db;  

  WHILE _id IS NOT NULL  DO


      SELECT NULL INTO @tempJson;

      SET @sql = CONCAT(
      "SELECT  JSON_ARRAYAGG(JSON_OBJECT( 'hub_id' ,h.id ,'owner_id', h.owner_id  , 'name' , h.name , 'db_name', db_name))
      FROM  ", _db, ". media  m
      INNER JOIN yp.entity e ON e.id = m.id
      INNER  JOIN yp.hub h  ON h.id = m.id  AND h.owner_id <> ", quote(_id) ," INTO @tempJson;"
      );
      PREPARE hub_stmt FROM @sql;
      EXECUTE hub_stmt;
      DEALLOCATE PREPARE hub_stmt;


  WHILE _idx < JSON_LENGTH(@tempJson) DO 
      SELECT get_json_array(@tempJson, _idx) INTO @_node;
      SELECT get_json_object(@_node, "hub_id") INTO   @hub_id;
      SET @st = CONCAT("CALL  ", _db, ".leave_hub(@hub_id)");
      PREPARE stmt3 FROM @st;
      EXECUTE stmt3 ;
      DEALLOCATE PREPARE stmt3;

    SELECT _idx + 1 INTO _idx;

  END WHILE; 


    SELECT 0 INTO _idx;

    UPDATE cleanup_drumate_log SET leave_hub = 1 
    WHERE id =_id;
    SELECT NULL , NULL INTO _id ,_db ;
    SELECT  id  ,db_name
    FROM cleanup_drumate_log  
    WHERE  leave_hub =0 LIMIT 1 INTO  _id , _db; 
  END WHILE;
 

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `clean_frozen_entities` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `clean_frozen_entities`()
BEGIN
  DECLARE _ts INT(11);
  DECLARE EXIT HANDLER FOR SQLEXCEPTION, SQLWARNING
  BEGIN
    ROLLBACK;
    SELECT 1 AS error;
  END;
  SELECT UNIX_TIMESTAMP() INTO _ts;
  CREATE TEMPORARY TABLE frozen_entity SELECT id, ident, fs_host, home_dir, db_name, type FROM entity WHERE status = 'frozen' AND UNIX_TIMESTAMP(TIMESTAMPADD(DAY,90, FROM_UNIXTIME(frozen_time))) < _ts;
  START TRANSACTION;
    DELETE FROM mailserver.users WHERE username in (SELECT ident FROM frozen_entity);
    DELETE FROM vhost WHERE id IN (SELECT id FROM frozen_entity);
    DELETE FROM drumate WHERE id IN (SELECT id FROM frozen_entity);
    DELETE FROM hub WHERE id IN (SELECT id FROM frozen_entity);
    DELETE FROM entity WHERE id IN (SELECT id FROM frozen_entity);
  COMMIT;
  SELECT 0 AS error, id, ident, fs_host, home_dir, db_name, type FROM frozen_entity;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `clean_hub_members_remove` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `clean_hub_members_remove`()
BEGIN 
  DECLARE _hub_id VARCHAR(16);
  DECLARE _sys_id INT;
  DECLARE _temp_sys_id INT;
  DECLARE _hub_db VARCHAR(100);
  DECLARE _owner_id   VARCHAR(16);


  SELECT 0 INTO _sys_id; 

  SELECT sys_id ,id ,owner_id FROM cleanup_hub_log
  WHERE sys_id > 0  AND 
  remove_members  = 0 
  ORDER BY sys_id ASC LIMIT 1 INTO _sys_id ,_hub_id , _owner_id;

  WHILE _sys_id <> 0 DO
  
     SELECT db_name 
      FROM yp.entity  
      WHERE id = _hub_id 
      INTO _hub_db; 
 

    IF _hub_db is NOT NULL THEN

      SET @sql = CONCAT(
        "CALL  ", _hub_db, ".remove_all_members (", quote(_owner_id), ")" );
      PREPARE hub_stmt FROM @sql;
      EXECUTE hub_stmt;
      DEALLOCATE PREPARE hub_stmt;
    END IF; 


      UPDATE cleanup_hub_log 
      SET remove_members = 1 
      WHERE sys_id =_sys_id;

      SELECT _sys_id INTO  _temp_sys_id ;  

      SELECT 0 , NULL,NULL INTO  _sys_id,_hub_id,_owner_id  ; 

      SELECT sys_id ,id, owner_id FROM cleanup_hub_log
      WHERE sys_id > _temp_sys_id  AND 
      remove_members  = 0 
      ORDER BY sys_id ASC LIMIT 1 INTO _sys_id ,_hub_id, _owner_id;

  END WHILE;   

   

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `clean_up_hub_log` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `clean_up_hub_log`()
BEGIN 
  DECLARE _hub_id VARCHAR(16);
  DECLARE _sys_id INT;
  DECLARE _temp_sys_id INT;
  DECLARE _hub_db VARCHAR(100);
  DECLARE _owner_id   VARCHAR(16);


  SELECT 0 INTO _sys_id; 

  SELECT sys_id ,id ,owner_id FROM cleanup_hub_log
  WHERE sys_id > 0  AND 
  remove_members  = 0 
  ORDER BY sys_id ASC LIMIT 1 INTO _sys_id ,_hub_id , _owner_id;

  WHILE _sys_id <> 0 DO
  
     SELECT db_name 
      FROM yp.entity  
      WHERE id = _hub_id 
      INTO _hub_db; 
 

    IF _hub_db is NOT NULL THEN

      SET @sql = CONCAT(
        "CALL  ", _hub_db, ".remove_all_members (", quote(_owner_id), ")" );
      PREPARE hub_stmt FROM @sql;
      EXECUTE hub_stmt;
      DEALLOCATE PREPARE hub_stmt;
    END IF; 


      UPDATE cleanup_hub_log 
      SET remove_members = 1 
      WHERE sys_id =_sys_id;

      SELECT _sys_id INTO  _temp_sys_id ;  

      SELECT 0 , NULL,NULL INTO  _sys_id,_hub_id,_owner_id  ; 

      SELECT sys_id ,id, owner_id FROM cleanup_hub_log
      WHERE sys_id > _temp_sys_id  AND 
      remove_members  = 0 
      ORDER BY sys_id ASC LIMIT 1 INTO _sys_id ,_hub_id, _owner_id;

  END WHILE;   

   

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `common_hubs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `common_hubs`(
   IN _usr1 VARBINARY(80),
   IN _usr2 VARBINARY(80)
)
BEGIN
  DECLARE _db1 varchar(255);
  DECLARE _db2 varchar(255);
  DECLARE _ident VARBINARY(80);

  SELECT db_name from yp.entity where ident=_usr1 OR id=_usr1 INTO _db1;
  SELECT db_name from yp.entity where ident=_usr2 OR id=_usr2 INTO _db2;

  SET @s1 = CONCAT("SELECT entity.id, area from entity inner join (`", _db1, "`.sites, `", _db2, "`.sites) on (`", _db1, "`.sites.id=`", _db2, "`.sites.id and entity.id=`", _db2, "`.sites.id)");

  PREPARE stmt1 FROM @s1;
  EXECUTE stmt1;
  DEALLOCATE PREPARE stmt1;

  SELECT @s1;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `conference_attendee` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `conference_attendee`(
  IN _id VARCHAR(16) CHARACTER SET ascii)
BEGIN
  SELECT 
    u.room_id,
    hub_id,
    participant_id,
    coalesce(u.uid, c.uid, 'default') `uid`,
    audio, 
    video, 
    screen, 
    area,
    permission,
    `role`, 
    IFNULL(CASE 
      WHEN u.type = 'connect' THEN JSON_VALUE(JSON_VALUE(profile, "$.quota"), "$.contact_call")
      WHEN u.type = 'meeting' AND area = 'private' THEN JSON_VALUE(JSON_VALUE(profile, "$.quota"), "$.team_call")
      WHEN u.type = 'meeting' AND area = 'dmz' THEN JSON_VALUE(JSON_VALUE(profile, "$.quota"), "$.meeting_call")
      ELSE 0
    END, 0) quota,
    coalesce(guest_name, u.firstname, d.firstname) firstname, 
    coalesce(guest_name, u.firstname, d.firstname) username, 
    coalesce(u.lastname, d.lastname, '') lastname,
    s.id socket_id,
    s.server
    FROM yp.conference u 
      INNER JOIN yp.socket s ON u.socket_id=s.id 
      INNER JOIN yp.cookie c ON s.cookie=c.id
      LEFT JOIN yp.drumate d on c.uid=d.id
    WHERE u.participant_id =_id AND s.state='active' AND u.participant_id IS NOT NULL;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `conference_attendees` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `conference_attendees`(
  IN _id VARCHAR(16) CHARACTER SET ascii
)
BEGIN
   
  SELECT u.id, metadata, s.id socket_id, coalesce(guest_name, firstname) username, attendee_id
    FROM conference u 
    INNER JOIN socket s ON u.uid=s.id 
    INNER JOIN cookie c ON s.cookie=c.id
    LEFT JOIN drumate d on c.uid=d.id
  WHERE u.id =_id AND s.state='active'; 

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `conference_cancel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `conference_cancel`(
  IN _room_id VARCHAR(64),
  IN _socket_id VARCHAR(64)
)
BEGIN
  DECLARE _owner_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _hub_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _db_name VARCHAR(128) DEFAULT NULL;  

  SELECT hub_id FROM conference WHERE room_id = _room_id AND socket_id = _socket_id INTO _hub_id;
  DELETE FROM conference WHERE room_id = _room_id AND socket_id = _socket_id;

  SELECT db_name, owner_id FROM entity e INNER JOIN hub h USING(id) WHERE id=_hub_id INTO _db_name, _owner_id;
  IF _db_name IS NOT NULL AND _owner_id IS NOT NULL THEN 
    SET @s = CONCAT("SELECT s.id socket_id, s.server, p.entity_id, ", QUOTE(_room_id), "room_id ",
      "FROM yp.socket s INNER JOIN ",  
      _db_name,
      ".permission p ON s.uid=p.entity_id WHERE s.state='active' AND p.resource_id=", 
      QUOTE(_room_id)
    );
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;

    SET @s = CONCAT("DELETE FROM ", _db_name, ".permission WHERE resource_id=", 
      QUOTE(_room_id), " AND JSON_VALUE(message, '$.owner_id')=", QUOTE(_owner_id)
    ); 
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;

 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `conference_check_participant` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `conference_check_participant`(
  IN _id VARCHAR(16) CHARACTER SET ascii
)
BEGIN

  SELECT 
    is_mic_enabled, 
    is_video_enabled, 
    is_share_enabled, 
    is_write_enabled, 
    attendee_id,
    attendee_id stream_id,
    c.uid,
    is_mic_enabled audio, 
    is_video_enabled video, 
    is_share_enabled screen, 
    is_write_enabled `write`, 
    e.area,
    coalesce(guest_name, firstname) firstname, 
    coalesce(guest_name, firstname) username, 
    coalesce(lastname, '') lastname,
    s.id socket_id,
    s.server
    FROM conference u 
      INNER JOIN socket s ON u.uid=s.id 
      INNER JOIN room r ON r.id=u.id
      INNER JOIN entity e ON r.hub_id=e.id
      INNER JOIN cookie c ON s.cookie=c.id
      LEFT JOIN drumate d on c.uid=d.id
    WHERE json_value(u.metadata, "$.participant_id") =_id AND s.state='active' LIMIT 1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `conference_get_caller` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `conference_get_caller`(
  IN _arg JSON
)
BEGIN
  DECLARE _caller_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _callee_id VARCHAR(128) DEFAULT NULL;  
  DECLARE _hub_id VARCHAR(128) DEFAULT NULL;  
  DECLARE _username VARCHAR(128) DEFAULT NULL;  
  DECLARE _firstname VARCHAR(128) DEFAULT NULL;  
  DECLARE _caller_db VARCHAR(128) DEFAULT NULL;  

  SELECT JSON_VALUE(_arg, "$.callee_id") INTO _callee_id;
  SELECT JSON_VALUE(_arg, "$.caller_id") INTO _caller_id;

  SELECT e.db_name, h.id FROM yp.hub h INNER JOIN yp.entity e on e.id=h.id 
    WHERE h.owner_id=_caller_id AND `serial`=0 INTO _caller_db, _hub_id;

  
  SELECT fullname, firstname FROM drumate WHERE id=_caller_id INTO _username, _firstname;


  SET @message = NULL;
  IF _caller_db IS NOT NULL THEN 
    
    SET @s = CONCAT("SELECT message, resource_id FROM ", _caller_db, ".permission WHERE ", 
      "expiry_time > UNIX_TIMESTAMP() AND JSON_VALUE(message, '$.type')='rendez-vous' ",
      "AND JSON_VALUE(message, '$.owner_id')=", QUOTE(_caller_id), " AND entity_id=", QUOTE(_callee_id),
      " ORDER BY ctime DESC LIMIT 1 INTO @message, @room_id"
    );
    
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
    
    IF @message IS NOT NULL AND @room_id IS NOT NULL THEN 
      SELECT 
        _hub_id hub_id,
        @room_id room_id,
        @room_id nid,
        _username username,
        _username display,
        _firstname firstname,
        _caller_id `uid`,
        _caller_id drumate_id,
        _caller_id entity_id;
    ELSE 
      SELECT NULL room_id;
    END IF;
  ELSE 
    SELECT NULL room_id;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `conference_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `conference_info`(
  IN _id VARCHAR(16) CHARACTER SET ascii,
  IN _uid VARCHAR(30) CHARACTER SET ascii
)
BEGIN

  SELECT 
    u.id,
    is_mic_enabled, 
    is_video_enabled, 
    is_share_enabled, 
    is_write_enabled, 
    attendee_id,
    attendee_id stream_id,
    c.uid,
    is_mic_enabled audio, 
    is_video_enabled video, 
    is_share_enabled screen, 
    is_write_enabled `write`, 
    e.area,
    coalesce(guest_name, firstname) firstname, 
    coalesce(guest_name, firstname) username, 
    coalesce(lastname, '') lastname,
    s.id socket_id,
    s.server
    FROM conference u 
      INNER JOIN socket s ON u.uid=s.id 
      INNER JOIN room r ON r.id=u.id
      INNER JOIN entity e ON r.hub_id=e.id
      INNER JOIN cookie c ON s.cookie=c.id
      LEFT JOIN drumate d on c.uid=d.id
    WHERE u.id =_id AND s.state='active' AND u.uid = IFNULL(_uid , u.uid);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `conference_invite` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `conference_invite`(
  IN _arg JSON
)
BEGIN
  DECLARE _owner_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _db_name VARCHAR(128) DEFAULT NULL;  
  DECLARE _username VARCHAR(128) DEFAULT NULL;  
  DECLARE _firstname VARCHAR(128) DEFAULT NULL;  
  DECLARE _sockets TINYINT(4) DEFAULT 0;

  SELECT COUNT(*) FROM socket WHERE `uid`=JSON_VALUE(_arg, "$.guest_id") AND `state` = 'active' INTO _sockets;
  IF _sockets = 0 THEN 
    SELECT 1 `offline`;
  ELSE
    SELECT db_name, owner_id FROM entity e INNER JOIN hub h USING(id) 
      WHERE id=JSON_EXTRACT(_arg, "$.hub_id") INTO _db_name, _owner_id;
    SELECT fullname, firstname FROM drumate WHERE id = _owner_id INTO _username, _firstname;

    SELECT JSON_MERGE_PATCH(_arg, JSON_OBJECT(
      'room_id', IFNULL(JSON_VALUE(_arg, "$.room_id"), uniqueId()), 
      'owner_id', _owner_id,
      'type', 'rendez-vous'
    )) INTO @metadata;

    IF _db_name IS NOT NULL AND _owner_id IS NOT NULL THEN 
      SET @s = CONCAT("DELETE FROM ", _db_name, ".permission WHERE ", 
      "expiry_time >0 AND expiry_time < UNIX_TIMESTAMP() AND JSON_VALUE(message, '$.type')='rendez-vous'"
      );
      PREPARE stmt FROM @s;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt;

      SET @s = CONCAT("CALL ", _db_name, ".permission_grant(", 
        JSON_EXTRACT(@metadata, "$.room_id"), ",",
        JSON_EXTRACT(@metadata, "$.guest_id"), ",",
        24, ",",
        3, ",",
        QUOTE('no_traversal'), ",",
        QUOTE(@metadata), ")"
      );
      PREPARE stmt FROM @s;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt;
    END IF;
    SELECT 
      JSON_VALUE(@metadata, "$.room_id") room_id,
      _owner_id `uid`,
      _username username,
      _username display,
      _owner_id drumate_id,
      _owner_id entity_id,
      _firstname firstname,
      id socket_id,
      `server`
      FROM socket WHERE `uid`=JSON_VALUE(@metadata, "$.guest_id") AND `state` = 'active';
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `conference_join` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `conference_join`(
  IN _args JSON,
  IN _metadata JSON 
)
BEGIN
  DECLARE _hub_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _socket_id VARCHAR(64) CHARACTER SET ascii;
  DECLARE _room_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _owner_id VARCHAR(16) CHARACTER SET ascii DEFAULT NULL;
  DECLARE _uid VARCHAR(16) CHARACTER SET ascii DEFAULT NULL;
  DECLARE _status VARCHAR(16) CHARACTER SET ascii DEFAULT 'waiting';
  DECLARE _org_perm TINYINT(4) DEFAULT 0b0010000;
  DECLARE _role VARCHAR(128) DEFAULT 'attendee';  
  DECLARE _area VARCHAR(128) DEFAULT NULL;  
  DECLARE _db_name VARCHAR(128) DEFAULT NULL;  

  SELECT JSON_VALUE(_args, "$.hub_id") INTO _hub_id;
  SELECT JSON_VALUE(_args, "$.socket_id") INTO _socket_id;
  SELECT JSON_VALUE(_args, "$.room_id") INTO _room_id;

  SELECT area, db_name FROM yp.entity WHERE id=_hub_id INTO _area, _db_name;

  IF _room_id IS NULL THEN 
    SELECT c.room_id FROM yp.conference c INNER JOIN yp.socket s ON s.id=c.socket_id 
      WHERE hub_id=_hub_id AND `type` = JSON_VALUE(_metadata, "$.type") AND s.state='active'
      ORDER BY s.ctime DESC LIMIT 1 INTO _room_id;
  ELSE 
    SELECT JSON_MERGE_PATCH(metadata, _metadata) FROM conference
      WHERE room_id = _room_id AND `socket_id` = _socket_id INTO _metadata;
  END IF;

  SELECT IFNULL(_room_id, uniqueId()) INTO _room_id;

  SELECT `uid` FROM yp.socket WHERE id=_socket_id AND `state`='active' LIMIT 1 INTO _uid;

  SET @privilege = 0;
  IF _db_name IS NOT NULL THEN 
    SET @s = CONCAT("SELECT ", 
      _db_name, ".user_permission(", QUOTE(_uid), ", ", QUOTE(_room_id), ") INTO @privilege"
    );
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;


  IF _db_name IS NULL OR @privilege = 0 THEN 
    SELECT 0 permission;
  ELSE  
    IF _area IN('personal', 'private') THEN
      SET @status = 'started'; 
      
      SELECT IF(count(*)=0, 'host', 'attendee') FROM yp.conference c INNER JOIN yp.socket s ON s.id= c.socket_id
        WHERE hub_id=_hub_id AND `type` = JSON_VALUE(_metadata, "$.type") AND `state` = 'active' INTO _role;
    ELSE 
      
      SET @status = 'waiting'; 
      SET @s = CONCAT ("SELECT IF(owner_id=", quote(_uid), ", 'started', 'waiting') FROM ", _db_name, 
        ".media WHERE id = ", quote(_room_id), " INTO @status");
      PREPARE stmt FROM @s;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt;

      
      IF @status = 'waiting' THEN 
        SET @s = CONCAT("SELECT IF(JSON_VALUE(`message`, '$.owner_id')=", QUOTE(_uid), 
          ", 'started', 'waiting') FROM ", _db_name, ".permission WHERE resource_id=", 
          QUOTE(_room_id), " LIMIT 1 INTO @status");
        PREPARE stmt FROM @s;
        EXECUTE stmt;
        DEALLOCATE PREPARE stmt;
      END IF;

      SELECT COUNT(*) FROM conference u INNER JOIN yp.socket s ON u.socket_id=s.id 
        WHERE u.room_id =_room_id AND s.state='active' AND `role`='host' INTO @alreadyStarted; 

      SELECT IF(count(*)=0, 'host', 'attendee') FROM yp.conference c INNER JOIN yp.socket s ON s.id= c.socket_id
        WHERE hub_id=_hub_id AND `type` = JSON_VALUE(_metadata, "$.type") AND `state` = 'active' INTO _role;

      IF @alreadyStarted THEN
        SELECT 'attendee', 'started' INTO _role, @status;
      ELSE
        SELECT IF(@status = 'started', 'host', 'attendee') INTO _role;
      END IF;
    END IF;

    SELECT JSON_MERGE_PATCH(_metadata, JSON_OBJECT(
      'role', _role, 
      'permission', @privilege,
      'area', _area
      )) INTO _metadata;
    REPLACE INTO yp.conference (room_id, socket_id, privilege, hub_id, metadata) 
      VALUES(_room_id ,_socket_id, @privilege, _hub_id, _metadata);
    
    SELECT 
      u.room_id,
      _hub_id hub_id,
      participant_id,
      participant_id attendee_id,
      coalesce(u.uid, c.uid, 'default') `uid`,
      audio, 
      video, 
      screen, 
      area,
      @status `status`,
      permission,
      `role`, 
      IFNULL(CASE 
        WHEN u.type = 'connect' THEN JSON_VALUE(quota, "$.contact_call")
        WHEN u.type = 'meeting' AND area = 'private' THEN JSON_VALUE(quota, "$.team_call")
        WHEN u.type = 'meeting' AND area = 'dmz' THEN JSON_VALUE(quota, "$.meeting_call")
        ELSE 0
      END, 0) quota,
      coalesce(guest_name, u.firstname, d.firstname) firstname, 
      coalesce(guest_name, u.firstname, d.firstname) username, 
      coalesce(u.lastname, d.lastname, '') lastname,
      s.id socket_id,
      s.server
      FROM yp.conference u 
        INNER JOIN yp.socket s ON u.socket_id=s.id 
        INNER JOIN yp.cookie c ON s.cookie=c.id
        LEFT JOIN yp.drumate d on c.uid=d.id
      WHERE u.room_id =_room_id AND hub_id=_hub_id AND s.state='active';
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `conference_leave` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `conference_leave`(
  IN _room_id VARCHAR(64),
  IN _socket_id VARCHAR(64)
)
BEGIN
    DECLARE _owner_id VARCHAR(16) CHARACTER SET ascii;
    DECLARE _hub_id VARCHAR(16) CHARACTER SET ascii;
    DECLARE _db_name VARCHAR(128) DEFAULT NULL;  

    SELECT hub_id FROM conference WHERE room_id = _room_id AND socket_id = _socket_id INTO _hub_id;
    DELETE FROM conference WHERE room_id = _room_id AND socket_id = _socket_id;

    SELECT db_name, owner_id FROM entity e INNER JOIN hub h USING(id) WHERE id=_hub_id INTO _db_name, _owner_id;
    IF _db_name IS NOT NULL AND _owner_id IS NOT NULL THEN 
      SET @s = CONCAT("DELETE FROM ", _db_name, ".permission WHERE resource_id=", 
      QUOTE(_room_id), " AND JSON_VALUE(message, '$.owner_id')=", QUOTE(_owner_id)); 
      PREPARE stmt FROM @s;
      EXECUTE stmt;
      DEALLOCATE PREPARE stmt;
    END IF;

    SELECT 
      u.room_id,
      participant_id,
      participant_id attendee_id,
      c.uid,
      audio, 
      video, 
      screen, 
      permission,
      `role`, 
      s.id socket_id,
      s.server
      FROM yp.conference u 
        INNER JOIN yp.socket s ON u.socket_id=s.id 
        INNER JOIN yp.cookie c ON s.cookie=c.id
      WHERE u.room_id =_room_id AND s.state='active';

 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `conference_pending_call` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `conference_pending_call`(
  IN _arg JSON
)
BEGIN
  DECLARE _caller_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _callee_id VARCHAR(128) DEFAULT NULL;  
  DECLARE _hub_id VARCHAR(128) DEFAULT NULL;  
  DECLARE _username VARCHAR(128) DEFAULT NULL;  
  DECLARE _firstname VARCHAR(128) DEFAULT NULL;  
  DECLARE _callee_db VARCHAR(128) DEFAULT NULL;  

  SELECT JSON_VALUE(_arg, "$.callee_id") INTO _callee_id;
  SELECT JSON_VALUE(_arg, "$.caller_id") INTO _caller_id;

  SELECT 
    ctime, 
    UNIX_TIMESTAMP() `timestamp`, 
    JSON_VALUE(args, "$.guest_id") calle_id, 
    hub_id, 
    `uid`,
    1 cross_call
    FROM services_log WHERE `name`='conference.invite' AND (ctime + 10) > UNIX_TIMESTAMP() 
    AND JSON_VALUE(args, "$.guest_id")=_caller_id ORDER BY ctime DESC LIMIT 1;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `conference_revoke` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `conference_revoke`(
  IN _hub_id VARCHAR(64) CHARACTER SET ascii,
  IN _room_id VARCHAR(64)  CHARACTER SET ascii,
  IN _guest_id VARCHAR(64)  CHARACTER SET ascii
)
BEGIN
  DECLARE _owner_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _db_name VARCHAR(128) DEFAULT NULL;  
  DECLARE _username VARCHAR(128) DEFAULT NULL;  
  DECLARE _firstname VARCHAR(128) DEFAULT NULL;  

  DELETE FROM conference WHERE room_id = _room_id AND `uid` = _guest_id;

  SELECT db_name, owner_id FROM entity e INNER JOIN hub h USING(id) WHERE id=_hub_id INTO _db_name, _owner_id;
  IF _db_name IS NOT NULL AND _owner_id IS NOT NULL THEN 
    SELECT fullname, firstname FROM drumate WHERE id = _owner_id INTO _username, _firstname;
    SET @s = CONCAT("CALL ", _db_name, ".permission_revoke(", 
      QUOTE(_room_id), ", ", QUOTE(_guest_id), ")"
    ); 
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;

    SELECT 
      _room_id room_id,
      _owner_id `uid`,
      _username username,
      _username display,
      _owner_id drumate_id,
      _owner_id entity_id,
      _firstname firstname,
      id socket_id,
      `server`
      FROM socket WHERE `uid`=_guest_id AND  `state` = 'active';

  END IF;

 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `conference_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `conference_update`(
  IN _room_id VARCHAR(16) CHARACTER SET ascii,
  IN _socket_id VARCHAR(30) CHARACTER SET ascii,
  IN _metadata json 
)
BEGIN
  SELECT metadata FROM conference WHERE room_id = _room_id AND `socket_id` = _socket_id INTO @metadata;
  UPDATE conference SET metadata = JSON_MERGE_PATCH(metadata, @metadata, _metadata) 
    WHERE room_id = _room_id AND socket_id =_socket_id;
  SELECT 
    u.room_id,
    hub_id,
    participant_id,
    coalesce(u.uid, c.uid, 'default') `uid`,
    audio, 
    video, 
    screen, 
    area,
    permission,
    `role`, 
    coalesce(guest_name, u.firstname, d.firstname) firstname, 
    coalesce(guest_name, u.firstname, d.firstname) username, 
    coalesce(u.lastname, d.lastname, '') lastname,
    s.id socket_id,
    s.server
    FROM yp.conference u 
      INNER JOIN yp.socket s ON u.socket_id=s.id 
      INNER JOIN yp.cookie c ON s.cookie=c.id
      LEFT JOIN yp.drumate d on c.uid=d.id
    WHERE u.room_id = _room_id AND socket_id =_socket_id;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `connection_login` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `connection_login`(
  IN _key VARCHAR(128),
  IN _pw VARCHAR(128)
)
BEGIN
  DECLARE _sys_id INT(11);
  DECLARE _user_id VARCHAR(16);
  DECLARE _ident VARCHAR(80);
  DECLARE _method VARCHAR(80);

  SELECT
    drumate.sys_id,
    entity.id,
    IFNULL(JSON_EXTRACT(profile, '$.auth'), 'fingerprint') AS method,
    IFNULL(JSON_EXTRACT(profile, '$.public_key'), '') AS public_key,
    fingerprint=sha2(_pw, 512) password_matched
  FROM entity JOIN drumate USING(id) WHERE (ident=_key OR id=_key OR email=_key);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `contact_assignment_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `contact_assignment_get`(
  IN _uid VARCHAR(16)
)
BEGIN
 
  SELECT s.* FROM contact_sync s INNER JOIN drumate d on d.id = s.uid WHERE owner_id = _uid AND status <> 'delete';
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `contact_assignment_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `contact_assignment_update`(
  IN _owner_id VARCHAR(16),
  IN _members JSON
)
BEGIN
  DECLARE _idx INTEGER DEFAULT 0;
  DECLARE _member_id VARCHAR(16);
  DECLARE _length INTEGER DEFAULT 0;
  DECLARE _sys_id INT DEFAULT 0;
  DECLARE _temp_sys_id INT;
  DECLARE _db VARCHAR(1000) ;

  IF _members IN ('',  '0') THEN 
   SELECT NULL INTO  _members;
  END IF;
  
  DROP TABLE IF EXISTS _contact_sync;
  CREATE TEMPORARY TABLE _contact_sync AS SELECT * FROM contact_sync WHERE (owner_id = _owner_id OR uid = _owner_id);

  SELECT  JSON_LENGTH(_members)  INTO _length;

  WHILE _idx < _length  DO 
    SELECT JSON_UNQUOTE(JSON_EXTRACT(_members, CONCAT("$[", _idx, "]"))) INTO _member_id;

    INSERT INTO contact_sync(owner_id,uid,status) 
    SELECT _member_id,_owner_id,'new' ON DUPLICATE KEY UPDATE status = CASE WHEN status ='delete' THEN 'new' ELSE status END ;

    INSERT INTO contact_sync(owner_id,uid,status) 
    SELECT _owner_id,_member_id,'new' ON DUPLICATE KEY UPDATE status = CASE WHEN status ='delete' THEN 'new' ELSE status END ;

    DELETE FROM _contact_sync WHERE owner_id = _owner_id AND uid = _member_id;

    DELETE FROM _contact_sync WHERE uid = _owner_id AND owner_id = _member_id;

    SELECT _idx + 1 INTO _idx;
  END WHILE;

  UPDATE contact_sync o 
  INNER JOIN  _contact_sync t   ON o.owner_id = t.owner_id AND o.uid = t.uid 
  SET o.status ='delete';
 
  SELECT sys_id,uid  FROM contact_sync WHERE sys_id > 0  AND owner_id = _owner_id ORDER BY sys_id ASC LIMIT 1 INTO _sys_id ,_member_id;

  WHILE _sys_id <> 0 DO
    SELECT  NULL INTO _db;
    SELECT db_name FROM entity WHERE id = _member_id AND status <> 'deleted'  INTO _db;
    IF _db IS NOT NULL THEN
      SET @st = CONCAT("CALL  " , _db ,".my_contact_sync(?)");
      PREPARE stamt FROM @st;
      EXECUTE stamt USING _member_id;
      DEALLOCATE PREPARE stamt;
    END IF ;
    SELECT _sys_id INTO  _temp_sys_id ;  
    SELECT 0 ,NULL INTO  _sys_id,_member_id ; 
    SELECT IFNULL(sys_id,0),uid FROM contact_sync WHERE sys_id > _temp_sys_id  AND owner_id = _owner_id ORDER BY sys_id ASC LIMIT 1 INTO _sys_id,_member_id;
  END WHILE;

  SELECT  NULL INTO _db;
  SELECT db_name FROM entity WHERE id = _owner_id  AND status <> 'deleted' INTO _db;
  IF _db IS NOT NULL THEN
    SET @st = CONCAT("CALL  " , _db ,".my_contact_sync(?)");
    PREPARE stamt FROM @st;
    EXECUTE stamt USING _owner_id;
    DEALLOCATE PREPARE stamt;
  END IF ;

  SELECT * FROM contact_sync WHERE owner_id = _owner_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `contact_assignment_update1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `contact_assignment_update1`(
  IN _owner_id VARCHAR(16),
  IN _members JSON
)
BEGIN
  DECLARE _idx INTEGER DEFAULT 0;
  DECLARE _member_id VARCHAR(16);
  DECLARE _length INTEGER DEFAULT 0;
  DECLARE _sys_id INT DEFAULT 0;
  DECLARE _temp_sys_id INT;
  DECLARE _db VARCHAR(1000) ;

  IF _members IN ('',  '0') THEN 
   SELECT NULL INTO  _members;
  END IF;
  
  DROP TABLE IF EXISTS _contact_sync;
  CREATE TEMPORARY TABLE _contact_sync AS SELECT * FROM contact_sync WHERE (owner_id = _owner_id OR uid = _owner_id);

  SELECT  JSON_LENGTH(_members)  INTO _length;

  WHILE _idx < _length  DO 
    SELECT JSON_UNQUOTE(JSON_EXTRACT(_members, CONCAT("$[", _idx, "]"))) INTO _member_id;

    INSERT INTO contact_sync(owner_id,uid,status) 
    SELECT _member_id,_owner_id,'new' ON DUPLICATE KEY UPDATE status = CASE WHEN status ='delete' THEN 'new' ELSE status END ;

    INSERT INTO contact_sync(owner_id,uid,status) 
    SELECT _owner_id,_member_id,'new' ON DUPLICATE KEY UPDATE status = CASE WHEN status ='delete' THEN 'new' ELSE status END ;

    DELETE FROM _contact_sync WHERE owner_id = _owner_id AND uid = _member_id;

    DELETE FROM _contact_sync WHERE uid = _owner_id AND owner_id = _member_id;

    SELECT _idx + 1 INTO _idx;
  END WHILE;

  UPDATE contact_sync o 
  INNER JOIN  _contact_sync t   ON o.owner_id = t.owner_id AND o.uid = t.uid 
  SET o.status ='delete';
 
  SELECT sys_id,uid  FROM contact_sync WHERE sys_id > 0  AND owner_id = _owner_id ORDER BY sys_id ASC LIMIT 1 INTO _sys_id ,_member_id;

  WHILE _sys_id <> 0 DO
    SELECT db_name FROM entity WHERE id = _member_id INTO _db;

    SET @st = CONCAT("CALL  " , _db ,".my_contact_sync(?)");
    PREPARE stamt FROM @st;
    EXECUTE stamt USING _member_id;
    DEALLOCATE PREPARE stamt;

    SELECT _sys_id INTO  _temp_sys_id ;  
    SELECT 0 ,NULL INTO  _sys_id,_member_id ; 
    SELECT IFNULL(sys_id,0),uid FROM contact_sync WHERE sys_id > _temp_sys_id  AND owner_id = _owner_id ORDER BY sys_id ASC LIMIT 1 INTO _sys_id,_member_id;
  END WHILE;

  SELECT db_name FROM entity WHERE id = _owner_id INTO _db;
  
  SET @st = CONCAT("CALL  " , _db ,".my_contact_sync(?)");
  PREPARE stamt FROM @st;
  EXECUTE stamt USING _owner_id;
  DEALLOCATE PREPARE stamt;


  SELECT * FROM contact_sync WHERE owner_id = _owner_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `contact_assignment_updatex` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `contact_assignment_updatex`(
  IN _owner_id VARCHAR(16),
  IN _members JSON
)
BEGIN
  DECLARE _idx INTEGER DEFAULT 0;
  DECLARE _member_id VARCHAR(16);
  DECLARE _length INTEGER DEFAULT 0;
  DECLARE _sys_id INT DEFAULT 0;
  DECLARE _temp_sys_id INT;
  DECLARE _db VARCHAR(1000) ;

  IF _members IN ('',  '0') THEN 
   SELECT NULL INTO  _members;
  END IF;
  
  DROP TABLE IF EXISTS _contact_sync;
  CREATE TEMPORARY TABLE _contact_sync AS SELECT * FROM contact_sync WHERE (owner_id = _owner_id OR uid = _owner_id);

  SELECT  JSON_LENGTH(_members)  INTO _length;

  WHILE _idx < _length  DO 
    SELECT JSON_UNQUOTE(JSON_EXTRACT(_members, CONCAT("$[", _idx, "]"))) INTO _member_id;

    INSERT INTO contact_sync(owner_id,uid,status) 
    SELECT _member_id,_owner_id,'new' ON DUPLICATE KEY UPDATE status = CASE WHEN status ='delete' THEN 'new' ELSE status END ;

    INSERT INTO contact_sync(owner_id,uid,status) 
    SELECT _owner_id,_member_id,'new' ON DUPLICATE KEY UPDATE status = CASE WHEN status ='delete' THEN 'new' ELSE status END ;

    DELETE FROM _contact_sync WHERE owner_id = _owner_id AND uid = _member_id;

    DELETE FROM _contact_sync WHERE uid = _owner_id AND owner_id = _member_id;

    SELECT _idx + 1 INTO _idx;
  END WHILE;

  UPDATE contact_sync o 
  INNER JOIN  _contact_sync t   ON o.owner_id = t.owner_id AND o.uid = t.uid 
  SET o.status ='delete';
 
  SELECT sys_id,uid  FROM contact_sync WHERE sys_id > 0  AND owner_id = _owner_id ORDER BY sys_id ASC LIMIT 1 INTO _sys_id ,_member_id;

  WHILE _sys_id <> 0 DO
    SELECT db_name FROM entity WHERE id = _member_id INTO _db;

    SET @st = CONCAT("CALL  " , _db ,".my_contact_sync(?)");
    PREPARE stamt FROM @st;
    EXECUTE stamt USING _member_id;
    DEALLOCATE PREPARE stamt;

    SELECT _sys_id INTO  _temp_sys_id ;  
    SELECT 0 ,NULL INTO  _sys_id,_member_id ; 
    SELECT IFNULL(sys_id,0),uid FROM contact_sync WHERE sys_id > _temp_sys_id  AND owner_id = _owner_id ORDER BY sys_id ASC LIMIT 1 INTO _sys_id,_member_id;
  END WHILE;

  SELECT db_name FROM entity WHERE id = _owner_id INTO _db;
  
  SET @st = CONCAT("CALL  " , _db ,".my_contact_sync(?)");
  PREPARE stamt FROM @st;
  EXECUTE stamt USING _owner_id;
  DEALLOCATE PREPARE stamt;


  SELECT * FROM contact_sync WHERE owner_id = _owner_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `contact_invitation_status` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `contact_invitation_status`(
  IN _secret  VARCHAR(255),
  IN _uid  VARCHAR(16) 
)
BEGIN

  DECLARE _email VARCHAR(255); 
  DECLARE _inviter_id  VARCHAR(16) ;
  DECLARE _invitee_id  VARCHAR(16) ;
  
  DECLARE _status VARCHAR(255) DEFAULT 'nodata' ; 
  DECLARE _userdb VARCHAR(255); 
  DECLARE _contact_id VARCHAR(16) ;
  DECLARE _message VARCHAR(5000) ;
  
  IF _uid IN ('',  '0') THEN 
   SELECT NULL INTO  _uid;
  END IF;

  SELECT email,inviter_id FROM token WHERE secret =_secret INTO _email,_inviter_id;
  SELECT id   FROM drumate WHERE email =_email INTO _invitee_id;
 
 IF (IFNULL((SELECT 1 FROM token WHERE secret =_secret), 0)  = 1 ) THEN

    SELECT 'unregister' FROM token WHERE   _uid IS NULL AND secret =_secret INTO _status;
    SELECT 'register'   FROM drumate WHERE _uid IS NULL AND  email =_email INTO _status;
    SELECT 'invalid'    WHERE              _uid IS NOT NULL AND  IFNULL(_invitee_id,'-99') != _uid  INTO  _status; 

    SELECT db_name FROM yp.entity WHERE id=_uid  INTO _userdb;

    SELECT NULL,NULL,NULL INTO @_contact_id,@_status,@_message;
    
    IF _userdb IS NOT NULL AND IFNULL(_invitee_id,'-99') = _uid   THEN
      SET @st = CONCAT("SELECT id,status,message FROM  " , _userdb ,".contact WHERE entity = ? INTO @_contact_id,@_status,@_message");
      PREPARE stamt FROM @st;
      EXECUTE stamt USING _inviter_id;
      DEALLOCATE PREPARE stamt;
    END IF;

    SELECT  @_status  WHERE  @_status  IS NOT NULL INTO _status ;
 END IF; 

  SELECT _status status,@_contact_id contact_id , @_message message;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `contact_invite_to_notify` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `contact_invite_to_notify`(
  IN _email     VARCHAR(500)
)
BEGIN
  DECLARE _lvl INT(4); 
  DECLARE _inviter_id  VARCHAR(16);

  DECLARE _firstname   VARCHAR(255);
  DECLARE _lastname   VARCHAR(255);
  DECLARE _id VARCHAR(16);
  DECLARE _my_status VARCHAR(16); 
  DECLARE _inviter_db VARCHAR(255);  



 
 DROP TABLE IF EXISTS _inviter;
 CREATE TEMPORARY TABLE _inviter(
            inviter_id varchar(16) NOT NULL,
            is_checked boolean default 0
     );
 INSERT INTO _inviter(inviter_id)    
 SELECT inviter_id FROM  yp.token WHERE email = _email;  


WHILE (IFNULL((SELECT 1 FROM _inviter  WHERE  is_checked = 0 LIMIT 1 ),0)  = 1 ) AND IFNULL(_lvl,0) < 1000 DO

  SELECT inviter_id  FROM _inviter WHERE is_checked = 0 LIMIT 1  INTO _inviter_id;


  
  
  
  SELECT db_name FROM yp.entity WHERE id=_inviter_id INTO _inviter_db;
  
  
    SET @st = CONCAT("UPDATE " , _inviter_db ,".contact SET entity=?  WHERE entity = ? ");
    PREPARE stamt FROM @st;
    EXECUTE stamt USING _inviter_id,_email;
    DEALLOCATE PREPARE stamt;
  
  SELECT NULL INTO _my_status;
  SELECT status FROM  contact WHERE entity = _inviter_id INTO _my_status;

  SELECT id FROM (SELECT  yp.uniqueId() id ) a  WHERE _id IS NULL INTO _id ; 
  SELECT firstname,lastname  INTO _firstname,_lastname FROM yp.drumate d  WHERE d.id = _inviter_id; 
  
  INSERT INTO contact (id,firstname,lastname,category,status,entity,ctime,mtime) 
  SELECT _id , _firstname,_lastname,'drumate', 'received', _inviter_id, UNIX_TIMESTAMP(), UNIX_TIMESTAMP()
  WHERE _my_status IS NULL ;


  UPDATE _inviter SET is_checked =  1 WHERE inviter_id =_inviter_id; 
  SELECT IFNULL(_lvl,0) + 1 INTO _lvl;
END WHILE; 

SELECT * FROM _inviter;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `contact_join` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `contact_join`(
   IN _secret  varchar(255) 
)
BEGIN
  DECLARE _invitee_id  VARCHAR(16);
  DECLARE _inviter_id VARCHAR(16);
  DECLARE _inviter_drumate_db VARCHAR(255);
  DECLARE _frm_drumate_id VARCHAR(16);
  DECLARE _invited_email VARCHAR(255);


  DECLARE _contact_id VARCHAR(16);
  DECLARE _time int(11) unsigned;
  DECLARE _email VARCHAR(255);
  DECLARE _firstname   VARCHAR(255);
  DECLARE _lastname   VARCHAR(255);

  DECLARE _status   VARCHAR(255);

  
  SELECT UNIX_TIMESTAMP() INTO _time; 
  SELECT id FROM yp.entity WHERE db_name=database() INTO _invitee_id;
  SELECT inviter_id,email,status FROM yp.token 
  WHERE secret = _secret INTO _inviter_id,_invited_email,_status ;

  SELECT _inviter_id,_invited_email,_status ;
 
  
  SELECT inviter_id,email FROM yp.token 
  WHERE secret = _secret INTO _inviter_id,_invited_email;
  SELECT db_name FROM yp.entity WHERE id=_inviter_id INTO _inviter_drumate_db;

  SELECT _inviter_drumate_db;

  SELECT firstname,lastname,d.email 
  INTO _firstname,_lastname,_email FROM yp.drumate d  WHERE d.id = _invitee_id; 

  SET @st = CONCAT('SELECT id FROM ', _inviter_drumate_db ,'.contact WHERE entity = ? INTO @_contact_id');
  PREPARE stamt FROM @st;
  EXECUTE stamt USING _invited_email;
  DEALLOCATE PREPARE stamt; 

  SET @st = CONCAT('UPDATE  ', _inviter_drumate_db ,'.contact SET status="active", entity=?, category="drumate", uid= ? WHERE id = ?');
  PREPARE stamt FROM @st;
  EXECUTE stamt USING _invitee_id ,_invitee_id,@_contact_id ;
  DEALLOCATE PREPARE stamt; 

  SET @st = CONCAT('UPDATE ', _inviter_drumate_db ,'.contact_email SET email=?   WHERE email=?  AND  contact_id = ?');
  PREPARE stamt FROM @st;
  EXECUTE stamt USING _email , _invited_email ,@_contact_id ;
  DEALLOCATE PREPARE stamt; 


 

  SELECT firstname,lastname,d.email 
  INTO _firstname,_lastname,_email FROM yp.drumate d  WHERE d.id = _inviter_id; 

  INSERT INTO contact (id,firstname,lastname,category,entity,uid,status,ctime,mtime)
  SELECT *  FROM 
  (SELECT yp.uniqueId(),_firstname,_lastname,'drumate',_inviter_id temp_uid ,_inviter_id uid,"informed" status,_time ctime ,_time mtime) a
  WHERE NOT EXISTS (SELECT 1 FROM  contact WHERE temp_uid =_inviter_id OR uid =_inviter_id );

  UPDATE  contact SET category='drumate' ,entity =  _inviter_id , uid= _inviter_id  , status = 'active' 
  WHERE entity =_inviter_id OR uid =_inviter_id;  

  UPDATE  yp.token SET status='completed' WHERE secret = _secret; 

  SELECT * FROM contact WHERE id= _contact_id;

 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `contact_sync_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `contact_sync_update`(
  IN _uid VARCHAR(16)
)
BEGIN
  UPDATE contact_sync SET status='update' WHERE status <>'delete' AND uid =_uid; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `cookie_add_guest` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `cookie_add_guest`(
  IN _sid  VARCHAR(128), 
  IN _uid  VARCHAR(16), 
  IN _ua   VARCHAR(255)
)
BEGIN
  DECLARE _guest_name VARCHAR(264);
  IF _sid IS NOT NULL THEN
    REPLACE INTO cookie (`id`,`uid`,`ctime`,`mtime`,`ua`, `status`)
    VALUES(_sid, _uid, UNIX_TIMESTAMP(), UNIX_TIMESTAMP(), _ua, 'guest');
    SELECT guest_name FROM cookie WHERE id = _sid INTO _guest_name;
    IF _guest_name IS NOT NULL THEN 
      UPDATE dmz_user SET `name` = _guest_name WHERE id = _uid;
    END IF;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `cookie_bind_guest` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `cookie_bind_guest`(
  IN _sid  VARCHAR(128), 
  IN _name   VARCHAR(255)
)
BEGIN

  UPDATE cookie SET `guest_name`=_name WHERE id=_sid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `cookie_check_guest` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `cookie_check_guest`(
 IN _sid varchar(90),
 IN _socket_id varchar(90)
)
BEGIN
  DECLARE _db_name VARCHAR(64);
  DECLARE _guest_id VARCHAR(64);
  DECLARE _drumate_name VARCHAR(120);
  DECLARE _home_dir VARCHAR(1000);
  DECLARE _home_id VARCHAR(1000);
  DECLARE _domain VARCHAR(1000);
  DECLARE _org_name VARCHAR(1000);
  DECLARE _avatar VARCHAR(1000);
  DECLARE _domain_id INTEGER;
  DECLARE _profile JSON;

  SELECT get_sysconf('guest_id') INTO _guest_id;
  SELECT db_name, home_dir, home_id, d.domain_id, o.link, o.name, avatar, d.profile
    FROM organisation o 
    INNER JOIN entity e on e.dom_id = o.domain_id 
    INNER JOIN drumate d on e.id = d.id  
    WHERE e.id = _guest_id
  INTO _db_name, _home_dir, _home_id, _domain_id, _domain, _org_name, _avatar, _profile;

  SELECT COALESCE(d.firstname, d.lastname, z.name) FROM socket s
    LEFT JOIN drumate d ON d.id=s.uid
    LEFT JOIN dmz_user z ON z.id=s.uid
    WHERE d.id!=_guest_id AND s.id=_socket_id
    GROUP BY(s.uid) LIMIT 1
    INTO _drumate_name; 

  

  SELECT DISTINCT * FROM 
    ( 
    SELECT 
    c.id AS session_id, 
    t.guest_id id, 
    t.id token, 
    0 AS signed_in,
    u.email AS username,
    _db_name AS db_name,
    _domain AS domain,
    _domain_id AS domain_id,
    _org_name org_name,
    _home_dir home_dir, 
    _home_id home_id,
    0 AS remit,
    _avatar AS avatar,
    "guest" AS connection,
    "guest" AS status,
    _profile AS profile,
    COALESCE(_drumate_name, u.name, c.guest_name) AS guest_name,
    IFNULL(u.name, 'Guest') AS firstname,
    IFNULL(u.name, 'Guest') AS lastname,
    u.name AS fullname,
    
    0 as is_support
    FROM cookie c 
    INNER JOIN dmz_token t on t.guest_id=c.uid
    INNER JOIN dmz_user u on u.id=c.uid
    
    WHERE c.id=_sid 

    UNION 

    SELECT 
    c.id AS session_id, 
    t.guest_id id, 
    t.id token, 
    0 AS signed_in,
    u.id AS username,
    _db_name AS db_name,
    _domain AS domain,
    _domain_id AS domain_id,
    _org_name org_name,
    _home_dir home_dir, 
    _home_id home_id,
    0 AS remit,
    _avatar AS avatar,
    "guest" AS connection,
    "guest" AS status,
    _profile AS profile,
    COALESCE(_drumate_name, u.name, c.guest_name) AS guest_name,
    IFNULL(u.name, 'Guest') AS firstname,
    IFNULL(u.name, 'Guest') AS lastname,
    u.name AS fullname,
    
    0 as is_support
    FROM cookie c 
    INNER JOIN dmz_token t on t.guest_id=c.uid
    INNER JOIN dmz_media u on u.id=c.uid
    
    WHERE c.id=_sid 
    ) A LIMIT 1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `cookie_check_guestx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `cookie_check_guestx`(
 IN _sid varchar(64)
)
BEGIN
  DECLARE _db_name VARCHAR(64);
  DECLARE _home_dir VARCHAR(1000);
  DECLARE _home_id VARCHAR(1000);
  DECLARE _domain VARCHAR(1000);
  DECLARE _org_name VARCHAR(1000);
  DECLARE _avatar VARCHAR(1000);
  DECLARE _domain_id INTEGER;
  DECLARE _profile JSON;

  SELECT db_name, home_dir, home_id, d.domain_id, o.link, o.name, avatar, d.profile
    FROM organisation o 
    INNER JOIN entity e on e.dom_id = o.domain_id 
    INNER JOIN drumate d on e.id = d.id  
    WHERE e.id='ffffffffffffffff'
    INTO _db_name, _home_dir, _home_id, _domain_id, _domain, _org_name, _avatar, _profile;
  SELECT 
    Distinct
    c.id AS session_id, 
    d.id, 
    0 AS signed_in,
    d.email AS username,
    _db_name AS db_name,
    _domain AS domain,
    _domain_id AS domain_id,
    _org_name 
    _home_dir, 
    _home_id,
    0 AS remit,
    _avatar AS avatar,
    "guest" AS connection,
    "guest" AS status,
    _profile AS profile,
    IFNULL(d.name, 'Guest') AS firstname,
    IFNULL(d.name, 'Guest') AS lastname,
    IFNULL(d.name, 'Drumee Guest') AS fullname,
    0 as is_support
    FROM cookie c INNER JOIN dmz_userx d on d.id=c.uid
  WHERE c.id=_sid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `cookie_check_guest_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `cookie_check_guest_next`(
 IN _sid varchar(90),
 IN _socket_id varchar(90)
)
BEGIN
  DECLARE _db_name VARCHAR(64);
  DECLARE _drumate_name VARCHAR(120);
  DECLARE _home_dir VARCHAR(1000);
  DECLARE _home_id VARCHAR(1000);
  DECLARE _domain VARCHAR(1000);
  DECLARE _org_name VARCHAR(1000);
  DECLARE _avatar VARCHAR(1000);
  DECLARE _domain_id INTEGER;
  DECLARE _profile JSON;

  SELECT db_name, home_dir, home_id, d.domain_id, o.link, o.name, avatar, d.profile
    FROM organisation o 
    INNER JOIN entity e on e.dom_id = o.domain_id 
    INNER JOIN drumate d on e.id = d.id  
    WHERE e.id='ffffffffffffffff'
  INTO _db_name, _home_dir, _home_id, _domain_id, _domain, _org_name, _avatar, _profile;

  SELECT COALESCE(d.firstname, d.lastname, z.name) FROM socket s
    LEFT JOIN drumate d ON d.id=s.uid
    LEFT JOIN dmz_user z ON z.id=s.uid
    WHERE d.id!='ffffffffffffffff' AND s.id=_socket_id
    GROUP BY(s.uid) LIMIT 1
    INTO _drumate_name; 

  

  SELECT DISTINCT * FROM 
    ( 
    SELECT 
    c.id AS session_id, 
    t.guest_id id, 
    t.id token, 
    0 AS signed_in,
    u.email AS username,
    _db_name AS db_name,
    _domain AS domain,
    _domain_id AS domain_id,
    _org_name org_name,
    _home_dir home_dir, 
    _home_id home_id,
    0 AS remit,
    _avatar AS avatar,
    "guest" AS connection,
    "guest" AS status,
    _profile AS profile,
    COALESCE(_drumate_name, u.name, c.guest_name) AS guest_name,
    IFNULL(u.name, 'Guest') AS firstname,
    IFNULL(u.name, 'Guest') AS lastname,
    u.name AS fullname,
    
    0 as is_support
    FROM cookie c 
    INNER JOIN dmz_token t on t.guest_id=c.uid
    INNER JOIN dmz_user u on u.id=c.uid
    
    WHERE c.id=_sid 

    UNION 

    SELECT 
    c.id AS session_id, 
    t.guest_id id, 
    t.id token, 
    0 AS signed_in,
    u.id AS username,
    _db_name AS db_name,
    _domain AS domain,
    _domain_id AS domain_id,
    _org_name org_name,
    _home_dir home_dir, 
    _home_id home_id,
    0 AS remit,
    _avatar AS avatar,
    "guest" AS connection,
    "guest" AS status,
    _profile AS profile,
    COALESCE(_drumate_name, u.name, c.guest_name) AS guest_name,
    IFNULL(u.name, 'Guest') AS firstname,
    IFNULL(u.name, 'Guest') AS lastname,
    u.name AS fullname,
    
    0 as is_support
    FROM cookie c 
    INNER JOIN dmz_token t on t.guest_id=c.uid
    INNER JOIN dmz_media u on u.id=c.uid
    
    WHERE c.id=_sid 
    ) A LIMIT 1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `cookie_deprecated` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `cookie_deprecated`()
BEGIN

  DELETE
  FROM yp.cookie 
  WHERE id IN 
  (
      SELECT SUBSTRING( id, length(Substring_Index(id, '=', 1) )+2, 64) id  
      FROM ( 
            SELECT  MAX(ctime)ctime , 
            json_value(headers, "$.cookie") id  
            FROM  services_log 
            GROUP BY json_value(headers, "$.cookie")
          ) A 
      WHERE ctime <= (SELECT UNIX_TIMESTAMP() -  2678400 )  

  );

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `cookie_retrieve_user` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `cookie_retrieve_user`(
  IN _key VARCHAR(512) CHARACTER SET ascii
)
BEGIN
  DECLARE _id VARCHAR(16);
  DECLARE _sb_id VARCHAR(16);
  DECLARE _sb_db VARCHAR(50);
  DECLARE _sb_root VARCHAR(16);
  DECLARE _avatar VARCHAR(16);
  DECLARE _disk_usage float(16);

  DECLARE _uid VARCHAR(16) CHARACTER SET ascii;
  SELECT `uid` FROM cookie WHERE id=_key LIMIT 1 INTO _uid;
  CALL get_user(_uid);
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `cookie_retrieve_user1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `cookie_retrieve_user1`(
  IN _key VARCHAR(512) CHARACTER SET ascii
)
BEGIN
  DECLARE _id VARCHAR(16);
  DECLARE _sb_id VARCHAR(16);
  DECLARE _sb_db VARCHAR(50);
  DECLARE _sb_root VARCHAR(16);
  DECLARE _avatar VARCHAR(16);
  DECLARE _disk_usage float(16);

  DECLARE _uid VARCHAR(16) CHARACTER SET ascii;
  SELECT `uid` FROM cookie WHERE id=_key LIMIT 1 INTO _uid;
  CALL get_user(_uid);
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `cookie_touch` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `cookie_touch`(
  IN _args JSON
)
BEGIN
  DECLARE _sid VARCHAR(256) CHARACTER SET ascii;
  DECLARE _guest_name VARCHAR(256);
  DECLARE _uid VARCHAR(16) CHARACTER SET ascii;
  DECLARE _socket_id VARCHAR(32) CHARACTER SET ascii;
  SELECT JSON_VALUE(_args, "$.sid") INTO _sid;
  SELECT JSON_VALUE(_args, "$.uid") INTO _uid;
  SELECT JSON_VALUE(_args, "$.guest_name") INTO _guest_name;
  SELECT JSON_VALUE(_args, "$.socket_id") INTO _socket_id;

  UPDATE cookie SET mtime=unix_timestamp(), guest_name=_guest_name, `uid`=_uid WHERE id=_sid;
  IF _socket_id IS NOT NULL THEN
    UPDATE socket s INNER JOIN cookie c ON c.id=s.cookie 
    SET s.uid=c.uid WHERE s.id=_socket_id;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `cookie_touch_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `cookie_touch_next`(
  IN _sid VARCHAR(256) CHARACTER SET ascii,
  IN _uid VARCHAR(256) CHARACTER SET ascii
)
BEGIN
  UPDATE cookie SET mtime=unix_timestamp(), `uid`=_uid WHERE id=_sid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `count_download` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `count_download`(
  IN _id VARCHAR(16)
)
BEGIN

  UPDATE media SET download_count=download_count+1 WHERE id=_id;
  SELECT * from media where id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `count_files` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `count_files`(
)
BEGIN

  SELECT COUNT(*) AS count FROM media WHERE media.category!='folder';

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `create_anon_session` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `create_anon_session`(
  IN _sid VARCHAR(64),
  IN _uid VARCHAR(16),
  IN _uname VARCHAR(80),
  IN _ip VARCHAR(255),
  IN _ua VARCHAR(255)
  
)
BEGIN

  DECLARE _now INT(11) DEFAULT 0;
  DECLARE default_ttl INT DEFAULT 86400;  
  

  SELECT UNIX_TIMESTAMP() into @n;
  
  

  IF _sid IN (NULL, 'null', 'undefined', '0', '', '---') THEN 
    SELECT CONCAT(yp.uniqueId(), yp.uniqueId(), yp.uniqueId(), yp.uniqueId()) INTO _sid;
  END IF;
  INSERT INTO
    sessions (`id`,`user_id`,`username`,`domain`,`update_time`,`start_time`,`ttl`, `last_ip`, `ua`, `action`)
    VALUES(_sid, _uid, _uname, utils.domain_name(), @n, @n, default_ttl,  _ip, _ua, 'insert');
    SELECT _sid AS session_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `create_anon_session_old` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `create_anon_session_old`(
  IN _sid VARBINARY(64),
  IN _uid VARBINARY(16),
  IN _uname VARCHAR(80),
  IN _ip VARCHAR(255),
  IN _ua VARCHAR(255),
  IN _action VARCHAR(255),
  IN _vhost VARCHAR(512)
)
BEGIN

  DECLARE _now INT(11) DEFAULT 0;
  DECLARE default_ttl INT DEFAULT 86400;
  DECLARE _domain VARCHAR(256);

  SELECT UNIX_TIMESTAMP() into @n;
  SELECT IFNULL(`domain`, utils.domain_name()) FROM vhost 
    WHERE fqdn=_vhost INTO _domain;

  INSERT INTO
    sessions (`id`,`user_id`,`username`,`domain`,`update_time`,`start_time`,`ttl`, `last_ip`, `ua`, `action`)
    VALUES(_sid, _uid, _uname, _domain, @n, @n, default_ttl,  _ip, _ua, _action);
  SELECT _domain AS domain;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `current_mimic` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `current_mimic`(
  IN _sid VARCHAR(90)
)
BEGIN
  DECLARE _mimic_type VARCHAR(30) default  'normal';
  DECLARE _mimicker VARCHAR(64);
  DECLARE _mimic_id VARCHAR(16);
  DECLARE _mimic_entity JSON;
  DECLARE _estimatetime INT(11);
  DECLARE _uid VARCHAR(16);

  SELECT `uid` FROM cookie WHERE id=_sid INTO  _uid; 

  SELECT 'victim', mimicker, id,estimatetime 
    FROM mimic WHERE status = 'active' AND uid = _uid 
    INTO  _mimic_type , _mimicker, _mimic_id ,_estimatetime ;
  SELECT 'old', mimicker, id ,estimatetime 
    FROM mimic WHERE status = 'active' AND mimicker = _uid  
    INTO  _mimic_type , _mimicker, _mimic_id , _estimatetime;
  SELECT 'mimic', m.mimicker, m.id ,estimatetime 
    FROM mimic m
    INNER JOIN cookie c ON  m.uid = c.uid AND m.mimicker = c.mimicker 
    WHERE m.status ='active' AND  c.id = _sid AND c.uid = _uid 
    INTO _mimic_type ,_mimicker, _mimic_id, _estimatetime;

  
  IF _mimic_type = 'old' AND  _estimatetime+10 <= UNIX_TIMESTAMP()  THEN 
    UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
    UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  UNIX_TIMESTAMP())) WHERE id=_mimic_id;
    UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
    SELECT 'normal',NULL,NULL,NULL INTO _mimic_type, _mimicker, _mimic_id , _estimatetime ; 
  END IF;

    
  IF _mimic_type = 'victim'  AND  _estimatetime+10 <= UNIX_TIMESTAMP()  THEN 
    UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
    UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  UNIX_TIMESTAMP())) WHERE id=_mimic_id;
    UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
    SELECT 'normal',NULL,NULL,NULL INTO _mimic_type, _mimicker, _mimic_id , _estimatetime ; 
  END IF;

  SELECT _mimicker mimicker,
    _mimic_id mimic_id,
    _mimic_type mimic_type,
    _estimatetime mimic_end_at;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dblog_put` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dblog_put`(
  IN _log  varchar(5000)
)
BEGIN
INSERT INTO db_log SELECT null, _log;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `db_log` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `db_log`( log text 
)
BEGIN
    insert into db_server_log(log) SELECT log;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `db_log_put` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `db_log_put`(
  IN _log  varchar(5000)
)
BEGIN
INSERT INTO db_log SELECT null, _log;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `default_page` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `default_page`(
  IN  _hashtag varchar(255),
  IN  _lang varchar(25),
  OUT _res varchar(512)
)
BEGIN
  
  DECLARE _home_dir VARCHAR(512);
  DECLARE _tmp VARCHAR(512);
  DECLARE _db_name VARCHAR(30);
  
  SELECT home_dir, db_name FROM entity WHERE id=(
    SELECT conf_value FROM yp.sys_conf WHERE conf_key='block_cdn_id'
  ) INTO _home_dir, _db_name;

  SET @_id='';

  SET @s = CONCAT("SELECT id FROM `", 
    _db_name, "`.`block` LEFT JOIN `", _db_name, "`.`block_history` on block.id=master_id ",
    " WHERE hashtag='", _hashtag, "' AND lang='", _lang, "' AND isonline=1 INTO @_id");
  PREPARE stmt FROM @s;
  EXECUTE stmt;
  DEALLOCATE PREPARE stmt;
  
  IF @_id = '' THEN
    SET @s = CONCAT("SELECT id FROM `", 
      _db_name, "`.`block` LEFT JOIN `", _db_name, "`.`block_history` on block.id=master_id ",
      " WHERE hashtag='", _hashtag, "' AND lang='en' AND isonline=1 INTO @_id");
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;
  SELECT CONCAT(_home_dir, '/Block/', @_id) INTO _res;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `delete_drumate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `delete_drumate`(
   IN _key VARBINARY(80)
)
BEGIN
  DECLARE _id VARBINARY(16);
  DECLARE _ident VARBINARY(80);

  SELECT id, ident FROM entity WHERE ident=_key OR id=_key INTO _id, _ident;

  START TRANSACTION;
    DELETE FROM membership WHERE user_id=_id;
    DELETE FROM entity WHERE id=_id;
    DELETE FROM drumate WHERE id=_id;
    DELETE FROM postfix.mailbox WHERE local_part=_ident;
    DELETE FROM postfix.alias WHERE address=concat(_ident, '@drumee.com');
  COMMIT;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `desk_create_hub` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `desk_create_hub`(
  IN _ident VARCHAR(80),
  IN _area VARCHAR(16),
  IN _oid  VARCHAR(16),
  IN _profile JSON
)
BEGIN
  DECLARE _hub_id VARCHAR(16);
  DECLARE _hub_db VARCHAR(50);
  DECLARE _default_privilege TINYINT(4);
  DECLARE _dmail VARCHAR(500);
  DECLARE _domain VARCHAR(500);
  DECLARE _reason VARCHAR(500);
  DECLARE _folders JSON;
  DECLARE _fqdn VARCHAR(1024);  
  DECLARE _rollback BOOL DEFAULT 0;   
  DECLARE  _domain_id INT;
  DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _rollback = 1;  
  
  SELECT IFNULL(
    JSON_VALUE(_profile, "$.domain"), yp.domain_name(database())
  ) INTO _domain;
  
  SELECT IF(count(*), id, 1) FROM yp.domain WHERE `name`=_domain INTO _domain_id;
  SELECT JSON_VALUE(_profile, "$.folders") INTO _folders;

  SELECT JSON_REMOVE(_profile, "$.domain") INTO _profile;
  SELECT JSON_REMOVE(_profile, "$.folders") INTO _profile;
  START TRANSACTION;
  
  SELECT id, db_name  FROM yp.entity WHERE type='hub' AND area='pool' 
    LIMIT 1 INTO _hub_id, _hub_db;

  SELECT unique_ident(_ident) INTO _ident;
  SELECT CONCAT(_ident, '.', _domain) INTO _fqdn;

  UPDATE yp.entity SET area=_area, ident=_ident, 
    status='active', dom_id =_domain_id WHERE id=_hub_id;

  SELECT CASE _area
    WHEN 'public' THEN 3
    WHEN 'private' THEN 7 
    ELSE 0 
  END INTO _default_privilege;

  IF _default_privilege = 0 THEN 
    SELECT 1 INTO _rollback;
    SELECT CONCAT("Area ", _area, " is not allowed") INTO _reason;
  END IF;

  UPDATE yp.entity SET settings=json_set(settings, "$.default_privilege", _default_privilege) 
    WHERE id=_hub_id;

  INSERT INTO yp.vhost VALUES (null, _fqdn, _hub_id, _domain_id);
  INSERT INTO yp.hub (
    `id`, `owner_id`, `origin_id`, 
    `name`, 
    `keywords`, `dmail`, `profile`)
  VALUES (
    _hub_id, _oid, _oid, 
    IFNULL(get_json_object(_profile, "name"), _fqdn),
    "Key words", yp.get_dmail(_ident), _profile);

  CALL join_hub(_hub_id);
  CALL permission_grant(_hub_id, _oid, 0, 63, 'system', '');
  SET @s = CONCAT("CALL `", _hub_db, "`.permission_grant('*',?, 0, 63, 'system', '')");
  PREPARE stmt FROM @s;
  EXECUTE stmt USING _oid;
  DEALLOCATE PREPARE stmt;

  IF _area = "public" THEN 
    SET @s = CONCAT("CALL `", 
      _hub_db, 
      "`.permission_grant('*', '*', 0, 3, 'system', '')"
    );
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;
  
  IF _folders IS NOT NULL THEN 
    SET @s = CONCAT("CALL `", _hub_db,"`.mfs_init_folders(", quote(_folders), ",", true, ");");
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;

  SET @s = CONCAT("CALL `", _hub_db,"`.mfs_hub_chat_init();");
  PREPARE stmt FROM @s;
  EXECUTE stmt;
  DEALLOCATE PREPARE stmt;

  SET @s = CONCAT("CALL `", _hub_db,"`.mfs_trash_init();");
  PREPARE stmt FROM @s;
  EXECUTE stmt;
  DEALLOCATE PREPARE stmt;


  SELECT *, 0 as failed, _default_privilege default_privilege 
    FROM yp.entity WHERE db_name=_hub_db;

  IF _rollback THEN
    ROLLBACK;
    SELECT 1 as failed, _reason AS reason;
  ELSE
    COMMIT;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `desk_create_sharebox` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `desk_create_sharebox`(
   IN _owner_id VARCHAR(16),   
   IN _sbx_id VARCHAR(16)
)
BEGIN
  DECLARE _fn VARCHAR(16);
  DECLARE _pid VARCHAR(16);
  DECLARE _count INT(8);

  SELECT id FROM media WHERE parent_id = '0' INTO _pid;
  SELECT count(*) FROM media WHERE category='sharebox' AND extension='sharebox' INTO _count;
  IF _count = 0 THEN 
    SELECT  uniqueId() INTO _fn;
    SELECT id from yp.entity  where db_name = database() INTO _owner_id;
    CALL permission_grant('*', _owner_id, 0, 63, 'system', '');
    CALL mfs_new_node(
      _owner_id,
      _owner_id,
      _fn,
      _pid,
      'sharebox',
      'sharebox',
      'sharebox',
      '0x0',
      0, 
      0
    );
    UPDATE media set `status`='hidden', id=_sbx_id 
      WHERE user_filename=_fn AND category='sharebox';
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `device_registration` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `device_registration`(
  IN _device_id VARCHAR(200),
  IN _device_type enum('ios','android','web'),
  IN _push_token text,
  IN _uid varchar(16),
  IN _status varchar(20)
)
BEGIN
  IF EXISTS(SELECT device_id FROM device_registation WHERE device_id = _device_id) THEN
      UPDATE device_registation SET push_token = _push_token, uid = _uid, status = _status, mtime = UNIX_TIMESTAMP() WHERE device_id = _device_id;
  ELSE
      INSERT INTO device_registation (`device_id`, `device_type`, `push_token`, `uid`, `status`, `ctime`, `mtime`) 
      VALUES (_device_id, _device_type, _push_token, _uid, _status, UNIX_TIMESTAMP(), UNIX_TIMESTAMP());
  END IF; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dir_entity_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dir_entity_exists`(
   IN _ident VARBINARY(80),
   IN _email VARBINARY(280)
)
BEGIN
  DECLARE __ident VARCHAR(80);
  DECLARE __email VARCHAR(280);
  SELECT ident FROM entity WHERE ident=_ident INTO __ident;
  SELECT email FROM drumate WHERE email=_email INTO __email;
  SELECT __ident AS ident, __email AS email;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `disk_limit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `disk_limit`(
  _entity_id  VARCHAR(16) CHARACTER SET ascii
)
BEGIN
  DECLARE _uid VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _hub_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _owner_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _drumate_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _org_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _quota json ;

  DECLARE _u_desk_disk  double  default 0.0 ;
  DECLARE _u_hub_disk  double  default 0.0 ;


  DECLARE _q_desk_disk  double  default 0.0 ;
  DECLARE _q_hub_disk  double  default 0.0 ;
  DECLARE _q_disk  double  default 0.0 ;
  DECLARE _watermark VARCHAR(16)  CHARACTER SET ascii default "0";


  DECLARE _l_disk  double  default 0.0 ;


  DECLARE _q_share_hub  double  default 0.0 ;
  DECLARE _q_private_hub  double  default 0.0 ;
  DECLARE _cnt_share_hub int;
  DECLARE _cnt_private_hub int;

  SELECT id, owner_id  FROM yp.hub WHERE id = _entity_id  INTO _hub_id, _owner_id; 
  SELECT id FROM yp.drumate WHERE id = _entity_id  AND  _owner_id IS NULL  INTO _owner_id; 

  SELECT quota FROM yp.drumate WHERE id = _owner_id INTO _quota;

  SELECT JSON_VALUE(_quota, "$.watermark") INTO _watermark;
  SELECT JSON_VALUE(_quota, "$.disk") INTO _q_disk;
  SELECT JSON_VALUE(_quota, "$.desk_disk") INTO _q_desk_disk;
  SELECT JSON_VALUE(_quota, "$.hub_disk") INTO _q_hub_disk;
  SELECT IFNULL(_q_desk_disk,_q_disk) INTO _q_desk_disk;
  SELECT IFNULL(_q_hub_disk,_q_disk) INTO _q_hub_disk;


  SELECT JSON_VALUE(_quota, "$.share_hub") INTO _q_share_hub;
  SELECT JSON_VALUE(_quota, "$.private_hub") INTO _q_private_hub;



  
  SELECT 
    SUM(CASE WHEN e.area = 'private' then 1 else 0 END ),
    SUM(CASE WHEN e.area = 'share' then 1 else 0 END) 
    FROM 
      yp.hub h 
    INNER JOIN yp.entity e on e.id =  h.id
    WHERE 
    h.owner_id=_owner_id AND 
    e.area  IN ('private','share')  
    INTO  _cnt_private_hub, _cnt_share_hub ; 
       


  
  IF (_hub_id IS NULL AND _org_id IS NULL) THEN 

    SELECT 
      SUM(du.size) 
      FROM 
      yp.disk_usage du
      INNER JOIN yp.hub h ON du.hub_id = h.id
      WHERE h.owner_id=_owner_id INTO _u_hub_disk;

      
    SELECT 
      SUM(du.size) 
      FROM 
      yp.disk_usage du
      INNER JOIN yp.drumate d ON du.hub_id = d.id
      WHERE d.id=_owner_id  INTO _u_desk_disk;

    SELECT  IFNULL(_u_hub_disk, 0)  INTO _u_hub_disk;
    SELECT  IFNULL(_u_desk_disk, 0)  INTO _u_desk_disk;

    SELECT LEAST( _q_disk - _u_desk_disk - _u_hub_disk, _q_desk_disk - _u_desk_disk ) INTO _l_disk;

  END IF ;

 
  IF (_hub_id IS NOT NULL AND _org_id IS NULL) THEN 

    SELECT 
      SUM(du.size) 
      FROM 
      yp.disk_usage du
      INNER JOIN yp.hub h ON du.hub_id = h.id
      WHERE h.owner_id=_owner_id INTO _u_hub_disk;
  
      
    SELECT 
      SUM(du.size) 
      FROM 
      yp.disk_usage du
      INNER JOIN yp.drumate d ON du.hub_id = d.id
      WHERE d.id=_owner_id  INTO _u_desk_disk;

    SELECT  IFNULL(_u_hub_disk, 0)  INTO _u_hub_disk;
    SELECT  IFNULL(_u_desk_disk, 0)  INTO _u_desk_disk;

    SELECT LEAST( _q_disk - _u_desk_disk - _u_hub_disk, _q_hub_disk - _u_hub_disk ) INTO _l_disk;
     
  END IF ;



  
  IF (_hub_id IS NULL AND _org_id IS NOT  NULL) THEN 

    SELECT 
      SUM(du.size) 
      FROM 
      yp.disk_usage du
      INNER JOIN yp.hub h ON du.hub_id = h.id
      INNER JOIN yp.map_role m ON  h.owner_id = m.uid
      WHERE m.org_id=_org_id INTO _u_hub_disk;	
      
  SELECT 
      SUM(du.size) 
      FROM 
      yp.disk_usage du
      INNER JOIN yp.drumate d ON du.hub_id = d.id
      INNER JOIN yp.map_role m ON  d.id = m.uid
      WHERE  m.org_id=_org_id INTO _u_desk_disk;

    SELECT  IFNULL(_u_hub_disk, 0)  INTO _u_hub_disk;
    SELECT  IFNULL(_u_desk_disk, 0)  INTO _u_desk_disk;

    SELECT LEAST( _q_disk - _u_desk_disk - _u_hub_disk, _q_desk_disk - _u_desk_disk ) INTO _l_disk;

  END IF ;

 
  IF (_hub_id IS NOT NULL AND _org_id IS NOT NULL) THEN 

      SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.hub h ON du.hub_id = h.id
        INNER JOIN yp.map_role m ON  h.owner_id = m.uid
        WHERE m.org_id=_org_id INTO _u_hub_disk;	
        
      SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.drumate d ON du.hub_id = d.id
        INNER JOIN yp.map_role m ON  d.id = m.uid
        WHERE  m.org_id=_org_id INTO _u_desk_disk;

      SELECT  IFNULL(_u_hub_disk, 0)  INTO _u_hub_disk;
      SELECT  IFNULL(_u_desk_disk, 0)  INTO _u_desk_disk;


      SELECT LEAST( _q_disk - _u_desk_disk - _u_hub_disk, _q_hub_disk - _u_hub_disk ) INTO _l_disk;

  END IF ;


  SELECT _hub_id  hub_id, _owner_id owner_id,_quota quota,_org_id org_id,
    _entity_id entity_id,_u_desk_disk used_desk_disk,_u_hub_disk used_hub_disk,
    _q_disk quota_disk,_q_desk_disk quota_desk_disk, _q_hub_disk  quota_hub_disk,
    _l_disk  available_disk,
    _q_share_hub quota_share_hub,  _q_private_hub quota_private_hub, 
     _cnt_share_hub   used_share_hub,  _cnt_private_hub  used_private_hub, 
    _q_share_hub - _cnt_share_hub  avaialable_share_hub, _watermark watermark,
    _q_private_hub - _cnt_private_hub available_private_hub ;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `disk_limitx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `disk_limitx`(
  _entity_id  VARCHAR(16) CHARACTER SET ascii
)
BEGIN
  DECLARE _uid VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _hub_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _owner_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _drumate_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _org_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _quota json ;

  DECLARE _u_desk_disk  double  default 0.0 ;
  DECLARE _u_hub_disk  double  default 0.0 ;


  DECLARE _q_desk_disk  double  default 0.0 ;
  DECLARE _q_hub_disk  double  default 0.0 ;
  DECLARE _q_disk  double  default 0.0 ;


  DECLARE _l_disk  double  default 0.0 ;

  SELECT id, owner_id  FROM yp.hub WHERE id = _entity_id  INTO _hub_id , _owner_id; 
  SELECT id FROM yp.drumate WHERE id = _entity_id  AND  _owner_id IS NULL  INTO _owner_id; 

  SELECT quota FROM yp.drumate WHERE id = _owner_id INTO _quota;

  SELECT o.id
  FROM  yp.drumate d  
  INNER JOIN yp.organisation o ON o.domain_id= d.domain_id
  WHERE d.id =  _owner_id AND  d.domain_id > 1  INTO _org_id;



  
  
  
    SELECT get_json_object(_quota, "disk") INTO _q_disk;
    SELECT get_json_object(_quota, "desk_disk") INTO _q_desk_disk;
    SELECT get_json_object(_quota, "hub_disk") INTO _q_hub_disk;
    SELECT IFNULL(_q_desk_disk,_q_disk) INTO _q_desk_disk;
    SELECT IFNULL(_q_hub_disk,_q_disk) INTO _q_hub_disk;


  
  IF (_hub_id IS NULL AND _org_id IS NULL) THEN 


    SELECT 
       du.hub_id, h.serial, h.name, e.area
        FROM 
        yp.disk_usage du
        INNER JOIN yp.hub h ON du.hub_id = h.id
        INNER JOIN yp.entity e on e.id =  h.id
        WHERE h.owner_id=_owner_id ;


      SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.hub h ON du.hub_id = h.id
        WHERE h.owner_id=_owner_id INTO _u_hub_disk;

        
      SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.drumate d ON du.hub_id = d.id
        WHERE d.id=_owner_id  INTO _u_desk_disk;

      SELECT  IFNULL(_u_hub_disk , 0)  INTO _u_hub_disk;
      SELECT  IFNULL(_u_desk_disk , 0)  INTO _u_desk_disk;

      SELECT LEAST( _q_disk - _u_desk_disk - _u_hub_disk   , _q_desk_disk - _u_desk_disk ) INTO _l_disk;

  END IF ;

 
  IF (_hub_id IS NOT NULL AND _org_id IS NULL) THEN 

      SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.hub h ON du.hub_id = h.id
        WHERE h.owner_id=_owner_id INTO _u_hub_disk;
    
        
      SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.drumate d ON du.hub_id = d.id
        WHERE d.id=_owner_id  INTO _u_desk_disk;

      SELECT  IFNULL(_u_hub_disk , 0)  INTO _u_hub_disk;
      SELECT  IFNULL(_u_desk_disk , 0)  INTO _u_desk_disk;

      SELECT LEAST( _q_disk - _u_desk_disk - _u_hub_disk  , _q_hub_disk - _u_hub_disk ) INTO _l_disk;
     
  END IF ;



  
  IF (_hub_id IS NULL AND _org_id IS NOT  NULL) THEN 

     SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.hub h ON du.hub_id = h.id
        INNER JOIN yp.map_role m ON  h.owner_id = m.uid
        WHERE m.org_id=_org_id INTO _u_hub_disk;
        
    SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.drumate d ON du.hub_id = d.id
        INNER JOIN yp.map_role m ON  d.id = m.uid
        WHERE  m.org_id=_org_id INTO _u_desk_disk;

      SELECT  IFNULL(_u_hub_disk , 0)  INTO _u_hub_disk;
      SELECT  IFNULL(_u_desk_disk , 0)  INTO _u_desk_disk;

      SELECT LEAST( _q_disk - _u_desk_disk - _u_hub_disk   , _q_desk_disk - _u_desk_disk ) INTO _l_disk;

  END IF ;

 
  IF (_hub_id IS NOT NULL AND _org_id IS NOT NULL) THEN 

      SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.hub h ON du.hub_id = h.id
        INNER JOIN yp.map_role m ON  h.owner_id = m.uid
        WHERE m.org_id=_org_id INTO _u_hub_disk;
        
      SELECT 
        SUM(du.size) 
        FROM 
        yp.disk_usage du
        INNER JOIN yp.drumate d ON du.hub_id = d.id
        INNER JOIN yp.map_role m ON  d.id = m.uid
        WHERE  m.org_id=_org_id INTO _u_desk_disk;


    
    
    
    
    
    
    


      SELECT  IFNULL(_u_hub_disk , 0)  INTO _u_hub_disk;
      SELECT  IFNULL(_u_desk_disk , 0)  INTO _u_desk_disk;


      SELECT LEAST( _q_disk - _u_desk_disk - _u_hub_disk   , _q_hub_disk - _u_hub_disk ) INTO _l_disk;

  END IF ;


SELECT _hub_id  hub_id, _owner_id owner_id ,_quota quota ,_org_id org_id,
    _entity_id entity_id,_u_desk_disk used_desk_disk,_u_hub_disk used_hub_disk,
    _q_disk quota_disk,_q_desk_disk quota_desk_disk , _q_hub_disk  quota_hub_disk ,_l_disk  available_disk;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmail_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmail_exists`(
  IN _key VARCHAR(128)
)
BEGIN

  SELECT email, username FROM mailserver.users WHERE email=_key;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_add_media` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_add_media`(
  IN _id      VARCHAR(16) CHARACTER SET ascii,
  IN _hub_id   VARCHAR(16) CHARACTER SET ascii
)
BEGIN
  REPLACE INTO dmz_media (id, hub_id, `name`) 
    SELECT  _id, _hub_id, '';
  SELECT * FROM dmz_media WHERE id = _id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_add_user` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_add_user`(
  IN _email      VARCHAR(500),
  IN _name       VARCHAR(500)
)
BEGIN
  DECLARE _id  VARCHAR(16) ; 
  SELECT yp.uniqueId() INTO _id;
  SELECT id FROM dmz_user WHERE email = _email INTO _id; 
  IF _name IS NULL OR _name = '' THEN
    SELECT REPLACE(_email, concat('@',SUBSTRING_INDEX (_email, '@', -1)), "") INTO _name;
  END IF;
  REPLACE INTO dmz_user (id, email, `name`) 
    SELECT  _id, _email, _name;
  SELECT * FROM dmz_user WHERE id = _id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_add_user_x` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_add_user_x`(
  IN _email      VARCHAR(500),
  IN _name       VARCHAR(500),  
  IN _pw         VARCHAR(128), 
  IN _hub_id     VARCHAR(16), 
  IN _token      VARCHAR(64),
  IN _nid        VARCHAR(16)
)
BEGIN
  DECLARE _id  VARCHAR(16) ; 
  DECLARE _ts INT(11) DEFAULT 0;
  DECLARE _is_sync int(4);  
  DECLARE _old_token      VARCHAR(64);
  
  SELECT yp.uniqueId() INTO _id;
  SELECT id FROM dmz_userx WHERE email = _email LIMIT 1 INTO _id; 
  IF _name IS NULL OR _name = '' THEN
    SELECT REPLACE(_email, concat('@',SUBSTRING_INDEX (_email, '@', -1)), "") INTO _name;
  END IF;

    SELECT notify_at ,is_sync,token
    FROM yp.dmz_userx 
    WHERE id = _id AND email =_email
    AND hub_id = _hub_id AND nid =_nid  INTO _ts , _is_sync , _old_token;

  INSERT INTO dmz_userx (id, email, `name`, hub_id, token,nid) 
    SELECT  _id, _email, _name, _hub_id, _token,_nid
    ON DUPLICATE KEY UPDATE notify_at=_ts ,is_sync =_is_sync, token =_old_token; 
  IF _pw IS NOT NULL AND _pw NOT IN('') THEN 
    UPDATE dmz_userx SET fingerprint=sha2(_pw, 512) WHERE id=_id;
  END IF;
  SELECT * FROM dmz_userx WHERE id = _id AND   hub_id = _hub_id AND nid =_nid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_check_password` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_check_password`(
 IN _share_id VARCHAR(50),
 IN _recipient_id VARCHAR(16),
 IN _pw VARCHAR(2000),
 IN _sid varchar(64) 
)
BEGIN
  DECLARE _fingerprint varchar(128);
  SELECT fingerprint FROM yp.share WHERE id =_share_id INTO _fingerprint;
  

  UPDATE yp.cookie_share SET is_verified = 1 WHERE (_fingerprint = sha2(_pw, 512) OR  _fingerprint = _pw) 
    AND id = _sid AND share_id = _share_id AND  recipient_id = 'ffffffffffffffff';
  CALL dmz_check_link(_share_id, _recipient_id,_sid);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_grant` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_grant`(
  IN _hub_id    VARCHAR(16),
  IN _node_id   VARCHAR(16),
  IN _guest_id  VARCHAR(64),
  IN _token     VARCHAR(64),
  IN _pw        VARCHAR(250)
)
BEGIN
  DECLARE _ts INT(11) DEFAULT 0;
  DECLARE _is_sync int(4) DEFAULT 0;
  DECLARE _fingerprint VARCHAR(250) DEFAULT NULL;

  SELECT id,notify_at ,is_sync
    FROM dmz_token 
    WHERE hub_id=_hub_id AND node_id=_node_id AND guest_id=_guest_id
  INTO _token,_ts,_is_sync;

  IF _pw <> '' THEN 
    SELECT sha2(_pw, 512) INTO _fingerprint;
  END IF;

  REPLACE dmz_token (hub_id, node_id, guest_id, id, fingerprint, notify_at, is_sync) 
    SELECT _hub_id, _node_id, _guest_id, _token, _fingerprint, _ts, _is_sync;
     

  SELECT t.hub_id, node_id, guest_id, t.id token
    FROM dmz_token t 
    INNER JOIN dmz_user u on u.id=t.guest_id
    WHERE t.id = _token;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_grant_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_grant_next`(
  IN _hub_id    VARCHAR(16),
  IN _node_id   VARCHAR(16),
  IN _guest_id  VARCHAR(64),
  IN _token     VARCHAR(64),
  IN _pw        VARCHAR(250)
)
BEGIN
  DECLARE _ts INT(11) DEFAULT 0;
  DECLARE _is_sync int(4) DEFAULT 0;
  DECLARE _fingerprint VARCHAR(250) DEFAULT NULL;

  SELECT id,notify_at ,is_sync
    FROM dmz_token 
    WHERE hub_id=_hub_id AND node_id=_node_id AND guest_id=_guest_id
  INTO _token,_ts,_is_sync;

  IF _pw <> '' THEN 
    SELECT sha2(_pw, 512) INTO _fingerprint;
  END IF;

  REPLACE dmz_token (hub_id, node_id, guest_id, id, fingerprint, notify_at, is_sync) 
    SELECT _hub_id, _node_id, _guest_id, _token, _fingerprint, _ts, _is_sync;
     

  SELECT t.hub_id, node_id, guest_id, t.id token
    FROM dmz_token t 
    INNER JOIN dmz_user u on u.id=t.guest_id
    WHERE t.id = _token
  UNION 
  SELECT t.hub_id, node_id, guest_id, t.id token
    FROM dmz_token t 
    INNER JOIN dmz_media u on u.id=t.guest_id
    WHERE t.id = _token;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_info`(
  IN _token     VARCHAR(64)
)
BEGIN
  
  DECLARE _db_name VARCHAR(50); 
  DECLARE _uid VARCHAR(50); 
  DECLARE _nid VARCHAR(50); 
  DECLARE _owner_id VARCHAR(50); 
  DECLARE _fullname VARCHAR(150); 

  
  SELECT db_name FROM entity 
    WHERE id IN (SELECT hub_id FROM dmz_token t WHERE t.id = _token) 
    INTO _db_name;

  SELECT owner_id FROM yp.hub
    INNER JOIN entity USING(id)
    WHERE db_name=_db_name
    INTO _owner_id;

  IF _db_name IS NULL THEN 
    SELECT 1 failed, 'TICKET_INVALID' validity;
  ELSE 
    SELECT fullname FROM drumate
      WHERE id = _owner_id
      INTO _fullname;
    
    SELECT node_id, guest_id FROM dmz_token t
      WHERE t.id = _token
      INTO _nid, _uid;

    SET @s = CONCAT("SELECT ", _db_name,".user_permission(?,?) INTO @p");
    PREPARE stmt FROM @s;
    EXECUTE stmt USING _uid, _nid;
    DEALLOCATE PREPARE stmt;
    
    SET @s = CONCAT("SELECT ", _db_name,".user_expiry(?,?) INTO @e");
    PREPARE stmt FROM @s;
    EXECUTE stmt USING _uid, _nid;
    DEALLOCATE PREPARE stmt;


    SELECT t.hub_id, node_id, node_id nid, guest_id, guest_id uid, t.id token, 
      _owner_id sender_id, u.email,
      CASE WHEN utils.get('guest_id')  = guest_id THEN 1 ELSE 0 END  is_public,
      IF(t.fingerprint IS null, 0, 1) require_password, h.name title,
      _fullname `name`, _fullname `sender`, @p privilege, 
      IF(@e=0, 'TICKET_OK', 'TICKET_EXPIRED') validity
      FROM dmz_token t INNER JOIN dmz_user u on u.id=t.guest_id
      INNER JOIN hub h ON h.id = t.hub_id 
      WHERE t.id = _token;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_info_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_info_next`(
  IN _token     VARCHAR(64)
)
BEGIN
  

  DECLARE _db_name VARCHAR(50); 
  DECLARE _uid VARCHAR(50) CHARACTER SET ascii; 
  DECLARE _nid VARCHAR(50) CHARACTER SET ascii; 
  DECLARE _owner_id VARCHAR(50); 
  DECLARE _fullname VARCHAR(150); 
  DECLARE _is_user INT DEFAULT 0 ;
  
  SELECT db_name FROM entity 
    WHERE id IN (SELECT hub_id FROM dmz_token t WHERE t.id = _token) 
    INTO _db_name;

  SELECT owner_id FROM yp.hub
    INNER JOIN entity USING(id)
    WHERE db_name=_db_name
    INTO _owner_id;

  IF _db_name IS NULL THEN 
    SELECT 1 failed, 'TICKET_INVALID' validity;
  ELSE 
    SELECT CONCAT(firstname, ' ', IFNULL(lastname, '')) FROM drumate
      WHERE id = _owner_id
      INTO _fullname;
    
    SELECT node_id, guest_id FROM dmz_token t
      WHERE t.id = _token
      INTO _nid, _uid;

    SELECT 0 INTO _is_user; 
    SELECT 1 FROM dmz_user 
      WHERE id = _uid
      INTO _is_user;

    SET @s = CONCAT("SELECT ", _db_name,".user_permission(?,?) INTO @p");
    PREPARE stmt FROM @s;
    EXECUTE stmt USING _uid, _nid;
    DEALLOCATE PREPARE stmt;
    
    SET @s = CONCAT("SELECT ", _db_name,".user_expiry(?,?) INTO @e");
    PREPARE stmt FROM @s;
    EXECUTE stmt USING _uid, _nid;
    DEALLOCATE PREPARE stmt;


    SET @s = CONCAT("SELECT id FROM ", _db_name,".media WHERE parent_id='0' INTO @home_id");
    PREPARE stmt FROM @s;
    EXECUTE stmt ;
    DEALLOCATE PREPARE stmt;
 
    SET @s = CONCAT("SELECT IF(category = 'folder' , id,@home_id) 
      FROM ", _db_name,".media WHERE id =? INTO @home_id");
    PREPARE stmt FROM @s;
    EXECUTE stmt USING _nid;
    DEALLOCATE PREPARE stmt;

    IF _is_user = 1  THEN 
      SELECT 
        t.hub_id, 
        node_id, 
        node_id nid, 
        guest_id,
        guest_id uid, 
        t.id token, 
        _owner_id sender_id,
        _db_name db_name,
        u.email,
        CASE 
          WHEN utils.get('guest_id')  = guest_id THEN 1 
          ELSE 0 
        END  is_public,
        IF(t.fingerprint IS null, 0, 1) require_password, 
        h.name title,
        _fullname `name`,
        _fullname `sender`, 
        @p privilege, 
        IF(@e=0, 'TICKET_OK', 'TICKET_EXPIRED') validity, 
        _is_user is_user
      FROM dmz_token t INNER JOIN dmz_user u ON u.id=t.guest_id
        INNER JOIN hub h ON h.id = t.hub_id 
        WHERE t.id = _token;
    ELSE 
      SELECT 
        t.hub_id, 
        @home_id as node_id, 
        @home_id nid, 
        guest_id, 
        guest_id uid, 
        t.id token, 
        _owner_id sender_id, 
        _db_name db_name,
        u.id as email,
        CASE 
          WHEN utils.get('guest_id') = guest_id THEN 1 
          ELSE 0 
        END  is_public,
        IF(t.fingerprint IS null, 0, 1) require_password,
        h.name title,
        _fullname `name`, 
        _fullname `sender`,
        @p privilege, 
        IF(@e=0, 'TICKET_OK', 'TICKET_EXPIRED') validity,
        _is_user is_user
      FROM dmz_token t INNER JOIN dmz_media u on u.id=t.guest_id
        INNER JOIN hub h ON h.id = t.hub_id 
        WHERE t.id = _token;
    END IF; 
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_notify_list_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_notify_list_next`(
  IN _nid VARCHAR(50), _flag   VARCHAR(50)
)
BEGIN
  DECLARE _ts INT(11);
  
  SELECT UNIX_TIMESTAMP()INTO _ts;
  SELECT UNIX_TIMESTAMP()-43200 INTO _ts WHERE _flag = 'new' ;
  

  SELECT 
    hub_id,
    id ,
    email,
    notify_at
  FROM 
    yp.dmz_userx s
  WHERE s.nid = _nid AND  s.notify_at <= _ts ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_remove_media` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_remove_media`(
  IN _id      VARCHAR(16) CHARACTER SET ascii
 
)
BEGIN
 SELECT * FROM dmz_media WHERE id = _id;
 DELETE FROM dmz_media WHERE id = _id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_revoke` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_revoke`(
  IN _hub_id    VARCHAR(16) CHARACTER SET ascii,
  IN _node_id   VARCHAR(16) CHARACTER SET ascii,
  IN _guest_id  VARCHAR(64) CHARACTER SET ascii
)
BEGIN
 IF _guest_id IN ('') THEN 
   SELECT NULL INTO  _guest_id;
 END IF;

 SELECT * FROM dmz_token 
 WHERE hub_id=_hub_id AND node_id=_node_id AND guest_id=_guest_id;

 DELETE FROM dmz_token 
 WHERE hub_id=_hub_id AND node_id=_node_id AND guest_id=IFNULL(_guest_id,guest_id);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_session_check_cookie` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_session_check_cookie`(
 IN _share_id VARCHAR(50),
 IN _sid varchar(64),
 IN _hub_id varchar(16)    
)
BEGIN
  DECLARE _is_verified INT(4) DEFAULT 0;
  DECLARE _is_valid INT(4) DEFAULT 0;


  SELECT 1 FROM share WHERE id = _share_id  AND hub_id =_hub_id INTO _is_valid;
  IF _is_valid = 1 THEN  
      SELECT  is_verified FROM cookie_share WHERE id = _sid AND share_id=_share_id AND hub_id =_hub_id  INTO  _is_verified;
      INSERT INTO cookie_share(sys_id, id,share_id,hub_id)
      SELECT NULL, _sid,_share_id,_hub_id
      ON DUPLICATE KEY UPDATE is_verified =_is_verified ; 
      SELECT * FROM cookie_share WHERE id = _sid  AND hub_id = _hub_id;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_session_get_cookie` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_session_get_cookie`(
 IN _sid varchar(64),
 IN _hub_id varchar(16)  
)
BEGIN
 
  DECLARE _share_id VARCHAR(50);
  DECLARE _db VARCHAR(500);

   SELECT 
       share_id,s.hub_id
    FROM 
    cookie_share cs
    INNER JOIN share s  ON s.id = cs.share_id AND cs.hub_id = s.hub_id
    WHERE cs.id = _sid AND  cs.hub_id = _hub_id INTO _share_id,_hub_id ;


    SELECT db_name FROM entity WHERE id = _hub_id INTO _db;

    SET @st = CONCAT('CALL ', _db ,'.dmz_show_link_content(?,?)');
    PREPARE stamt FROM @st;
    EXECUTE stamt USING _share_id,_sid  ;
    DEALLOCATE PREPARE stamt; 
   

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_show_link_content` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_show_link_content`(
  IN _share_id VARCHAR(50),
  IN _sid varchar(64)
  
)
BEGIN
  DECLARE _vhost VARCHAR(255);
  DECLARE _hub_id VARCHAR(16);
  DECLARE _area VARCHAR(50);
  DECLARE _home_dir VARCHAR(512);
  DECLARE _home_id VARCHAR(16);
  DECLARE _src_db_name VARCHAR(50);
  DECLARE _accessibility VARCHAR(20);
  DECLARE _sender VARCHAR(255);
  DECLARE _sender_id VARCHAR(16);
  DECLARE _is_verified INT DEFAULT 0;
  DECLARE _recipient_id  VARCHAR(16) ;
  SELECT  'ffffffffffffffff'  INTO   _recipient_id ;

  SELECT  is_verified FROM yp.cookie_share 
    WHERE id = _sid  AND (share_id = _share_id  OR hub_id = _share_id)  
          AND  recipient_id =  _recipient_id
    INTO _is_verified;

  CALL mediaEnv(_vhost, _hub_id, _area, _home_dir, _home_id, _src_db_name, _accessibility);

  SELECT 
    s.recipient_id public_id, 
    m.id  AS nid,
    s.id share_id, 
    m.parent_id AS pid,
    m.parent_id AS parent_id,
    m.file_path as filepath,
    
    p.entity_id as recipient_id,
    _home_id  AS home_id,   
    _hub_id AS hub_id,
    ff.capability,
    m.user_filename AS filename,
    m.filesize AS filesize,
    m.caption,
    m.extension AS ext,
    m.category AS ftype,
    m.category AS filetype,
    m.mimetype,
    m.download_count AS view_count,
    m.geometry,
    m.upload_time AS ctime,
    p.permission,
    p.permission privilege,
    m.publish_time AS ptime,
    _vhost AS vhost,
    d.fullname AS sender,
    d.id AS sender_id,
    d.firstname,
    d.lastname,
    h.name,
    yp.duration_days(p.expiry_time) days,
    yp.duration_hours(p.expiry_time) hours,
    CASE 
      WHEN s.fingerprint IS NULL THEN 0 
      ELSE 1
    END is_password,
    CASE 
      WHEN s.fingerprint IS NULL THEN 1
      ELSE _is_verified
    END is_verified
  FROM media m
    LEFT JOIN yp.filecap ff ON m.extension=ff.extension
    INNER JOIN permission p ON m.id = p.resource_id
    INNER JOIN yp.share s ON s.permission_id=p.sys_id
    INNER JOIN yp.drumate d ON  s.uid=d.id 
    INNER JOIN yp.hub h ON h.id=s.hub_id
    
  WHERE (s.id = _share_id  OR s.hub_id = _share_id)  AND m.status = 'active';
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_update_expiry` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_update_expiry`(
  IN _hub_id    VARCHAR(16),
  IN _node_id   VARCHAR(16),
  IN _expiry    INTEGER
)
BEGIN
  
  DECLARE _ts INT(11) DEFAULT 0;
  DECLARE _tx INT(11) DEFAULT 0;
  DECLARE _db_name VARCHAR(30);
  DECLARE _owner_id VARCHAR(30);

  SELECT UNIX_TIMESTAMP() INTO _ts;  

  SELECT db_name FROM entity WHERE id=_hub_id 
    INTO _db_name;

  SELECT owner_id FROM hub WHERE id=_hub_id 
    INTO _owner_id;


  SELECT IF(IFNULL(_expiry, 0) = 0, 0,
    UNIX_TIMESTAMP(TIMESTAMPADD(HOUR,_expiry, FROM_UNIXTIME(_ts)))) INTO _tx;

  SET @s = CONCAT("UPDATE ", 
    _db_name,".permission SET ",
    " expiry_time=? ",
    "WHERE entity_id <> ? AND resource_id=?");
  PREPARE stmt FROM @s;
  EXECUTE stmt USING _tx, _owner_id, _node_id;
  DEALLOCATE PREPARE stmt; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_update_expiry_new` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_update_expiry_new`(
  IN _hub_id    VARCHAR(16),
  IN _node_id   VARCHAR(16),
  IN _mode      ENUM('limited' , 'infinity'),
  IN _expiry    INTEGER
)
BEGIN
  
  DECLARE _ts INT(11) DEFAULT 0;
  DECLARE _tx INT(11) DEFAULT 0;
  DECLARE _db_name VARCHAR(30);
  DECLARE _owner_id VARCHAR(30);

  SELECT UNIX_TIMESTAMP() INTO _ts;  

  SELECT db_name FROM entity WHERE id=_hub_id 
    INTO _db_name;

  SELECT owner_id FROM hub WHERE id=_hub_id 
    INTO _owner_id;

  SELECT IF(_mode ='infinity', 0,
      UNIX_TIMESTAMP(TIMESTAMPADD(HOUR,_expiry, FROM_UNIXTIME(_ts)))) INTO _tx;

  SET @s = CONCAT("UPDATE ", 
    _db_name,".permission SET ",
    " expiry_time=? ",
    "WHERE entity_id <> ? AND resource_id=? ");
  PREPARE stmt FROM @s;
  EXECUTE stmt USING _tx, _owner_id, _node_id;
  DEALLOCATE PREPARE stmt; 


  SET @s = CONCAT("UPDATE ", 
    _db_name,".permission p",
    " INNER JOIN ",_db_name ,".media m ON m.id = p.entity_id 
     INNER JOIN yp.dmz_media d ON m.id=d.id 
    SET p.expiry_time= ?
    WHERE d.hub_id =?");
  PREPARE stmt FROM @s;
  EXECUTE stmt USING _tx,   _hub_id;
  DEALLOCATE PREPARE stmt;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_update_expiry_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_update_expiry_next`(
  IN _hub_id    VARCHAR(16),
  IN _node_id   VARCHAR(16),
  IN _expiry    INTEGER
)
BEGIN
  
  DECLARE _ts INT(11) DEFAULT 0;
  DECLARE _tx INT(11) DEFAULT 0;
  DECLARE _db_name VARCHAR(30);
  DECLARE _owner_id VARCHAR(30);

  SELECT UNIX_TIMESTAMP() INTO _ts;  

  SELECT db_name FROM entity WHERE id=_hub_id 
    INTO _db_name;

  SELECT owner_id FROM hub WHERE id=_hub_id 
    INTO _owner_id;


  SELECT IF(IFNULL(_expiry, 0) = 0, 0,
    UNIX_TIMESTAMP(TIMESTAMPADD(HOUR,_expiry, FROM_UNIXTIME(_ts)))) INTO _tx;

  SET @s = CONCAT("UPDATE ", 
    _db_name,".permission SET ",
    " expiry_time=? ",
    "WHERE entity_id <> ? AND resource_id=? ");
  PREPARE stmt FROM @s;
  EXECUTE stmt USING _tx, _owner_id, _node_id;
  DEALLOCATE PREPARE stmt; 


  SET @s = CONCAT("UPDATE ", 
    _db_name,".permission p",
    " INNER JOIN ",_db_name ,".media m ON m.id = p.entity_id 
     INNER JOIN yp.dmz_media d ON m.id=d.id 
    SET p.expiry_time= ?
    WHERE d.hub_id =?");
  PREPARE stmt FROM @s;
  EXECUTE stmt USING _tx,   _hub_id;
  DEALLOCATE PREPARE stmt;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_update_notify` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_update_notify`(
  IN _token VARCHAR(120)
)
BEGIN
  DECLARE _ts INT(11);
  UPDATE dmz_token SET notify_at = UNIX_TIMESTAMP()
  WHERE id = _token;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_update_notify_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_update_notify_next`(
  IN _share_id VARCHAR(50), 
  IN _recipient_id   VARCHAR(16)
)
BEGIN
  DECLARE _ts INT(11);
  UPDATE yp.map_share s SET notify_at = UNIX_TIMESTAMP()
  WHERE recipient_id = _recipient_id 
  AND share_id = _share_id; 

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_update_password` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_update_password`(
  IN _hub_id    VARCHAR(16),
  IN _node_id   VARCHAR(16),
  IN _pw        VARCHAR(250)
)
BEGIN
  UPDATE dmz_token 
    SET fingerprint=sha2(IF(_pw='', NULL, _pw), 512)
  WHERE 
    hub_id=_hub_id ;  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_update_permission` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_update_permission`(
  IN _hub_id    VARCHAR(16),
  IN _node_id   VARCHAR(16),
  IN _permission  INTEGER
)
BEGIN
  DECLARE _db_name VARCHAR(30);
  DECLARE _owner_id VARCHAR(30);
  
  SELECT db_name FROM entity WHERE id=_hub_id 
    INTO _db_name;

  SELECT owner_id FROM hub WHERE id=_hub_id 
    INTO _owner_id;
 
  SELECT cast(_permission as unsigned) INTO @perm;

  SET @s = CONCAT("UPDATE ", 
    _db_name,".permission SET ",
    "permission=?  "
    "WHERE entity_id <> ? AND resource_id=?");
  PREPARE stmt FROM @s;
  EXECUTE stmt USING  @perm, _owner_id, _node_id;
  DEALLOCATE PREPARE stmt; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_update_permission_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_update_permission_next`(
  IN _hub_id    VARCHAR(16),
  IN _node_id   VARCHAR(16),
  IN _permission  INTEGER
)
BEGIN
  DECLARE _db_name VARCHAR(30);
  DECLARE _owner_id VARCHAR(30);
  
  SELECT db_name FROM entity WHERE id=_hub_id 
    INTO _db_name;

  SELECT owner_id FROM hub WHERE id=_hub_id 
    INTO _owner_id;
 
  SELECT cast(_permission as unsigned) INTO @perm;

  SET @s = CONCAT("UPDATE ", 
    _db_name,".permission SET ",
    "permission=?  "
    "WHERE entity_id <> ? AND resource_id=? AND  assign_via <> 'no_traversal' ");
  PREPARE stmt FROM @s;
  EXECUTE stmt USING  @perm, _owner_id, _node_id;
  DEALLOCATE PREPARE stmt; 

  SET @s = CONCAT("UPDATE ", 
    _db_name,".permission p",
    " INNER JOIN ",_db_name ,".media m ON m.id = p.entity_id 
     INNER JOIN yp.dmz_media d ON m.id=d.id 
    SET p.permission= IF( m.category <> 'folder' AND @perm > 3 , 3 ,@perm )
    WHERE d.hub_id =?");
  PREPARE stmt FROM @s;
  EXECUTE stmt USING   _hub_id;
  DEALLOCATE PREPARE stmt;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_update_settings` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_update_settings`(
  IN _hub_id      VARCHAR(16),
  IN _node_id     VARCHAR(16),
  IN _fingerprint VARCHAR(250),
  IN _expiry      INT(11),
  IN _permission  INTEGER
)
BEGIN

  DECLARE _db_name VARCHAR(30);
  DECLARE _owner_id VARCHAR(30);

  UPDATE dmz_token 
    SET fingerprint=IF(_fingerprint='', NULL, _fingerprint)
  WHERE 
    hub_id=_hub_id;  
  
  SELECT db_name FROM entity WHERE id=_hub_id 
    INTO _db_name;

  SELECT owner_id FROM hub WHERE id=_hub_id 
    INTO _owner_id;

  SET @s = CONCAT("UPDATE ", 
    _db_name,".permission SET ",
    "permission=?, expiry_time=? ",
    "WHERE entity_id <> ? AND resource_id=?");
  PREPARE stmt FROM @s;
  EXECUTE stmt USING _permission, _expiry, _owner_id, _node_id;
  DEALLOCATE PREPARE stmt;  


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `dmz_update_sync` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `dmz_update_sync`(
  IN _token VARCHAR(100), 
  IN _value INT(4)
)
BEGIN
  DECLARE _ts INT(11);
  UPDATE `dmz_token` SET is_sync = _value
  WHERE id = _token; 

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `domain_create` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `domain_create`(
  IN _name VARCHAR(1000)
)
BEGIN
  DECLARE _domain_id INT(10); 
  SELECT CONCAT(_name,".", utils.domain_name()) INTO _name;
  INSERT INTO domain (name) SELECT _name ; 
  SELECT id FROM domain WHERE name = _name INTO _domain_id;
  SELECT  * FROM domain WHERE id = _domain_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `domain_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `domain_exists`(
  IN _key VARCHAR(1000)
)
BEGIN
   DECLARE _domain_id INT(10); 
   SELECT * FROM domain WHERE name = _key  or id = _key ; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `domain_grant` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `domain_grant`(
  IN _domain_id INT,
  IN _privilege TINYINT(4),
  IN _uid VARCHAR(16),
  IN _show_results    BOOLEAN

)
BEGIN
   
  INSERT IGNORE INTO privilege (uid,privilege,domain_id)
  VALUES( _uid,_privilege, _domain_id)
  ON DUPLICATE KEY UPDATE privilege=_privilege , domain_id = _domain_id ;
  
  IF IFNULL(_show_results, 0) != 0  THEN
     SELECT p.* FROM privilege p WHERE p.uid =_uid AND domain_id = _domain_id;
  END IF ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `domain_privilege` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `domain_privilege`(
  IN _domain_id INT,
  IN _uid VARCHAR(16)
)
BEGIN
    DECLARE _privilege TINYINT(4) DEFAULT  0;
    DECLARE _is_authoritative TINYINT(4) DEFAULT  0;
    SELECT privilege ,is_authoritative FROM privilege WHERE uid = _uid  AND domain_id = _domain_id INTO _privilege , _is_authoritative ; 
    SELECT _privilege privilege, _is_authoritative is_authoritative;
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `domain_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `domain_update`(
  IN _name VARCHAR(1000),
  IN _domain_id INT(10)
)
BEGIN
  SELECT CONCAT(_name,".", utils.domain_name()) INTO _name;
  UPDATE domain SET name= _name WHERE id = _domain_id;
  SELECT  * FROM domain WHERE id = _domain_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `domain_users` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `domain_users`(
  IN _domain VARCHAR(90)  CHARACTER SET ascii
)
BEGIN
  SELECT 
    p.privilege, 
    IF(p.privilege = 63, "ADMIN", "USER") `role`,
    t.id token, 
    p.uid id, 
    p.uid, 
    t.username, 
    domain, 
    fqdn host
    FROM token t
    INNER JOIN yp.drumate d ON d.id=t.uid
    INNER JOIN yp.vhost v ON v.id=t.uid
    INNER JOIN yp.privilege p ON p.uid=d.id
  WHERE t.domain=_domain;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `domain_user_role` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `domain_user_role`(
  IN _domain_id INT(10),
  IN _uid VARCHAR(16)
)
BEGIN
  SELECT
    r.id role_id,
    r.name role_name 
  FROM 
  map_role mr 
  INNER JOIN role r ON r.id = mr.role_id 
  WHERE  
  r.domain_id =  _domain_id  AND 
  mr.uid =_uid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_change_email` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_change_email`(
  IN _id      VARBINARY(16),
  IN _email   VARCHAR(255)
)
BEGIN
  
  UPDATE drumate SET profile = JSON_SET(profile, '$.email', _email)  WHERE id=_id;
  SELECT id, profile, firstname, lastname, quota, home_dir FROM drumate INNER JOIN entity USING (id) WHERE id = _id;
 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_change_mobile` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_change_mobile`(
  IN _id      VARBINARY(16),
  IN _mobile   VARCHAR(255)
)
BEGIN
  
  UPDATE drumate SET profile = JSON_SET(profile, '$.mobile', _mobile)  WHERE id=_id;
  SELECT id, profile, firstname, lastname, quota, home_dir FROM drumate INNER JOIN entity USING (id) WHERE id = _id;
 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_change_otp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_change_otp`(
  IN _key   VARCHAR(255),
  IN _value BOOLEAN 
)
BEGIN
  
  UPDATE drumate SET profile = JSON_SET(profile, "$.otp", _value)  
    WHERE id=_key OR email=_key;
  SELECT id, JSON_VALUE(profile, "$.otp") otp, firstname, lastname, home_dir 
    FROM drumate INNER JOIN entity USING (id) 
    WHERE id=_key OR email=_key;
 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_change_username` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_change_username`(
  IN _id      VARBINARY(16),
  IN _username   VARCHAR(80)
)
BEGIN
  DECLARE _domain_name    VARCHAR(500);
  DECLARE _fqdn    VARCHAR(500);
  
  UPDATE drumate SET username = _username  WHERE id=_id;
  SELECT id, profile, firstname, lastname, quota, home_dir 
    FROM drumate INNER JOIN entity USING (id) WHERE id = _id;

  SELECT d.name FROM domain d INNER JOIN drumate dr ON dr.domain_id = d.id 
    WHERE dr.id=_id INTO _domain_name;

  SELECT CONCAT(_username, 
    IF(_domain_name = utils.domain_name(), '-u.', '-u-'), _domain_name) INTO _fqdn;

  UPDATE vhost set fqdn=_fqdn WHERE id=_id; 

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_check` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_check`(
  IN _id          VARCHAR(160)
)
BEGIN
  DECLARE _drumate_id VARBINARY(16);
  SELECT id FROM drumate WHERE id = _id OR email = _id INTO _drumate_id;
  IF (IFNULL(_drumate_id, "") = "") THEN
    SELECT 0 AS drumate;
  ELSE
    SELECT 1 AS drumate;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_create` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_create`(
  IN _pw VARCHAR(225),   
  IN _profile TEXT
)
BEGIN
   
  DECLARE _firstname VARCHAR(255);
  DECLARE _lastname  VARCHAR(255);    
  DECLARE _email     VARCHAR(500);
  DECLARE _mobile    VARCHAR(30) ;     
  DECLARE _address   VARCHAR(500);
  DECLARE _city      VARCHAR(80);  
  DECLARE _country   VARCHAR(80);  
  DECLARE _dob       VARCHAR(80);
  DECLARE _domain    VARCHAR(500);
  DECLARE _domain_id  INT(11) UNSIGNED;

  DECLARE _home_dir     VARCHAR(1024);
  DECLARE _home_id      VARCHAR(16);
  DECLARE _dru_fqdn     VARCHAR(1024);
  DECLARE _dru_id       VARCHAR(16);
  DECLARE _dru_lang     VARCHAR(16);
  DECLARE _dru_db       VARCHAR(50);
  DECLARE _category     VARCHAR(50);
  DECLARE _now          INT(11);
  DECLARE _fingerprint  VARCHAR(255);  
  DECLARE _username     VARCHAR(80);
  DECLARE _privilege    TINYINT(4) DEFAULT 3;
  DECLARE _quota        JSON;
  DECLARE _uniqueid     VARCHAR(16);
  DECLARE _quota_key    VARCHAR(16);
  DECLARE _icon VARCHAR(1024) DEFAULT "/-/images/logo/desk.jpg";

  DECLARE _rollback BOOL DEFAULT 0;   
  DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
  BEGIN
    SET _rollback = 1;  
    GET DIAGNOSTICS CONDITION 1 
      @sqlstate = RETURNED_SQLSTATE, 
      @errno = MYSQL_ERRNO, 
      @text = MESSAGE_TEXT;
    SET @full_error = CONCAT("ERROR: ", @errno, " (", @sqlstate, "): ", @text);
  END;

  SELECT UNIX_TIMESTAMP() INTO _now;
  SELECT JSON_VALUE(_profile, "$.domain") INTO _domain;
  SELECT JSON_VALUE(_profile, "$.domain_id") INTO _domain_id;
  SELECT JSON_VALUE(_profile, "$.username") INTO _username;
  SELECT JSON_VALUE(_profile, "$.firstname") INTO _firstname;
  SELECT JSON_VALUE(_profile, "$.lastname") INTO _lastname; 
  SELECT JSON_VALUE(_profile, "$.lang") INTO _dru_lang; 
  SELECT JSON_VALUE(_profile, "$.email") INTO _email; 
  SELECT JSON_VALUE(_profile, "$.mobile") INTO _mobile; 
  SELECT JSON_VALUE(_profile, "$.address") INTO _address; 
  SELECT JSON_VALUE(_profile, "$.city") INTO _city; 
  SELECT JSON_VALUE(_profile, "$.country") INTO _country; 
  SELECT JSON_VALUE(_profile, "$.dob") INTO _dob;  
  SELECT CAST(IFNULL(JSON_VALUE(_profile, "$.privilege"), 1) AS INTEGER) INTO _privilege;  
  SELECT IFNULL(JSON_VALUE(_profile, "$.category"), 'user') INTO _category;  

  SELECT id, `name` FROM yp.domain WHERE `name`=_domain OR id=_domain_id 
    INTO _domain_id, _domain;
  
  SELECT sha2(_pw, 512) INTO _fingerprint;

  CALL pickupEntity('drumate', _dru_id, _dru_db);
  SELECT unique_username(_username, _domain) INTO _username;
  SELECT CONCAT(_username, 
    IF(_domain = main_domain(), '-u.', '-u-'), _domain) INTO _dru_fqdn;

  START TRANSACTION;
  IF _dru_id IS NOT NULL AND _domain_id IS NOT NULL THEN
    INSERT INTO drumate(
      id, username, profile, fingerprint, remit, domain_id)
    VALUES(
      _dru_id, _username, _profile, _fingerprint,  0, _domain_id
    );

    INSERT IGNORE INTO privilege (uid, privilege, domain_id)
    VALUES(_dru_id, _privilege, _domain_id)
    ON DUPLICATE KEY UPDATE privilege=_privilege;

    SELECT conf_value FROM sys_conf WHERE conf_key='icon' INTO _icon;

    UPDATE entity SET 
      area='personal', 
      status='active', 
      type='drumate', 
      dom_id =_domain_id, 
      ctime=UNIX_TIMESTAMP(),
      mtime=UNIX_TIMESTAMP(),
      accessibility='personal',
      icon=_icon
    WHERE id=_dru_id;
    SELECT home_dir, home_id FROM entity WHERE id=_dru_id INTO _home_dir, _home_id;
    INSERT INTO vhost VALUES (null, _dru_fqdn, _dru_id, _domain_id);

    SET @s = CONCAT("CALL `", _dru_db, "`.permission_grant('*', ?, 0, 63, 'system', '')");
    PREPARE stmt FROM @s;
    EXECUTE stmt USING _dru_id;
    DEALLOCATE PREPARE stmt;

    SET @s = CONCAT("CALL `", _dru_db, "`.permission_grant('*', '*', 0, 0, 'system', 'personal-access')");
    PREPARE stmt FROM @s;
    DEALLOCATE PREPARE stmt;

    SET @st1 = CONCAT("CALL ", _dru_db, ".mfs_trash_init()");
    PREPARE stmt1 FROM @st1;
    EXECUTE stmt1;           
    DEALLOCATE PREPARE stmt1;

    SET @st1 = CONCAT("CALL ", _dru_db, ".mfs_chat_init()");
    PREPARE stmt1 FROM @st1;
    EXECUTE stmt1;           
    DEALLOCATE PREPARE stmt1; 

    IF _category IN ("user", "regular") THEN
      SELECT  uniqueId() INTO _uniqueid;
      SET @st1 = CONCAT("CALL ", _dru_db, ".desk_create_hub(?,?)");
      PREPARE stmt1 FROM @st1;
      EXECUTE stmt1 USING  
        JSON_OBJECT("ident", _uniqueid, "name","My wicket", "area", 'dmz', "owner_id", _dru_id),
        JSON_OBJECT("is_wicket",1);        
      DEALLOCATE PREPARE stmt1;
    END IF;

  ELSE
    ROLLBACK;
    SELECT 2 failed, "EMPTY_FACTORY" AS reason;
  END IF;

  IF _rollback THEN
    ROLLBACK;
    SELECT 1 as failed, _dru_db db_name, @full_error AS reason;
  ELSE
    COMMIT;
  END IF;

  SELECT 
    JSON_OBJECT(
      'id', _dru_id, 
      'uid', _dru_id, 
      'username', _username, 
      'db_name', _dru_db, 
      'vhost', _dru_fqdn,
      'domain_id', _domain_id,
      'domain_name', _domain,
      'home_dir', _home_dir, 
      'home_id', _home_id
    ) drumate,
    _rollback failed;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_create1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_create1`(
   IN _pw VARCHAR(225),   
   IN _profile TEXT
)
BEGIN
   
  DECLARE _firstname VARCHAR(255);
  DECLARE _lastname  VARCHAR(255);    
  DECLARE _email     VARCHAR(500);
  DECLARE _mobile    VARCHAR(30) ;     
  DECLARE _address   VARCHAR(500);
  DECLARE _city      VARCHAR(80);  
  DECLARE _country   VARCHAR(80);  
  DECLARE _dob       VARCHAR(80);

    
  DECLARE _dru_fqdn     VARCHAR(1024);
  DECLARE _dru_id       VARCHAR(16);
  DECLARE _dru_lang     VARCHAR(16);
  DECLARE _dru_db       VARCHAR(50);
  DECLARE _dru_type     VARCHAR(50);
  DECLARE _now          INT(11);
  DECLARE _fingerprint  VARCHAR(255);  

  
  DECLARE _hubname    VARCHAR(80);  
  DECLARE _sbx_fqdn     VARCHAR(1024);  
  DECLARE _sbx_id       VARCHAR(16);
  DECLARE _sbx_db       VARCHAR(50); 
  DECLARE _sbx_root_id  VARCHAR(16); 

  
  DECLARE _origin_id      VARCHAR(16);   
  DECLARE _file_name      VARCHAR(512); 
  DECLARE _category       VARCHAR(50);   
  DECLARE _extension      VARCHAR(100); 
  DECLARE _mimetype       VARCHAR(100);      
  DECLARE _file_size      INT(20) UNSIGNED;
  DECLARE _geometry       VARCHAR(200);       
  DECLARE _status         VARCHAR(50); 
  DECLARE _domain_name    VARCHAR(500);
  DECLARE _domain_id      INT(11) UNSIGNED DEFAULT 1;
  DECLARE _username       VARCHAR(80);
  DECLARE _privilege      TINYINT(4) DEFAULT 3;
  DECLARE _quota          JSON;

  
  DECLARE _rollback BOOL DEFAULT 0;   
  
  DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _rollback = 1;  

  SELECT UNIX_TIMESTAMP() INTO _now;
  SELECT IFNULL(get_json_object(_profile, "domain"), (SELECT `name` FROM domain WHERE id=1)) 
    INTO _domain_name;
  SELECT JSON_VALUE(_profile, "$.username") INTO _username;
  SELECT JSON_VALUE(_profile, "$.sharebox") INTO _hubname;
  SELECT JSON_VALUE(_profile, "$.firstname") INTO _firstname;
  SELECT JSON_VALUE(_profile, "$.lastname") INTO _lastname; 
  SELECT JSON_VALUE(_profile, "$.lang") INTO _dru_lang; 
  SELECT JSON_VALUE(_profile, "$.email") INTO _email; 
  SELECT JSON_VALUE(_profile, "$.mobile") INTO _mobile; 
  SELECT JSON_VALUE(_profile, "$.address") INTO _address; 
  SELECT JSON_VALUE(_profile, "$.city") INTO _city; 
  SELECT JSON_VALUE(_profile, "$.country") INTO _country; 
  SELECT JSON_VALUE(_profile, "$.dob") INTO _dob;  
  SELECT CAST(IFNULL(JSON_VALUE(_profile, "$.privilege"), 1) AS INTEGER) INTO _privilege;  
  SELECT IFNULL(JSON_VALUE(_profile, "$.category"), 'individual') INTO _dru_type;  

  SELECT IF(count(*), id, 1), IF(count(*), `name`, 1) 
    FROM domain WHERE `name`=_domain_name INTO _domain_id, _domain_name;

  SELECT sha2(_pw, 512) INTO _fingerprint;

  SELECT conf_value FROM sys_conf WHERE conf_key='quota' INTO _quota;
  IF JSON_VALUE(_profile, "$.quota") IS NULL THEN 
    SET _profile = JSON_SET(_profile, "$.quota", _quota);
  END IF;
  
  
  CALL pickupEntity_next('drumate', _dru_id, _dru_db);
  SELECT unique_username(_username, _domain_name) INTO _username;
  
  

  
  CALL pickupEntity_next('hub', _sbx_id, _sbx_db);
  SELECT unique_ident(_hubname) INTO _hubname;
  
  SELECT CONCAT(_hubname, '.', utils.domain_name()) INTO _sbx_fqdn;

  
  
SELECT _rollback ,10;
  START TRANSACTION;
    IF _dru_id IS NOT NULL AND _sbx_id IS NOT NULL  THEN
SELECT _rollback ,9;
    INSERT INTO drumate(
        id, username, profile, fingerprint, remit, domain_id)
      VALUES(
        _dru_id, _username, _profile, _fingerprint,  0, _domain_id
      );
SELECT _rollback ,8;

    INSERT IGNORE INTO privilege (uid, privilege, domain_id)
    VALUES(_dru_id, _privilege, _domain_id)
    ON DUPLICATE KEY UPDATE privilege=_privilege;
SELECT _rollback ,7;

    UPDATE entity SET 
      area='personal', 
      status='active', 
      type='drumate', 
      
      dom_id =_domain_id, 
      ctime=UNIX_TIMESTAMP(),
      mtime=UNIX_TIMESTAMP(),
      accessibility='personal' 
    WHERE id=_dru_id;
SELECT _rollback ,6;
    
    INSERT INTO vhost VALUES (null, _sbx_fqdn, _sbx_id, 1);
    
SELECT _rollback ,5;
    
    SET @st1 = CONCAT("CALL ", _dru_db, ".desk_create_sharebox(?,?)");
    PREPARE stmt1 FROM @st1;
    EXECUTE stmt1 USING _dru_id, _sbx_id;           
    DEALLOCATE PREPARE stmt1;
SELECT _rollback ,4;
   SET @st1 = CONCAT("CALL ", _dru_db, ".mfs_memberload_init()");
    PREPARE stmt1 FROM @st1;
    EXECUTE stmt1;           
    DEALLOCATE PREPARE stmt1;
SELECT _rollback ,3;
    SET @st1 = CONCAT("CALL ", _dru_db, ".mfs_trash_init()");
    PREPARE stmt1 FROM @st1;
    EXECUTE stmt1;           
    DEALLOCATE PREPARE stmt1;
SELECT _rollback ,2;
    SET @st1 = CONCAT("CALL ", _dru_db, ".mfs_chat_init()");
    PREPARE stmt1 FROM @st1;
    EXECUTE stmt1;           
    DEALLOCATE PREPARE stmt1; 
SELECT _rollback ,1;
    SET @st1 = CONCAT("CALL ", _sbx_db, ".sharebox_init(?)");
    PREPARE stmt1 FROM @st1;
    EXECUTE stmt1 USING _dru_id;           
    DEALLOCATE PREPARE stmt1;

SELECT _rollback;

    INSERT INTO hub SELECT 
        null, 
      _sbx_id, 
      _hubname, 
      _domain_id, 
      _dru_id, 
      _dru_id, 
      _sbx_fqdn ,  
      concat(_firstname, "'s sharebox"), '', '', 'Sharebox', 1, null;
SELECT _rollback;
    UPDATE entity SET area = 'restricted', type='hub', status='active', 
    dom_id =_domain_id WHERE id =_sbx_id;
SELECT _rollback;
  ELSE
    SELECT 2 failed;
  END IF;

  IF _rollback THEN
    ROLLBACK;
  ELSE
    COMMIT;
  END IF;

  SELECT 
    JSON_OBJECT
    ('id', _dru_id, 'username', _username, 'db_name', _dru_db, 'vhost', _dru_fqdn) drumate,
    JSON_OBJECT
    ('id', _sbx_id, 'hubname', _hubname, 'db_name', _sbx_db, 'vhost', _sbx_fqdn) sharebox,
    _rollback failed;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_create_c` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_create_c`(
   IN _pw VARCHAR(225),   
   IN _profile TEXT
)
BEGIN
   
  DECLARE _firstname VARCHAR(255);
  DECLARE _lastname  VARCHAR(255);    
  DECLARE _email     VARCHAR(500);
  DECLARE _mobile    VARCHAR(30) ;     
  DECLARE _address   VARCHAR(500);
  DECLARE _city      VARCHAR(80);  
  DECLARE _country   VARCHAR(80);  
  DECLARE _dob       VARCHAR(80);

    
  DECLARE _dru_fqdn     VARCHAR(1024);
  DECLARE _dru_id       VARCHAR(16);
  DECLARE _dru_ident    VARCHAR(80);
  DECLARE _dru_lang     VARCHAR(16);
  DECLARE _dru_db       VARCHAR(50);
  DECLARE _dru_type     VARCHAR(50);
  DECLARE _now          INT(11);
  DECLARE _fingerprint  VARCHAR(255);  

  
  DECLARE _sbx_ident    VARCHAR(80);  
  DECLARE _sbx_fqdn     VARCHAR(1024);  
  DECLARE _sbx_id       VARCHAR(16);
  DECLARE _sbx_db       VARCHAR(50); 
  DECLARE _sbx_root_id  VARCHAR(16); 

  
  DECLARE _origin_id      VARCHAR(16);   
  DECLARE _file_name      VARCHAR(512); 
  DECLARE _category       VARCHAR(50);   
  DECLARE _extension      VARCHAR(100); 
  DECLARE _mimetype       VARCHAR(100);      
  DECLARE _file_size      INT(20) UNSIGNED;
  DECLARE _geometry       VARCHAR(200);       
  DECLARE _status         VARCHAR(50); 
  DECLARE _domain_name    VARCHAR(500);
  DECLARE _ident          VARCHAR(80);

  
  DECLARE _rollback BOOL DEFAULT 0;   
  
  DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _rollback = 1;  

  SELECT UNIX_TIMESTAMP() INTO _now;
    
  SELECT read_json_object(_profile, "ident") INTO _ident;
  SELECT read_json_object(_profile, "firstname") INTO _firstname;
  SELECT read_json_object(_profile, "lastname") INTO _lastname; 
  SELECT read_json_object(_profile, "lang") INTO _dru_lang; 
  SELECT read_json_object(_profile, "email") INTO _email; 
  SELECT read_json_object(_profile, "mobile") INTO _mobile; 
  SELECT read_json_object(_profile, "address") INTO _address; 
  SELECT read_json_object(_profile, "city") INTO _city; 
  SELECT read_json_object(_profile, "country") INTO _country; 
  SELECT read_json_object(_profile, "dob") INTO _dob;  
  SELECT IFNULL(JSON_UNQUOTE(JSON_EXTRACT(_profile, "$.category")), 'individual') INTO _dru_type;  
  SELECT sha2(_pw, 512) INTO _fingerprint;

     select -3 ,_rollback;
  START TRANSACTION;

    select -2  ,_rollback;
  
  CALL pickupEntity(
    _dru_lang, 'drumate', _ident, _dru_id, _dru_ident, _dru_db, _domain_name, _dru_fqdn
  );
  IF _ident IS NOT NULL THEN 
    SELECT unique_ident(_ident) INTO _dru_ident;
  END IF;
  
  select -1  ,_rollback;

  
  CALL pickupEntity(
    _dru_lang, 'hub', null, _sbx_id, _sbx_ident, _sbx_db, _domain_name, _sbx_fqdn
  );

select 0  ,_rollback;
  
  


  IF _dru_id IS NOT NULL AND _sbx_id IS NOT NULL  THEN
    
    
      
    
    
    
    
    
    
    
    
    
    


  INSERT INTO drumate(
      id,  profile, fingerprint,  remit,domain_id )
    VALUES(
      _dru_id, _profile, _fingerprint,  0 ,1
    );

select 1  ,_rollback;

    UPDATE entity SET 
      area='personal', 
      ident=_dru_ident, 
      status='active', 
      type='drumate', 
      vhost=_dru_fqdn, 
      ctime=UNIX_TIMESTAMP(),
      mtime=UNIX_TIMESTAMP(),
      accessibility='personal' 
    WHERE id=_dru_id;
  select 2  ,_rollback;
  

    INSERT INTO vhost VALUES (null, _dru_fqdn, _dru_id, _domain_name);
    
      
     select 3  ,_rollback;  
      
    
    
    
    SET @s = CONCAT("CALL `", _dru_db, "`.permission_grant('*', ?, 0, 63, 'system', '');");
    PREPARE stmt FROM @s;
    EXECUTE stmt USING _dru_id;
    DEALLOCATE PREPARE stmt;   

     select 4  ,_rollback;  
    
    
    
    
    

      
      
    SET @s = CONCAT(
      "SELECT id FROM ", _sbx_db, ".media WHERE extension = 'root' INTO @sbx_root_id");
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
     select 5  ,_rollback; 

    SET @s = CONCAT("DELETE FROM ", _sbx_db, ".media WHERE id<> @sbx_root_id");
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
     select 6  ,_rollback; 
      
    SELECT _sbx_id,'__Inbound__', 'folder', 'inbound', 'share', 0 ,'na' 
      INTO _origin_id,_file_name,_category,_extension,_mimetype,_file_size,_geometry;   
 select 7  ,_rollback; 

    SET @st = CONCAT("CALL ", _sbx_db, ".mfs_new_node(?,?,?,?,?,?,?,?,?,?)");
    PREPARE stmt2 FROM @st;
    EXECUTE stmt2 USING 
      _origin_id     ,
      _origin_id           ,
      _file_name     ,
      @sbx_root_id ,
      _category      ,
      _extension     ,
      _mimetype      ,
      _geometry      ,
      _file_size     , 
      0;           
    DEALLOCATE PREPARE stmt2;

     select 8  ,_rollback; 
    
    SELECT _sbx_id,'__Outbound__', 'folder', 'outbound', 'share', 0 ,'na' 
      INTO _origin_id,_file_name,_category,_extension,_mimetype,_file_size,_geometry;   
    
    SET @st = CONCAT("CALL ", _sbx_db, ".mfs_new_node(?,?,?,?,?,?,?,?,?,?)");
    PREPARE stmt2 FROM @st;
    EXECUTE stmt2 USING 
      _origin_id     ,
      _origin_id           ,
      _file_name     ,
      @sbx_root_id ,
      _category      ,
      _extension     ,
      _mimetype      ,
      _geometry      ,
      _file_size     , 
      0;           
    DEALLOCATE PREPARE stmt2;
 select 9  ,_rollback; 
    
    SET @s = CONCAT(
      "CALL `", _sbx_db, "`.permission_grant('*', ?, 0, 63, 'system', '');"
    );
    PREPARE stmt FROM @s;
    EXECUTE stmt USING _dru_id;
    DEALLOCATE PREPARE stmt;
 select 10  ,_rollback; 
    
    
    
    
    
    
    

    SET @s = CONCAT(
      "CALL `", _sbx_db, "`.permission_grant('*', '*', 0, 1, 'system', '');"
    );
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
     select 11  ,_rollback; 

    SET @s = CONCAT(
      "CALL `", _sbx_db, "`.mfs_trash_init();"
    );

 select 12  ,_rollback; 
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
 select 13  ,_rollback; 
    SET @s = CONCAT(
      "CALL `", _dru_db, "`.mfs_chat_init();"
    );
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
     select 14  ,_rollback; 

    SET @s = CONCAT(
      "CALL `", _dru_db, "`.mfs_trash_init();"
    );
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
     select 15 ,_rollback; 


    REPLACE INTO share_box VALUES(null, _sbx_id, _dru_id, @sbx_root_id);
    REPLACE INTO vhost VALUES (null, _sbx_fqdn, _sbx_id, _domain_name);
    

    UPDATE entity SET area = 'restricted', type='hub', status='active' WHERE id =_sbx_id;

  ELSE
    SELECT 2 failed;
  END IF;

  IF _rollback THEN
    ROLLBACK;
  ELSE
    COMMIT;
  END IF;

  SELECT 
    JSON_OBJECT
    ('id', _dru_id, 'ident', _dru_ident, 'db_name', _dru_db, 'vhost', _dru_fqdn) drumate,
    JSON_OBJECT
    ('id', _sbx_id, 'ident', _sbx_ident, 'db_name', _sbx_db, 'vhost', _sbx_fqdn) sharebox,
    _rollback failed;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_create_share_box` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_create_share_box`(
  IN _id          VARCHAR(16),
  IN _owner_id    VARCHAR(16),
  IN _root_id     VARCHAR(16)
)
BEGIN
  REPLACE INTO share_box values(null, _id, _owner_id, _root_id);
  UPDATE entity set settings=JSON_SET(settings, "$.default_privilege", 7) where id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_delete`(
 IN _key VARBINARY(80)
)
BEGIN
  DECLARE _domain_id INT(4);
  DECLARE _id VARCHAR(16);
  DECLARE _ident VARBINARY(80);
  DECLARE _type VARCHAR(80);
  DECLARE _db VARCHAR(80);
  DECLARE _home_dir VARCHAR(512);
  DECLARE _entity_db VARCHAR(20);
  DECLARE _sys_id INT;
  DECLARE _temp_sys_id INT;
  DECLARE _drumate_id VARCHAR(16);
  DECLARE _drumate_domain_id INT(4);
  DECLARE _drumate_db VARCHAR(100);
  DECLARE _email VARCHAR(1000);
  DECLARE _rid VARCHAR(16) ;

  DECLARE _src_db_name VARCHAR(100);

  SELECT id, ident,`type`, db_name, home_dir FROM entity
  WHERE  id=_key INTO _id, _ident, _type, _db, _home_dir;

  
  
  

  SELECT email FROM drumate WHERE id = _id  INTO _email;  
  SELECT domain_id FROM privilege WHERE uid = _id INTO _domain_id;



  

  SELECT 0 INTO _sys_id; 
  SELECT sys_id  FROM drumate WHERE sys_id > 0  ORDER BY sys_id ASC LIMIT 1 INTO _sys_id;
 
  WHILE _sys_id <> 0 DO
     
    SELECT NULL,NULL,NULL INTO _drumate_id,_drumate_domain_id,_drumate_db;
    SELECT id  FROM  drumate WHERE sys_id = _sys_id INTO _drumate_id; 
    SELECT domain_id FROM privilege WHERE uid = _drumate_id  ORDER BY domain_id DESC  LIMIT 1  INTO _drumate_domain_id;
    SELECT db_name FROM entity WHERE status <> 'deleted' AND id = _drumate_id INTO _drumate_db;


    IF ( _drumate_id IS NOT NULL AND _drumate_domain_id IS NOT NULL AND _drumate_db IS NOT NULL) THEN
      IF (_drumate_domain_id = _domain_id) THEN   
        SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact_email WHERE contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
        PREPARE stamt FROM @st;
        EXECUTE stamt USING _id,_id,_email,_email;
        DEALLOCATE PREPARE stamt;

        SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =?');
        PREPARE stamt FROM @st;
        EXECUTE stamt USING _id,_id,_email,_email;
        DEALLOCATE PREPARE stamt; 
      END IF ;
      IF (_drumate_domain_id <> _domain_id) THEN    
        SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact WHERE (uid =? or entity = ? or uid = ? or entity =?) AND status="received"');
        PREPARE stamt FROM @st;
        EXECUTE stamt USING _id,_id,_email,_email;
        DEALLOCATE PREPARE stamt; 

        SET @st = CONCAT('UPDATE ', _drumate_db ,'.contact_email SET  is_default = 0 WHERE   is_default = 1 AND contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
        PREPARE stamt FROM @st;
        EXECUTE stamt USING _id,_id,_email,_email;
        DEALLOCATE PREPARE stamt;


        SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact_email WHERE  email =? AND contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
        PREPARE stamt FROM @st;
        EXECUTE stamt USING _email,_id,_id,_email,_email;
        DEALLOCATE PREPARE stamt;


        SET @st = CONCAT('INSERT INTO ', _drumate_db ,'.contact_email (id,email,category,ctime,mtime ,contact_id ,is_default )
        SELECT  yp.uniqueId(),?,"priv",UNIX_TIMESTAMP(),UNIX_TIMESTAMP(),id,1 FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? 
        ON DUPLICATE KEY UPDATE is_default =1');
        PREPARE stamt FROM @st;
        EXECUTE stamt USING _email,_id,_id,_email,_email;
        DEALLOCATE PREPARE stamt;


        SET @st = CONCAT('UPDATE ', _drumate_db ,'.contact SET category ="independant", metadata = JSON_OBJECT("source",? ), status="memory", uid = null, entity=? WHERE uid =? or entity =? or uid = ? or entity =?');
        PREPARE stamt FROM @st;
        EXECUTE stamt USING  _email,_email,_id,_id,_email,_email;
        DEALLOCATE PREPARE stamt; 
      END IF;  
    END IF; 

    SELECT _sys_id INTO  _temp_sys_id ;  
    SELECT 0 INTO  _sys_id ; 
    SELECT IFNULL(sys_id,0)  FROM drumate WHERE sys_id >_temp_sys_id ORDER BY sys_id ASC  LIMIT 1 INTO _sys_id;
  END WHILE;

  INSERT INTO trash.entity SELECT * FROM yp.entity WHERE id=_id;
  INSERT INTO trash.drumate (sys_id, id, username, domain_id, remit,  `profile`) 
    SELECT sys_id, id, username, domain_id, remit, `profile` 
    FROM yp.drumate WHERE id=_id;
  INSERT INTO trash.vhost SELECT * FROM yp.vhost  WHERE id=_id;
  INSERT INTO trash.privilege SELECT * FROM yp.privilege WHERE uid=_id;

  DELETE FROM privilege WHERE uid = _id;
  DELETE FROM vhost WHERE id = _id;
  DELETE FROM drumate WHERE id = _id;
  DELETE FROM entity WHERE id = _id;
  DELETE FROM cookie WHERE uid=_id;

  IF _db IS NOT NULL OR _db!="" THEN
    SET @s = CONCAT("DROP DATABASE `", _db, "`");
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;

  SELECT _id id, _ident ident, _type type, _db db_name, _home_dir home_dir;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_deletexxx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_deletexxx`(
 IN _key VARBINARY(80)
)
BEGIN
  DECLARE _domain_id INT(4);
  DECLARE _id VARCHAR(16);
  DECLARE _ident VARBINARY(80);
  DECLARE _type VARCHAR(80);
  DECLARE _db VARCHAR(80);
  DECLARE _home_dir VARCHAR(512);
  DECLARE _entity_db VARCHAR(20);
  DECLARE _sys_id INT;
  DECLARE _temp_sys_id INT;
  DECLARE _drumate_id VARCHAR(16);
  DECLARE _drumate_domain_id INT(4);
  DECLARE _drumate_db VARCHAR(100);
  DECLARE _email VARCHAR(1000);
  DECLARE _rid VARCHAR(16) ;

  DECLARE _src_db_name VARCHAR(100);

  SELECT id, ident,`type`, db_name, home_dir FROM entity
  WHERE  id=_key INTO _id, _ident, _type, _db, _home_dir;

  
  
  

  SELECT email FROM drumate WHERE id = _id  INTO _email;  
  SELECT domain_id FROM privilege WHERE uid = _id INTO _domain_id;



  

  SELECT 0 INTO _sys_id; 
  SELECT sys_id  FROM drumate WHERE sys_id > 0  ORDER BY sys_id ASC LIMIT 1 INTO _sys_id;
 
  WHILE _sys_id <> 0 DO
     
    SELECT NULL,NULL,NULL INTO _drumate_id,_drumate_domain_id,_drumate_db;
    SELECT id  FROM  drumate WHERE sys_id = _sys_id INTO _drumate_id; 
    SELECT domain_id FROM privilege WHERE uid = _drumate_id  ORDER BY domain_id DESC  LIMIT 1  INTO _drumate_domain_id;
    SELECT db_name FROM entity WHERE status <> 'deleted' AND id = _drumate_id INTO _drumate_db;


    IF ( _drumate_id IS NOT NULL AND _drumate_domain_id IS NOT NULL AND _drumate_db IS NOT NULL) THEN
      IF (_drumate_domain_id = _domain_id) THEN   
select 1;
        SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact_email WHERE contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
        PREPARE stamt FROM @st;
        EXECUTE stamt USING _id,_id,_email,_email;
        DEALLOCATE PREPARE stamt;
select 2;
        SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =?');
        PREPARE stamt FROM @st;
        EXECUTE stamt USING _id,_id,_email,_email;
        DEALLOCATE PREPARE stamt; 
      END IF ;
      IF (_drumate_domain_id <> _domain_id) THEN    
select 3;
        SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact WHERE (uid =? or entity = ? or uid = ? or entity =?) AND status="received"');
        PREPARE stamt FROM @st;
        EXECUTE stamt USING _id,_id,_email,_email;
        DEALLOCATE PREPARE stamt; 
select 4;
        SET @st = CONCAT('UPDATE ', _drumate_db ,'.contact_email SET  is_default = 0 WHERE   is_default = 1 AND contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
        PREPARE stamt FROM @st;
        EXECUTE stamt USING _id,_id,_email,_email;
        DEALLOCATE PREPARE stamt;

select 5;
        SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact_email WHERE  email =? AND contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
        PREPARE stamt FROM @st;
        EXECUTE stamt USING _email,_id,_id,_email,_email;
        DEALLOCATE PREPARE stamt;

select 6;
        SET @st = CONCAT('INSERT INTO ', _drumate_db ,'.contact_email (id,email,category,ctime,mtime ,contact_id ,is_default )
        SELECT  yp.uniqueId(),?,"priv",UNIX_TIMESTAMP(),UNIX_TIMESTAMP(),id,1 FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? 
        ON DUPLICATE KEY UPDATE is_default =1');
        PREPARE stamt FROM @st;
        EXECUTE stamt USING _email,_id,_id,_email,_email;
        DEALLOCATE PREPARE stamt;
select 7;

        SET @st = CONCAT('UPDATE ', _drumate_db ,'.contact SET category ="independant", metadata = JSON_OBJECT("source",? ), status="memory", uid = null, entity=? WHERE uid =? or entity =? or uid = ? or entity =?');
        PREPARE stamt FROM @st;
        EXECUTE stamt USING  _email,_email,_id,_id,_email,_email;
        DEALLOCATE PREPARE stamt; 
      END IF;  
    END IF; 

    SELECT _sys_id INTO  _temp_sys_id ;  
    SELECT 0 INTO  _sys_id ; 
    SELECT IFNULL(sys_id,0)  FROM drumate WHERE sys_id >_temp_sys_id ORDER BY sys_id ASC  LIMIT 1 INTO _sys_id;
  END WHILE;

  INSERT INTO trash.entity SELECT * FROM yp.entity WHERE id=_id;
  INSERT INTO trash.drumate (sys_id, id, username, domain_id, remit,  `profile`) 
    SELECT sys_id, id, username, domain_id, remit, `profile` 
    FROM yp.drumate WHERE id=_id;
  INSERT INTO trash.vhost SELECT * FROM yp.vhost  WHERE id=_id;
  INSERT INTO trash.privilege SELECT * FROM yp.privilege WHERE uid=_id;

  DELETE FROM privilege WHERE uid = _id;
  DELETE FROM vhost WHERE id = _id;
  DELETE FROM drumate WHERE id = _id;
  DELETE FROM entity WHERE id = _id;
  DELETE FROM cookie WHERE uid=_id;

  IF _db IS NOT NULL OR _db!="" THEN
    SET @s = CONCAT("DROP DATABASE `", _db, "`");
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;

  SELECT _id id, _ident ident, _type type, _db db_name, _home_dir home_dir;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_exists`(
  IN _id          VARCHAR(500)
)
BEGIN
  SELECT drumate.id, email, domain, firstname, lastname,otp, username ident, username , domain_id,home_dir,
    read_json_object(profile, "mobile")  mobile 
  FROM drumate JOIN entity ON entity.id = drumate.id
  WHERE drumate.id = _id OR email = _id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_freeze` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_freeze`(
  IN _uid VARCHAR(16)
)
BEGIN

  UPDATE entity set status='frozen' where id=_uid;
  UPDATE drumate SET `profile` = JSON_SET(
    `profile`, '$.old_email', email
  )  WHERE id=_uid;
  UPDATE drumate SET `profile` = JSON_SET(
    `profile`, '$.email', CONCAT(_uid, '/', email)
  )  WHERE id=_uid;
  UPDATE vhost SET `fqdn` = CONCAT('--frozen--', fqdn) WHERE id=_uid;
  UPDATE privilege SET `privilege` = 0 WHERE `uid`=_uid;
  UPDATE drumate SET username = _uid WHERE id=_uid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_get`(
  IN _key  VARCHAR(128) CHARACTER SET ascii 
)
BEGIN
  SELECT id, 
    username, 
    `profile`, 
    firstname, 
    lastname, 
    quota, 
    home_dir, 
    JSON_VALUE(profile, '$.lang' ) lang,
    fullname,
    email FROM drumate INNER JOIN entity USING (id) 
    WHERE id = _key OR email = _key;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_get_avatar` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_get_avatar`(
  IN _key VARCHAR(1024)
)
BEGIN
  DECLARE _id VARCHAR(16);
  DECLARE _resource_id VARCHAR(16);
  DECLARE _db_name VARCHAR(40);

  SET @nobody = 'ffffffffffffffff';
  SELECT id FROM drumate WHERE id=_key INTO _id;
  IF _id IS NULL OR _id = '' THEN
    SET _id = @nobody;
  END IF;

  SELECT db_name FROM entity WHERE id = _id INTO _db_name;
  SELECT TRIM(IFNULL(JSON_UNQUOTE(JSON_EXTRACT(profile, '$.avatar')), 'default'))
    FROM drumate WHERE id=_id INTO _resource_id;

  SET @perm = 0;
  SET @s = CONCAT("SELECT " ,_db_name,".user_permission(?, ?) INTO @perm");
  PREPARE stmt FROM @s;
  EXECUTE stmt USING @nobody, _resource_id;
  DEALLOCATE PREPARE stmt;   

  SELECT
    entity.id,
    entity.vhost,
    entity.id as oid,
    entity.db_name,
    drumate.username,
    drumate.username AS ident,
    @perm AS permission,
    _resource_id as avatar,
    ctime,
    TRIM(IFNULL(JSON_UNQUOTE(JSON_EXTRACT(profile, '$.lang')), '')) AS lang,
    IFNULL(_resource_id, 'default') AS avatar,
    status,
    CONCAT(firstname, ' ', lastname) as fullname,
    if((UNIX_TIMESTAMP() - connexion_time)<120, 'on', 'off') as online
    FROM entity INNER JOIN (drumate) USING(id) WHERE id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_get_profile` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_get_profile`(
  IN _id VARBINARY(80)
)
BEGIN
  SELECT 
    IFNULL(JSON_UNQUOTE(JSON_EXTRACT(`profile`, '$.firstname')), '') AS firstname,
    IFNULL(JSON_UNQUOTE(JSON_EXTRACT(`profile`, '$.lastname')), '') AS lastname,
    IFNULL(JSON_UNQUOTE(JSON_EXTRACT(`profile`, '$.email')), '') AS email,
    IFNULL(JSON_UNQUOTE(JSON_EXTRACT(`profile`, '$.mobile')), '') AS mobile,
    IFNULL(JSON_UNQUOTE(JSON_EXTRACT(`profile`, '$.address')), '') AS address,
    IFNULL(JSON_UNQUOTE(JSON_EXTRACT(`profile`, '$.country')), '') AS country,
    IFNULL(JSON_UNQUOTE(JSON_EXTRACT(`profile`, '$.city')), '') AS city,
    IFNULL(JSON_UNQUOTE(JSON_EXTRACT(`profile`, '$.dob')), '') AS dob
    
  FROM drumate WHERE id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_get_share_box` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_get_share_box`(
  IN _id          VARCHAR(500)
)
BEGIN
  DECLARE _db_name VARCHAR(30);
  DECLARE _inbound_id VARCHAR(16);
  DECLARE _outbound_id VARCHAR(16);
  DECLARE _dp TINYINT(4);
  DECLARE _drumate_id VARCHAR(16);
  DECLARE _drumate_db VARCHAR(160);
  DECLARE _sb_id VARCHAR(16);

  SELECT e.id, JSON_VALUE(`settings`, "$.default_privilege"), db_name
    FROM yp.hub h INNER JOIN yp.entity e USING(id) 
    WHERE area = 'restricted' and owner_id=_id INTO _sb_id, _dp, _db_name;

  SET @outbound = NULL;
  SET @inbound = NULL;
  IF _db_name IS NOT NULL THEN 
    SET @s = CONCAT("SELECT `", _db_name, 
      "`.node_id_from_path('/__Outbound__') INTO @outbound");
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
    SET @s = CONCAT("SELECT `", _db_name, 
      "`.node_id_from_path('/__Inbound__') INTO @inbound");
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
    SELECT 
      e.id as hub_id,
      hubname AS ident,
      hubname,
      space,
      ctime,
      icon,
      home_id AS root_id,
      home_id,
      vhost(_sb_id) AS vhost,
      _dp as default_privilege,
      @outbound as outbound,
      @inbound as inbound
    FROM entity e
    LEFT JOIN hub h ON e.id = h.id WHERE h.id = _sb_id;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_hub_to_pro` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_hub_to_pro`(
  IN _uid          VARCHAR(16) CHARACTER SET ascii,
  IN _domain_id INT,
  IN _privilege TINYINT(4)
)
BEGIN

  DECLARE  _link  VARCHAR(1024); 
  DECLARE  _org_id    VARCHAR(16) CHARACTER SET ascii;
  
  SELECT link, id  FROM yp.organisation 
  WHERE domain_id =  _domain_id INTO _link,_org_id;

 

  UPDATE yp.hub SET domain_id = _domain_id  WHERE  owner_id = _uid;
  UPDATE yp.drumate SET domain_id = _domain_id  WHERE  id = _uid;
  UPDATE yp.vhost  SET dom_id = _domain_id  
  WHERE id IN (SELECT id  FROM  yp.hub WHERE  owner_id = _uid) ;

  UPDATE yp.vhost  SET dom_id = _domain_id  
  WHERE id  = _uid ;



  SELECT fqdn ,SUBSTRING_INDEX(fqdn , '.', 1) ,_link,
  CONCAT ( SUBSTRING_INDEX(fqdn , '.', 1), '.',_link)
  FROM yp.vhost 
  WHERE dom_id = _domain_id AND id != _org_id;

  UPDATE yp.vhost 
  SET fqdn =CONCAT ( SUBSTRING_INDEX(fqdn , '.', 1), '.',_link)
  WHERE dom_id = _domain_id AND id != _org_id;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_online_state` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_online_state`(
  IN _uid VARCHAR(80) CHARACTER SET ascii 
)
BEGIN
  DECLARE _state INTEGER DEFAULT 0;
  DECLARE _db_name VARCHAR(64) CHARACTER SET ascii  DEFAULT NULL;
  SET @s = NULL;
  SELECT db_name FROM entity WHERE id=_uid INTO _db_name;
  IF _db_name IS NULL THEN
    SELECT db_name FROM entity WHERE id='ffffffffffffffff' INTO _db_name;
  END IF;
  SELECT online_state(_uid) INTO _state;
  SET @s = CONCAT(
    "SELECT ", 
    quote(_uid), " user_id, ",
    _state , " my_state, ",
    quote(_uid), " my_id, ",
    "yp.online_state(s.uid) his_state, ",
    "s.uid his_id, s.uid, c.firstname, c.lastname, s.id, s.server ",
    "FROM ", _db_name, ".contact c INNER JOIN socket s ON s.uid=c.uid ",
    "WHERE s.state = 'active'"
  );

  PREPARE stmt FROM @s;
  EXECUTE stmt;
  DEALLOCATE PREPARE stmt;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_remove_profile` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_remove_profile`(
  IN _id    VARCHAR(16),
  IN _field  VARCHAR(255)
)
BEGIN

  SET @st = CONCAT("UPDATE drumate SET profile = JSON_REMOVE(profile,  '$.", _field ,"') WHERE id=?");
  PREPARE stamt FROM @st;
  EXECUTE stamt USING _id;
  DEALLOCATE PREPARE stamt; 

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_search` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_search`(
  IN _pattern VARCHAR(84),
  IN _page TINYINT(4)
)
BEGIN

  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);

  SELECT
    entity.id,
    entity.ident,
    `status`,
    `type`,
    email,
    dmail,
    vhost,
    area,
    firstname,
    lastname,
    photo_pub,
    photo_res,
    photo_prv,
    photo_banner as bannerImage,
    gender,
    remit,
    mtime,
    ctime,
    concat(firstname, ' ', lastname) as fullname,
    concat(lastname, ', ', firstname) as `name`,
    if((UNIX_TIMESTAMP() - connexion_time)<120, 'on', 'off') as online,
    layout,
    home_layout as home,
    layout as fallback,
    headline,
    MATCH(`firstname`, `lastname`)
      against(_pattern IN NATURAL LANGUAGE MODE WITH QUERY EXPANSION)*10
    + MATCH(`headline`)
      against(_pattern IN NATURAL LANGUAGE MODE WITH QUERY EXPANSION)*10
    + IF(MATCH(`firstname`, `lastname`)
      against(concat('*', _pattern, '*') IN BOOLEAN MODE), 25, 0) AS score
    FROM drumate join entity USING(id) HAVING score > 24
    ORDER BY score DESC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_set_avatar` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_set_avatar`(
  IN _key VARCHAR(255),
  IN _value VARCHAR(255)
)
BEGIN
  DECLARE _id VARCHAR(16);
  DECLARE _old_avatar VARCHAR(20);
  DECLARE _db_name VARCHAR(80);

  SELECT id, db_name FROM entity WHERE ident=_key OR id=_key INTO _id, _db_name;
  SELECT TRIM('"' FROM JSON_EXTRACT(`profile`,'$.avatar')) FROM drumate WHERE id=_id INTO _old_avatar;
  UPDATE drumate SET `profile`=JSON_SET(`profile`,'$.avatar', _value) where id=_id;

  IF _old_avatar IS NOT NULL OR _old_avatar != '' THEN
    SET @s = CONCAT("DELETE FROM `", _db_name, "`.permission WHERE ", 
      "resource_id = ", QUOTE(_old_avatar), " AND entity_id='ffffffffffffffff'");
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;

  SET @s = CONCAT('CALL `',_db_name , "`.permission_grant(?,'*',0, 1, 'system', '')");
  
  PREPARE stmt FROM @s;
  EXECUTE stmt USING _value;
  DEALLOCATE PREPARE stmt;
  CALL get_visitor(_id);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_set_lang` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_set_lang`(
  IN _key VARCHAR(255),
  IN _lang VARCHAR(16)
)
BEGIN
  DECLARE _id VARBINARY(16);
  SELECT id FROM entity WHERE ident=_key OR id=_key INTO _id;
  UPDATE drumate SET `profile`=JSON_SET(`profile`,'$.lang', _lang) where id=_id;
  UPDATE user SET `profile`=JSON_SET(`profile`,'$.lang', _lang) where id=_id;
  SELECT `profile` FROM drumate WHERE id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_shareboxes` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_shareboxes`(
  IN _id          VARCHAR(500)
)
BEGIN
  DECLARE _db_name VARCHAR(30);
  DECLARE _inbound_id VARCHAR(16);
  DECLARE _outbound_id VARCHAR(16);
  DECLARE _dp TINYINT(4);
  DECLARE _drumate_id VARCHAR(16);
  DECLARE _drumate_db VARCHAR(160);
  DECLARE _sb_id VARCHAR(16);

  SELECT e.id AS hub_id, 
    e.home_id, 
    
    h.hubname, 
    h.hubname AS filename, 
    v.fqdn AS vhost, 
    JSON_VALUE(`settings`, "$.default_privilege") AS default_privilege
    FROM yp.hub h 
      INNER JOIN yp.entity e USING(id) 
      INNER JOIN yp.vhost v USING(id) 
    WHERE area = 'share' and owner_id=_id;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_update`(
  IN _id VARBINARY(16),
  IN _ident VARCHAR(40),
  IN _firstname VARCHAR(40),
  IN _lastname VARCHAR(40),
  IN _gender VARCHAR(10),
  IN _email VARCHAR(255),
  IN _headline VARCHAR(255),
  IN _remit TINYINT(4),
  IN _domain VARCHAR(500)
)
BEGIN
  DECLARE _type VARCHAR(40);
  DECLARE _old_ident VARCHAR(40);

  SELECT ident FROM site_csv WHERE id=_id INTO _old_ident;

  START TRANSACTION;
    UPDATE entity SET headline=_headline, ident=_ident,
      vhost=CONCAT(ident, '.', _domain), mtime=unix_timestamp() WHERE id=_id;

    UPDATE drumate SET email=_email,
      remit=if(_remit<0, remit, _remit) WHERE id=_id;

    IF _ident != _old_ident AND _old_ident !='' THEN
      UPDATE drumate SET dmail=utils.dmail(_ident)  WHERE id=_id;
      UPDATE `alias` SET ident=_ident, vhost=CONCAT(_ident, '.', _domain)
        WHERE id=_id AND vhost=CONCAT(_old_ident, '.', _domain);
      
      
    END IF;
    SELECT * FROM drumate_view WHERE id=_id;
  COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_update_profile` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_update_profile`(
  IN _id    VARBINARY(16),
  IN _data  JSON
)
BEGIN
  DECLARE _value VARCHAR(1024);
  DECLARE _path VARCHAR(100);
  DECLARE _paths VARCHAR(1024);
  DECLARE _i TINYINT(4) DEFAULT 0;

  SELECT JSON_ARRAY(
    "address.city", 
    "address.country", 
    "address.location", 
    "address", 
    "archived",
    "areacode", 
    "avatar", 
    "connected",
    "dob", 
    "doc",
    "email_verified",
    "email", 
    "firstname", 
    "group", 
    "ident", 
    "intro"  ,
    "lang", 
    "lastname", 
    "mobile_verified",
    "mobile",
    "otp",
    "personaldata",
    "profile_type"
    "privacy.directory.networking", 
    "privacy.directory.visibility",
    "privacy.log.connection", 
    "privacy", 
    "role",
    "surname",
    "quota", 
    "username",
    "wallpaper"
  ) INTO _paths;
  WHILE _i < JSON_LENGTH(_paths) DO 
    SELECT JSON_VALUE(_paths, CONCAT("$[", _i, "]")) INTO _path;
    SELECT JSON_VALUE(_data, CONCAT("$.", _path)) INTO _value;
    
    IF _value IS NOT NULL THEN 
      UPDATE drumate SET `profile` = 
        JSON_SET(`profile`, CONCAT("$.",_path), _value) WHERE id=_id;
    END IF;
    SELECT _i + 1 INTO _i;
  END WHILE;
  SELECT * FROM drumate WHERE id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_update_profile_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_update_profile_next`(
  IN _id    VARBINARY(16),
  IN _data  JSON
)
BEGIN
  DECLARE _value VARCHAR(1024);
  DECLARE _path VARCHAR(100);
  DECLARE _paths VARCHAR(1024);
  DECLARE _i TINYINT(4) DEFAULT 0;

  SELECT JSON_ARRAY(
    "ident", "firstname", "lastname", "lang", "dob", "avatar", "doc","surname","blocked","archived","authentification",
    "email", "mobile", "role",
    "group", 
    "address", 
    "address.city", "address.country", "address.location", 
    "privacy", 
    "privacy.log.connection", 
    "privacy.directory.networking", 
    "privacy.directory.visibility",
    "personaldata"
  ) INTO _paths;
  WHILE _i < JSON_LENGTH(_paths) DO 
    SELECT read_json_array(_paths, _i) INTO _path;
    SELECT get_json_object(_data, _path) INTO _value;
    
    IF _value IS NOT NULL THEN 
      UPDATE drumate SET `profile` = 
        JSON_SET(`profile`, CONCAT("$.",_path), _value) WHERE id=_id;
    END IF;
    SELECT _i + 1 INTO _i;
  END WHILE;
  SELECT * FROM drumate WHERE id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_update_settings` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_update_settings`(
  IN _id    VARCHAR(30) CHARACTER SET ascii,
  IN _data  MEDIUMTEXT
)
BEGIN
  UPDATE entity set settings=_data WHERE id=_id ; 
  SELECT id, settings FROM entity WHERE id=_id ; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_vanish` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_vanish`(
 IN _key VARBINARY(80)
)
BEGIN
  DECLARE _domain_id INT(4);
  DECLARE _id VARCHAR(16);
  DECLARE _ident VARBINARY(80);
  DECLARE _type VARCHAR(80);
  DECLARE _db VARCHAR(80);
  DECLARE _home_dir VARCHAR(512);
  DECLARE _src_home_dir VARCHAR(512);
  DECLARE _entity_db VARCHAR(20);
  DECLARE _sys_id INT;
  DECLARE _temp_sys_id INT;
  DECLARE _drumate_id VARCHAR(16);
  DECLARE _drumate_domain_id INT(4);
  DECLARE _drumate_db VARCHAR(100);
  DECLARE _email VARCHAR(1000);
  DECLARE _rid VARCHAR(16) ;

  DECLARE _src_db_name VARCHAR(100);

  SELECT id, ident,`type`, db_name, home_dir FROM entity
  WHERE id=_key  INTO _id, _ident, _type, _db, _home_dir;

  
  
  


  SELECT email FROM drumate WHERE id = _id  INTO _email;  
  SELECT domain_id FROM privilege WHERE uid = _id INTO _domain_id;



  

  SELECT 0 INTO _sys_id; 
  SELECT sys_id  FROM drumate WHERE sys_id > 0  ORDER BY sys_id ASC LIMIT 1 INTO _sys_id;
 
  WHILE _sys_id <> 0 DO
     
    SELECT NULL,NULL,NULL INTO _drumate_id,_drumate_domain_id,_drumate_db;
    SELECT id  FROM  drumate WHERE sys_id = _sys_id INTO _drumate_id; 
    SELECT domain_id FROM privilege WHERE uid = _drumate_id  ORDER BY domain_id DESC  LIMIT 1  INTO _drumate_domain_id;
    SELECT db_name FROM entity WHERE status <> 'deleted' AND id = _drumate_id INTO _drumate_db;


     IF ( _drumate_id IS NOT NULL AND _drumate_domain_id IS NOT NULL AND _drumate_db IS NOT NULL) THEN
      IF (_drumate_domain_id = _domain_id) THEN   
          SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact_email WHERE contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
          PREPARE stamt FROM @st;
          EXECUTE stamt USING _id,_id,_email,_email;
          DEALLOCATE PREPARE stamt;

          SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =?');
          PREPARE stamt FROM @st;
          EXECUTE stamt USING _id,_id,_email,_email;
          DEALLOCATE PREPARE stamt; 
      END IF ;
      IF (_drumate_domain_id <> _domain_id) THEN    


          SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact WHERE (uid =? or entity = ? or uid = ? or entity =?) AND status="received"');
          PREPARE stamt FROM @st;
          EXECUTE stamt USING _id,_id,_email,_email;
          DEALLOCATE PREPARE stamt; 

          SET @st = CONCAT('UPDATE ', _drumate_db ,'.contact_email SET  is_default = 0 WHERE   is_default = 1 AND contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
          PREPARE stamt FROM @st;
          EXECUTE stamt USING _id,_id,_email,_email;
          DEALLOCATE PREPARE stamt;


          SET @st = CONCAT('DELETE FROM ', _drumate_db ,'.contact_email WHERE  email =? AND contact_id  = (SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? )');
          PREPARE stamt FROM @st;
          EXECUTE stamt USING _email,_id,_id,_email,_email;
          DEALLOCATE PREPARE stamt;


          SET @st = CONCAT('INSERT INTO ', _drumate_db ,'.contact_email (id,email,category,ctime,mtime ,contact_id ,is_default )
          SELECT  yp.uniqueId(),?,"priv",UNIX_TIMESTAMP(),UNIX_TIMESTAMP(),id,1 FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? 
          ON DUPLICATE KEY UPDATE is_default =1');
          PREPARE stamt FROM @st;
          EXECUTE stamt USING _email,_id,_id,_email,_email;
          DEALLOCATE PREPARE stamt;


          SET @st = CONCAT('UPDATE ', _drumate_db ,'.contact SET category ="independant", metadata = JSON_OBJECT("source",? ), status="memory", uid = null, entity=? WHERE uid =? or entity =? or uid = ? or entity =?');
          PREPARE stamt FROM @st;
          EXECUTE stamt USING  _email,_email,_id,_id,_email,_email;
          DEALLOCATE PREPARE stamt; 
      END IF;  
     END IF; 

    SELECT _sys_id INTO  _temp_sys_id ;  
    SELECT 0 INTO  _sys_id ; 
    SELECT IFNULL(sys_id,0)  FROM drumate WHERE sys_id >_temp_sys_id ORDER BY sys_id ASC  LIMIT 1 INTO _sys_id;
  END WHILE;


  

  
  

  
  


  
  
  
  


  
  
  
  

  
  
  
  

  

  
  
  
  
  


  
  UPDATE drumate SET `profile` =  JSON_SET(`profile`, "$.firstname",'Gone with the wind :)' ) WHERE id=_id;
  UPDATE drumate SET `profile` =  JSON_SET(`profile`, "$.lastname",'Until the stars' ) WHERE id=_id;

   UPDATE drumate SET `profile` =  JSON_SET(`profile`, "$.email",_id ) WHERE id=_id;
   UPDATE entity SET status = 'deleted' WHERE id = _id;
   
   DELETE FROM entity WHERE id = _id;
   DELETE FROM drumate WHERE id = _id;
   DELETE FROM privilege WHERE uid = _id;
   DELETE FROM cookie WHERE uid=_id;
   DELETE FROM vhost  WHERE id = _id;
   DELETE FROM contact_sync  WHERE uid = _id;
   DELETE FROM contact_sync  WHERE owner_id = _id;
  IF _db IS NOT NULL OR _db!="" THEN
    SET @s = CONCAT("DROP DATABASE `", _db, "`");
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;


 IF _src_db_name IS NOT NULL OR _src_db_name!="" THEN
    SET @s = CONCAT("DROP DATABASE `", _src_db_name, "`");
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;


  SELECT _id id, _ident ident, _type type, _db db_name, _home_dir home_dir, _src_home_dir sb_home_dir;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `drumate_verify_email` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `drumate_verify_email`(
  IN _id          VARBINARY(16),
  IN _email_hash  VARCHAR(255),
  IN _token       VARCHAR(255)
)
BEGIN
  DECLARE _ctime INT(11);
  DECLARE _unverified_email VARCHAR(255);
  DECLARE _actual_token VARCHAR(255);

  SELECT token, ctime FROM verification WHERE drumate_id=_id ORDER BY ctime DESC LIMIT 1 INTO _actual_token, _ctime;
  SELECT unverified_email FROM drumate WHERE id=_id INTO _unverified_email;

  IF _token = _actual_token AND TRIM(IFNULL(_email_hash, '')) <>'' AND _email_hash = sha2(_unverified_email, 512) THEN
    UPDATE drumate set email = _unverified_email, profile = JSON_SET(profile, "$.email", _unverified_email),
        registration_verified=1, unverified_email = NULL WHERE id=_id;
    SELECT 1 AS updated;
  ELSE
    SELECT 0 AS updated;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `email_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `email_exists`(
  IN _key VARCHAR(128)
)
BEGIN

  SELECT email, id FROM drumate WHERE email=_key;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `enable_account` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `enable_account`(
   IN act_key VARBINARY(64)
)
BEGIN
  DECLARE _id VARBINARY(16);
  DECLARE _ident VARCHAR(512);
  DECLARE _db_host VARCHAR(80);
  DECLARE _db_name VARCHAR(50);
  DECLARE _nickname VARCHAR(80);

  SELECT id, ident, db_host, db_name, nickname
      FROM drumate_view WHERE activation_key=act_key
      INTO _id, _ident, _db_host, _db_name, _nickname;

  IF _id IS NULL THEN
     SET _id = NULL;
     SET _ident = NULL;
     SET _db_host = NULL;
     SET _db_name = NULL;
  ELSE
     UPDATE drumate SET activation_key = '', first_cnx=1, status = 'active',
       activation_time=UNIX_TIMESTAMP() WHERE  activation_key=act_key;
     UPDATE postfix.mailbox SET active = 1 WHERE  local_part=_ident;
     UPDATE postfix.alias SET active = 1 WHERE  address=concat(_ident, '@drumee.com');
  END if;
  SELECT _id as id, _ident as ident, _db_host as db_hos, _db_name as db_name, _nickname as nickname;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `entity_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `entity_all`()
BEGIN
  SELECT id ,db_name,CONCAT(home_dir, "/__storage__/")  home_dir 
  FROM entity 
  WHERE status ='active' ;  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `entity_create` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `entity_create`(
  IN _type VARCHAR(20)
)
BEGIN
  DECLARE _db_host VARCHAR(255);
  DECLARE _fs_host VARCHAR(255);
  DECLARE _home_dir VARCHAR(255);
  DECLARE _hid VARCHAR(16);
  DECLARE _now INT(11);
  DECLARE _domain VARCHAR(80);
  DECLARE _db_name VARCHAR(80);
  DECLARE _icon VARCHAR(1024) DEFAULT "/-/images/logo/desk.jpg";
  DECLARE _settings MEDIUMTEXT;
  DECLARE _rollback BOOLEAN DEFAULT 0;  

  DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
  BEGIN
    SET _rollback = 1;  
    GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE, 
    @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
    SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
  END;

  SELECT uniqueId(), UNIX_TIMESTAMP(), make_db_name()
    INTO _hid, _now, _db_name;


  SELECT conf_value FROM sys_conf WHERE conf_key='icon' INTO _icon;

  SELECT
    dbhost, fshost,
    CONCAT(
      IF( mfs_root REGEXP '/+$', mfs_root, CONCAT(mfs_root, '/')), 
      substring(uniqueId(), 1, 4), '/', _hid, '/'
    ),
    settings, domainname
    FROM settings WHERE build=1 INTO
    _db_host, _fs_host, _home_dir, _settings, _domain;

  START TRANSACTION;
    INSERT INTO entity (
      `id`,`db_name`,`db_host`,`fs_host`, `home_dir`,
      `settings`, `type`, `area`, icon,
      `status`, `ctime`, `mtime`, `dom_id`)
    VALUES (
      _hid, _db_name, _db_host, _fs_host, _home_dir,
      _settings, _type, 'pool',  _icon,
      'frozen', _now, _now, 1);

    INSERT INTO yp.disk_usage VALUES(null, _hid, 0);

    SET @s = CONCAT("CREATE DATABASE `", _db_name,
      "` CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci");
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;

  IF _rollback THEN
    ROLLBACK;
    SELECT 1 as failed, @full_error AS reason;
  ELSE
    COMMIT;
  END IF;

  SELECT * FROM entity WHERE id = _hid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `entity_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `entity_delete`(
   IN _key VARCHAR(80) CHARACTER SET ascii
)
BEGIN
  DECLARE _id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _ident VARCHAR(80) CHARACTER SET ascii;
  DECLARE _type VARCHAR(80);
  DECLARE _db VARCHAR(80);
  DECLARE _home_dir VARCHAR(512);
  DECLARE _entity_db VARCHAR(20);

  SELECT e.id, COALESCE(h.hubname, d.username), `type`, db_name, home_dir 
    FROM entity e 
      LEFT JOIN yp.hub h ON e.id=h.id 
      LEFT JOIN yp.drumate d ON e.id=d.id 
    WHERE e.id=_key OR db_name=_key INTO _id, _ident, _type, _db, _home_dir;

  DELETE FROM entity WHERE id=_id;
  DELETE FROM disk_usage WHERE hub_id=_id;
  DELETE FROM vhost WHERE id=_id;
  DELETE FROM corporate WHERE entity_id=_id;
  DELETE FROM share_box WHERE owner_id=_id;

  DELETE FROM dmz_token WHERE hub_id=_id;
  
  
  
  

  IF _type = 'drumate' THEN
    
    
    DELETE FROM drumate WHERE id=_id;
  ELSE
    DELETE FROM hub WHERE id=_id;
  END IF;

  IF _db IS NOT NULL OR _db!="" THEN
    SET @s = CONCAT("DROP DATABASE IF EXISTS`", _db, "`");
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;

  SELECT _id id, _ident ident, _type type, _db db_name, _home_dir home_dir;
  DELETE FROM cookie WHERE uid=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `entity_set_status` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `entity_set_status`(
  IN _id          VARCHAR(16),
  IN _status      VARCHAR(30)
)
BEGIN
  UPDATE entity set status=_status where id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `entity_sockets` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `entity_sockets`(
  IN _arg JSON
)
BEGIN
  DECLARE _list JSON;
  DECLARE _i TINYINT(6) unsigned DEFAULT 0;
  DECLARE _db VARCHAR(160);
  DECLARE _db_name VARCHAR(160);
  DECLARE _id VARCHAR(160);

  SET @exclude = '';
  
  IF JSON_TYPE(_arg) IN('STRING', 'INTEGER') OR JSON_TYPE(_arg) IS NULL THEN 
    SELECT _arg INTO _id;
  ELSE 
    SELECT JSON_EXTRACT(_arg, "$.exclude") INTO _list;
    IF JSON_TYPE(_list) != 'ARRAY' THEN 
      SELECT JSON_ARRAY(_list) INTO _list;
    END IF;

    IF _list IS NOT NULL AND JSON_LENGTH(_list)>0 THEN
      SET @exclude = 'AND s.id NOT IN (';
      WHILE _i < JSON_LENGTH(_list) DO 
        IF _i = JSON_LENGTH(_list) - 1 THEN 
          SET @ending = ")";
        ELSE
          SET @ending = ", ";
        END IF;
        SELECT JSON_EXTRACT(_list, CONCAT("$[", _i, "]")) INTO @item;
        IF CAST(@item as VARCHAR(1000)) IN('null', 'undefined') THEN
          SELECT CONCAT(@exclude, '"null"', @ending) INTO @exclude;
        ELSE 
          SELECT CONCAT(@exclude, @item, @ending) INTO @exclude;
        END IF;
        SELECT _i + 1 INTO _i;
      END WHILE;
    END IF;

    SELECT JSON_VALUE(_arg, "$.hub_id") INTO _id;
    SELECT JSON_VALUE(_arg, "$.db_name") INTO _db;
  END IF;
  

  SELECT db_name FROM entity WHERE id=_id OR db_name=_db INTO _db_name;
  IF _db_name IS NOT NULL THEN 
    SELECT CONCAT(
      "SELECT distinct s.id socket_id, s.uid FROM socket s INNER JOIN ",
      _db_name, 
      ".permission p on s.uid=p.entity_id WHERE s.state='active' ",
      @exclude
    ) INTO @sx;
    PREPARE stmtx FROM @sx;
    EXECUTE stmtx;
    DEALLOCATE PREPARE stmtx;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `entity_touch` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `entity_touch`(
  IN _key VARBINARY(128)
)
BEGIN
  UPDATE entity SET mtime=UNIX_TIMESTAMP() WHERE id=_key OR ident=_key;
  SELECT id, ident, mtime, settings FROM entity WHERE id=_key OR ident=_key;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `entity_update_profile` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `entity_update_profile`(
  IN _id    VARCHAR(16),
  IN _name      VARCHAR(100),
  IN _value     VARCHAR(1024)
)
BEGIN
    UPDATE entity SET `profile` = JSON_SET(`profile`, CONCAT("$.", _name), _value) 
      WHERE id = _id;
    SELECT id, settings FROM entity WHERE id = _id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `entity_update_settings` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `entity_update_settings`(
  IN _id    VARCHAR(16),
  IN _data  JSON
)
BEGIN
  UPDATE entity SET settings=_data WHERE id=_id ; 
  SELECT id, settings FROM entity WHERE id=_id ; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `feedback_create` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `feedback_create`(
  IN _msg TEXT
)
BEGIN

  INSERT INTO feedback SELECT null, _msg,  UNIX_TIMESTAMP(),  UNIX_TIMESTAMP ();
  SELECT * FROM feedback ORDER BY ctime DESC LIMIT 1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `fix_miss_dmz` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `fix_miss_dmz`()
BEGIN
  DECLARE _tempid VARCHAR(16);
  DECLARE _lvl INT;
  DECLARE _hub_db_name VARCHAR(255);
  DECLARE _uniqueid     VARCHAR(16);
 
  DROP TABLE IF EXISTS _show_node; 
  CREATE TEMPORARY TABLE _show_node (
     `seq`  int NOT NULL AUTO_INCREMENT,
     `id` varchar(16),
     `owner_id` varchar(16), 
      PRIMARY KEY `seq`(`seq`) 
  );


  INSERT INTO _show_node (id,owner_id)
  SELECT 
    d.id, w.owner_id 
  FROM drumate d 
  LEFT JOIN (
    SELECT e.id,h.owner_id  
    FROM  yp.entity e 
    INNER JOIN yp.hub h ON e.id = h.id  AND  e.area = 'dmz' AND e.type='hub')w on d.id = w.owner_id 
    WHERE  w.owner_id is null AND  d.id <> 'ffffffffffffffff' AND d.id <> 'cd185642cd18565f'
    AND d.id  <> 'c812fa68c812fa81' ;

  
   SELECT MAX(seq) FROM _show_node  INTO _lvl; 
   SELECT id FROM _show_node WHERE seq = _lvl INTO _tempid  ;

    WHILE ( _lvl >= 300) DO
      SELECT NULL INTO _hub_db_name;
      SELECT db_name FROM yp.entity WHERE id = _tempid INTO _hub_db_name;
       SELECT _hub_db_name , _lvl , _tempid;
      

      IF (_hub_db_name IS NOT null AND  yp.domain_name(_hub_db_name) IS NOT NULL)  then 
        SELECT  uniqueId() INTO _uniqueid;
        SET @st1 = CONCAT("CALL ", _hub_db_name, ".desk_create_hub(?,?,?,?)");
        PREPARE stmt1 FROM @st1;
        EXECUTE stmt1 USING  _uniqueid,'dmz',_tempid ,JSON_OBJECT("name","wicket", "is_wicket",1);        
        DEALLOCATE PREPARE stmt1;
      END IF ; 

      SELECT _lvl - 1  INTO _lvl;
      SELECT id FROM _show_node WHERE seq = _lvl  INTO _tempid;
    END WHILE;
  


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `forward_proc` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `forward_proc`(
  IN _id VARCHAR(250),
  IN _fn VARCHAR(250),
  IN _arg MEDIUMTEXT
)
BEGIN
  DECLARE _db VARCHAR(255);

  SELECT CONCAT('`', db_name, '`') FROM entity 
    WHERE vhost=_id or id=_id or ident=_id INTO _db;

  IF _db != '' OR _db IS NOT NULL THEN
    SET @sx = CONCAT("CALL ",_db, ".", _fn, "(", _arg, ")");

    PREPARE stmtx FROM @sx;
    EXECUTE stmtx;
    DEALLOCATE PREPARE stmtx;
  END IF;
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `freeze_drumate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `freeze_drumate`(
   IN _key VARBINARY(80)
)
BEGIN
  DECLARE _id VARBINARY(16);
  DECLARE _ident VARCHAR(255);

  SELECT id,ident FROM entity WHERE ident=_key OR id=_key INTO _id,_ident;
  START TRANSACTION;
    UPDATE entity SET status = 'frozen' WHERE  id=_id;
    UPDATE postfix.mailbox SET active = 0 WHERE  local_part=_ident;
    UPDATE postfix.alias SET active = 0 WHERE  address=concat(_ident, '@drumee.com');
  COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `freeze_entity` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `freeze_entity`(
   IN _key VARBINARY(80)
)
BEGIN
  DECLARE _id VARBINARY(16);
  DECLARE _ident VARBINARY(80);
  DECLARE _type VARCHAR(80);

  SELECT id, ident,`type` FROM entity WHERE ident=_key OR id=_key INTO _id, _ident, _type;
  UPDATE entity SET status = 'frozen' WHERE  id=_id;
  UPDATE postfix.mailbox SET active = 0 WHERE  id=_id;
  UPDATE postfix.alias SET active = 0 WHERE  id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `gallery` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `gallery`(
  IN _category VARCHAR(50),
  IN _page TINYINT(4)
)
BEGIN

  DECLARE _more_rows BOOLEAN DEFAULT TRUE;
  DECLARE _offset BIGINT DEFAULT 0;
  DECLARE _range BIGINT DEFAULT 2;
  DECLARE _rid VARBINARY(16);
  DECLARE _cid VARBINARY(16);
  DECLARE _aid VARBINARY(16);
  DECLARE _cname VARCHAR(80);
  DECLARE _area VARCHAR(80);
  DECLARE _home_dir VARCHAR(255);


  DECLARE threads_list CURSOR FOR SELECT resource_id, cid, cname, area, aid, home_dir
    FROM billboard_view WHERE category=_category ORDER BY time_stamp DESC LIMIT _offset,_range;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET _more_rows = FALSE;

  IF @rows_per_page IS NULL THEN
    SET @rows_per_page=15;
  END IF;

  SELECT (_page - 1)*@rows_per_page, (_page)*@rows_per_page INTO _offset,_range;

  OPEN threads_list;

  cloop: LOOP
    FETCH threads_list INTO _rid, _cid, _cname, _area, _aid, _home_dir;
    IF NOT _more_rows THEN
      LEAVE cloop;
    END IF;
    SET @s = CONCAT ("SELECT ", _page, " AS page, ",
      "author_id, summary, ptime, firstname, lastname, fullname, cid, ",
      "category AS filetype, filesize, ",
      quote(_area), " AS area, ", quote(_aid), " AS aid, ",
      quote(_cname), " AS cname, nid,  cid AS oid, ",
      "CONCAT (", quote(_home_dir), ", file_path) AS file_path ",
      " FROM `C_", _cid, "`.gallery_view WHERE nid=", quote(_rid));
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
   END LOOP cloop;

  CLOSE threads_list;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_alternate_account` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_alternate_account`(
     IN _key       VARCHAR(255)
)
BEGIN
   DECLARE _oid VARCHAR(16);
   DECLARE _category VARCHAR(50);
   DECLARE _ident  VARCHAR(255);

    SELECT 
        id ,category 
    FROM 
        entity e 
        INNER JOIN  drumate d USING(id) 
    WHERE 
        ident=_key OR id=_key 
    INTO 
        _oid,_category;
    
    
    SELECT 
        e.ident
    FROM 
        homework hw
        INNER JOIN entity e on e.id =  CASE WHEN _category = 'individual' THEN hw.work_id ELSE hw.home_id END
        INNER JOIN drumate d on d.id = e.id     
    WHERE 
        _oid = CASE WHEN _category = 'individual' THEN hw.home_id ELSE hw.work_id END
    INTO _ident ;
   
    IF _ident IS NOT NULL THEN
        CALL get_user(_ident);
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_backend_locale` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_backend_locale`(
)
BEGIN
  SELECT * FROM intl WHERE category='page';
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_backend_locale_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_backend_locale_next`(
  IN _lng VARCHAR(20)
)
BEGIN
  SELECT * FROM languages WHERE category='page' AND lng=_lng;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_current_mimic_detail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_current_mimic_detail`(
  IN _sid VARCHAR(90)
)
BEGIN
  DECLARE _mimic_type VARCHAR(30) default  'normal';
  DECLARE _mimicker VARCHAR(64);
  DECLARE _mimic_id VARCHAR(16);
  DECLARE _mimic_entity JSON;
  DECLARE _estimatetime INT(11);
  DECLARE _uid VARCHAR(16);

  SELECT `uid` FROM cookie WHERE id=_sid INTO  _uid; 

  SELECT 'victim', mimicker, id,estimatetime 
    FROM mimic WHERE status = 'active' AND uid = _uid 
    INTO  _mimic_type , _mimicker, _mimic_id ,_estimatetime ;
  SELECT 'old', mimicker, id ,estimatetime 
    FROM mimic WHERE status = 'active' AND mimicker = _uid  
    INTO  _mimic_type , _mimicker, _mimic_id , _estimatetime;
  SELECT 'mimic', m.mimicker, m.id ,estimatetime 
    FROM mimic m
    INNER JOIN cookie c ON  m.uid = c.uid AND m.mimicker = c.mimicker 
    WHERE m.status ='active' AND  c.id = _sid AND c.uid = _uid 
    INTO _mimic_type ,_mimicker, _mimic_id, _estimatetime;

  
  IF _mimic_type = 'old' THEN 
    UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
    UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  UNIX_TIMESTAMP())) WHERE id=_mimic_id;
    UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
    SELECT 'normal',NULL,NULL,NULL INTO _mimic_type, _mimicker, _mimic_id , _estimatetime ; 
  END IF;

    
  IF _mimic_type = 'victim'  AND  _estimatetime <= UNIX_TIMESTAMP()  THEN 
    UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
    UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  UNIX_TIMESTAMP())) WHERE id=_mimic_id;
    UPDATE cookie SET mimicker=null WHERE mimicker=_mimicker ;
    SELECT 'normal',NULL,NULL,NULL INTO _mimic_type, _mimicker, _mimic_id , _estimatetime ; 
  END IF;

  SELECT _mimicker mimicker,
    _mimic_id mimic_id,
    _mimic_type mimic_type,
    _estimatetime mimic_end_at;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_dbname_by_entityid` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_dbname_by_entityid`(_id VARCHAR(16))
BEGIN
  SELECT db_name FROM  entity WHERE id =_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_device_by_uid` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_device_by_uid`(
  IN _uid varchar(16)
)
BEGIN
  SELECT _uid  id ,  push_token FROM device_registation WHERE uid = _uid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_entity` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_entity`(
  IN _key VARCHAR(255)
)
BEGIN
  DECLARE _entity_id VARBINARY(16);
  DECLARE _hub_db VARCHAR(40);
  DECLARE _fqdn VARCHAR(1024);
  DECLARE _filesize FLOAT;
  DECLARE _title VARCHAR(1024);
  DECLARE _keywords VARCHAR(1024);
  DECLARE _domain VARCHAR(1024);
  DECLARE _vhost VARCHAR(1024);
  DECLARE _master_domain VARCHAR(1024);
  


  SELECT vhost(_key) INTO _vhost;
  IF _vhost IS NULL THEN
    SELECT e.id, d.name, utils.domain_name()
      FROM drumate dr 
      INNER JOIN entity e ON dr.id=e.id
      INNER JOIN domain d ON d.id=e.dom_id
      WHERE e.id=_key 
      INTO _entity_id, _domain, _master_domain;
  ELSE
    SELECT e.id, fqdn, d.name, utils.domain_name()
      FROM vhost v INNER JOIN(entity e, domain d) 
      ON e.id=v.id and d.id=e.dom_id
      WHERE fqdn=_vhost 
      INTO _entity_id, _fqdn, _domain, _master_domain;
  END IF;

  SELECT
    e.id,
    e.id as oid,
    e.id AS hub_id,
    e.home_id AS home_id,
    
    _fqdn as vhost,
    _fqdn AS dhost,
    _domain AS domain,
    _master_domain AS master_domain,
    db_name,
    db_host,
    fs_host,
    home_dir,
    `type`,
    area,
    status,
    ctime,
    mtime,
    _fqdn AS hostname,
    settings,
    _filesize as disk_usage
  FROM entity e 
    LEFT JOIN drumate d USING(id)
  WHERE e.id=_entity_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_error_map` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_error_map`(
  IN _code VARCHAR(64)
)
BEGIN

  SELECT * FROM error_view WHERE msg_key=_code;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_external_share` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_external_share`(
     IN _share_id       VARCHAR(16)
)
BEGIN
  SELECT 
    
    d.firstname AS firstname,
    d.lastname AS lastname, 
    n.resource_id  AS nid,
    s.id AS hub_id,
    n.message,
    n.permission,
    n.expiry_time
  FROM
    notification n
    INNER JOIN drumate d ON d.id= n.owner_id
    INNER JOIN share_box s ON s.owner_id = n.owner_id
    INNER JOIN guest g ON g.id = n.entity_id
  WHERE  
    n.share_id = _share_id AND 
    (n.expiry_time = 0 OR n.expiry_time > UNIX_TIMESTAMP());
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_filename` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_filename`(
  IN _node_id VARCHAR(16)
)
BEGIN

  SELECT TRIM(TRAILING '/' FROM file_path) as fname FROM media WHERE id=_node_id;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_file_format` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_file_format`(
)
BEGIN
    SELECT extension AS `key`, extension, category, mimetype, capability FROM filecap;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_finger_print` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_finger_print`(
  IN _key VARCHAR(255) )
BEGIN
  SELECT fingerprint FROM drumate_view WHERE id=_key OR email=_key OR ident=_key ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_fonts` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_fonts`(
  IN _key VARCHAR(250)
)
BEGIN
  DECLARE _db VARCHAR(255);

  IF _key='' OR _key IS NULL THEN
    SELECT 'XXXXXXX' INTO _key;
  END IF;
  SELECT CONCAT('`', db_name, '`') FROM entity WHERE vhost=_key or id=_key or ident=_key INTO _db;

  IF _db != '' OR _db IS NOT NULL THEN
    SET @s1 = CONCAT("CALL ",_db, ".font_list_all()");

    PREPARE stmt FROM @s1;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_frozen_entities` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_frozen_entities`()
BEGIN
  SELECT id, ident, fs_host, home_dir, db_name, type FROM entity WHERE status = 'frozen' AND UNIX_TIMESTAMP(TIMESTAMPADD(DAY,90, FROM_UNIXTIME(frozen_time))) < UNIX_TIMESTAMP();
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_guest` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_guest`(
  IN _key VARCHAR(512)
)
BEGIN
  DECLARE _hub_id VARCHAR(16);
  DECLARE _db_name VARCHAR(64);
  DECLARE _home_dir VARCHAR(1000);
  DECLARE _home_id VARCHAR(1000);
  DECLARE _domain VARCHAR(1000);
  DECLARE _org_name VARCHAR(1000);
  DECLARE _avatar VARCHAR(1000);
  DECLARE _domain_id INTEGER;
  DECLARE _profile JSON;

  SELECT e.id, db_name, home_dir, home_id, d.domain_id, o.link, o.name, avatar, d.profile
    FROM organisation o 
    INNER JOIN entity e on e.dom_id = o.domain_id 
    INNER JOIN drumate d on e.id = d.id  
  WHERE e.id='ffffffffffffffff'
  INTO _hub_id, _db_name, _home_dir, _home_id, _domain_id, _domain, _org_name, _avatar, _profile;


  SELECT
    u.id,
    _hub_id as hub_id,
    u.email AS ident,
    u.email username,
    _db_name db_name,
    _home_dir,
    0 AS remit,
    UNIX_TIMESTAMP() mtime,
    UNIX_TIMESTAMP() ctime,
    _domain AS domain,
    'en' lang,
    'default' avatar,
    'guest' status,
    _profile profile,
    null settings,
    0 disk_usage,
    0 quota,
    IFNULL(u.name, u.email) firstname,
    IFNULL(u.name, u.email) lastname,
    IFNULL(u.name, u.email) fullname
  FROM dmz_user u
    WHERE u.id=_key OR u.email=_key;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_hub` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_hub`(
  IN _key VARCHAR(255) CHARACTER SET ascii
)
BEGIN
  DECLARE _hub_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _hub_db VARCHAR(40);
  DECLARE _fqdn VARCHAR(1024);
  DECLARE _vhost VARCHAR(1024);
  DECLARE _filesize FLOAT;
  DECLARE _type VARCHAR(1024);
  DECLARE _domain VARCHAR(1024);
  DECLARE _exists BOOLEAN DEFAULT 1;
  DECLARE _org_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _home_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _org_name VARCHAR(512);
  DECLARE _entry_host VARCHAR(1024) DEFAULT 'george';

  SELECT e.home_id, o.link, o.domain_id, o.name, v.fqdn, e.id, e.type
    FROM vhost v
    INNER JOIN entity e ON v.id=e.id
    INNER JOIN organisation o ON o.domain_id=e.dom_id
  WHERE v.fqdn=_key  LIMIT 1
  INTO _home_id, _domain, _org_id, _org_name, _vhost, _hub_id, _type;

  IF _hub_id IS NULL  THEN
    SELECT e.home_id, o.link, o.domain_id, o.name, v.fqdn, e.id, e.type
      FROM vhost v
      INNER JOIN entity e ON v.id=e.id
      INNER JOIN organisation o ON o.domain_id=e.dom_id
    WHERE  e.id=_key  AND  _hub_id IS NULL  LIMIT 1 
    INTO _home_id, _domain, _org_id, _org_name, _vhost, _hub_id, _type;
  END IF;

  IF _hub_id IS NULL  THEN
    SELECT  e.home_id, o.link, o.domain_id, o.name, v.fqdn, e.id, e.type
      FROM vhost v
      INNER JOIN entity e ON v.id=e.id
      INNER JOIN organisation o ON o.domain_id=e.dom_id
    WHERE  e.db_name=_key   AND  _hub_id IS NULL LIMIT 1
    INTO _home_id, _domain, _org_id, _org_name, _vhost, _hub_id, _type;
  END IF;

  IF _hub_id IS NULL  THEN
    SELECT conf_value FROM sys_conf WHERE conf_key='entry_host' INTO _entry_host;
    SELECT id, fqdn FROM vhost WHERE id=_entry_host
      INTO _hub_id, _fqdn;
    SELECT 0 INTO _exists;
  END IF;

  IF(SELECT count(*) FROM yp.disk_usage WHERE hub_id=_hub_id) = 0 AND _hub_id IS NOT NULL THEN 
    INSERT INTO yp.disk_usage VALUES(null, _hub_id, 0);
  END IF;

  SELECT size FROM disk_usage WHERE hub_id=_hub_id INTO _filesize;

  SELECT
    e.id,
    e.id as oid,
    e.id AS hub_id,
    h.hubname,
    _exists AS `exists`,
    _org_id AS org_id,
    _home_id AS home_id,
    _org_name AS org_name,
    _domain AS org_home,
    _vhost as vhost,
    _domain AS domain,
    h.owner_id,
    main_domain() AS master_domain,
    db_name,
    db_host,
    fs_host,
    home_dir,
    `type`,
    area,
    default_lang,
    status,
    ctime,
    mtime,
    IF(_exists, COALESCE(h.name, d.fullname), _org_name) AS `name`,
    e.headline AS keywords,
    homepage,
    _vhost AS hostname,
    icon,
    settings,
    COALESCE(d.profile, h.profile) `profile`,
    IF(_exists, _filesize, 0) as disk_usage
  FROM entity e 
    LEFT JOIN hub h ON h.id = e.id 
    LEFT JOIN drumate d ON d.id = e.id 
    WHERE e.id=_hub_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_hub1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_hub1`(
  IN _key VARCHAR(255)
)
BEGIN
  DECLARE _hub_id VARCHAR(16);
  DECLARE _hub_db VARCHAR(40);
  DECLARE _fqdn VARCHAR(1024);
  DECLARE _vhost VARCHAR(1024);
  DECLARE _filesize FLOAT;
  DECLARE _type VARCHAR(1024);
  DECLARE _keywords VARCHAR(1024);
  DECLARE _domain VARCHAR(1024);
  DECLARE _master_domain VARCHAR(1024);
  DECLARE _exists BOOLEAN DEFAULT 1;
  DECLARE _org_id VARCHAR(16);
  DECLARE _org_name VARCHAR(512);
  DECLARE _org_home VARCHAR(512);
  DECLARE _entry_host VARCHAR(1024) DEFAULT 'george';

  SELECT o.link, o.domain_id, o.name, v.fqdn, e.id, e.type
    FROM vhost v
    INNER JOIN entity e ON v.id=e.id
    INNER JOIN organisation o ON o.domain_id=e.dom_id
  WHERE v.fqdn=_key OR e.id=_key OR e.db_name=_key LIMIT 1
  INTO _domain, _org_id, _org_name, _vhost, _hub_id, _type;

  IF _hub_id IS NULL OR _type = 'organization' THEN
    SELECT conf_value FROM sys_conf WHERE conf_key='entry_host' INTO _entry_host;
    SELECT id, fqdn FROM vhost WHERE id=_entry_host
      INTO _hub_id, _fqdn;
    SELECT 0 INTO _exists;
  END IF;

  IF(SELECT count(*) FROM yp.disk_usage where hub_id=_hub_id) = 0 THEN 
    INSERT INTO yp.disk_usage VALUES(null, _hub_id, 0);
  END IF;

  SELECT size FROM disk_usage WHERE hub_id=_hub_id INTO _filesize;

  SELECT
    e.id,
    e.id as oid,
    e.id AS hub_id,
    _exists AS `exists`,
    _org_id AS org_id,
    _org_name AS org_name,
    _domain AS org_home,
    _vhost as vhost,
    _domain AS domain,
    h.owner_id,
    utils.domain_name() AS master_domain,
    db_name,
    db_host,
    fs_host,
    home_dir,
    `type`,
    area,
    default_lang,
    status,
    ctime,
    mtime,
    IF(_exists, COALESCE(h.name, d.fullname), _org_name) AS `name`,
    e.headline AS keywords,
    homepage,
    _vhost AS hostname,
    icon,
    settings,
    COALESCE(d.profile, h.profile) `profile`,
    IF(_exists, _filesize, 0) as disk_usage
  FROM entity e 
    LEFT JOIN hub h ON h.id = e.id 
    LEFT JOIN drumate d ON d.id = e.id 
    WHERE e.id=_hub_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_hubx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_hubx`(
  IN _key VARCHAR(255)
)
BEGIN
  DECLARE _hub_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _hub_db VARCHAR(40);
  DECLARE _fqdn VARCHAR(1024);
  DECLARE _vhost VARCHAR(1024);
  DECLARE _filesize FLOAT;
  DECLARE _type VARCHAR(1024);
  DECLARE _keywords VARCHAR(1024);
  DECLARE _domain VARCHAR(1024);
  DECLARE _master_domain VARCHAR(1024);
  DECLARE _exists BOOLEAN DEFAULT 1;
  DECLARE _org_id VARCHAR(16);
  DECLARE _org_name VARCHAR(512);
  DECLARE _org_home VARCHAR(512);
  DECLARE _entry_host VARCHAR(1024) DEFAULT 'george';

  SELECT o.link, o.domain_id, o.name, v.fqdn, e.id, e.type
    FROM vhost v
    INNER JOIN entity e ON v.id=e.id
    INNER JOIN organisation o ON o.domain_id=e.dom_id
  WHERE v.fqdn=_key OR e.id=_key OR e.db_name=_key LIMIT 1
  INTO _domain, _org_id, _org_name, _vhost, _hub_id, _type;

  IF _hub_id IS NULL OR _type = 'organization' THEN
    SELECT conf_value FROM sys_conf WHERE conf_key='entry_host' INTO _entry_host;
    SELECT id, fqdn FROM vhost WHERE id=_entry_host
      INTO _hub_id, _fqdn;
    SELECT 0 INTO _exists;
  END IF;

  IF(SELECT count(*) FROM yp.disk_usage where hub_id=_hub_id) = 0 THEN 
    INSERT INTO yp.disk_usage VALUES(null, _hub_id, 0);
  END IF;

  SELECT size FROM disk_usage WHERE hub_id=_hub_id INTO _filesize;

  SELECT
    e.id,
    e.id as oid,
    e.id AS hub_id,
    _exists AS `exists`,
    _org_id AS org_id,
    _org_name AS org_name,
    _domain AS org_home,
    _vhost as vhost,
    _domain AS domain,
    h.owner_id,
    utils.domain_name() AS master_domain,
    db_name,
    db_host,
    fs_host,
    home_dir,
    `type`,
    area,
    default_lang,
    status,
    ctime,
    mtime,
    IF(_exists, COALESCE(h.name, d.fullname), _org_name) AS `name`,
    e.headline AS keywords,
    homepage,
    _vhost AS hostname,
    icon,
    settings,
    COALESCE(d.profile, h.profile) `profile`,
    IF(_exists, _filesize, 0) as disk_usage
  FROM entity e 
    LEFT JOIN hub h ON h.id = e.id 
    LEFT JOIN drumate d ON d.id = e.id 
    WHERE e.id=_hub_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_hub_header` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_hub_header`(
  IN _vhost    VARCHAR(255),
  IN _lang      VARCHAR(16)
)
BEGIN
  DECLARE _id VARCHAR(16);
  DECLARE _count TINYINT(4);
  DECLARE _ident VARCHAR(200);
  DECLARE _hub_id VARCHAR(16);
  DECLARE _home_id VARCHAR(16);
  DECLARE _icon VARCHAR(1024);

  
  
  
  
  

  SELECT vhost(_vhost) INTO _vhost;

  SELECT id FROM vhost where fqdn=_vhost INTO _id;
  IF _id IS NULL OR _id="" THEN
    SELECT id FROM entity where ident=_vhost OR id=_vhost INTO _id;
  END IF;

  SELECT id FROM header WHERE id=_id LIMIT 1 INTO _hub_id;

  SELECT ident, icon FROM entity WHERE id=_id INTO _ident, _icon;

  IF _hub_id IS NULL OR _hub_id="" THEN
    SELECT id FROM entity WHERE ident='home' INTO _id;
    SELECT count(*) FROM header WHERE id=_id and `language`=_lang INTO _count;
    IF _count THEN 
      SELECT 
        title,
        keywords,
        IFNULL(icon, _icon) icon,
        `language`,
        _vhost vhsot, 
        _ident ident
      FROM header WHERE id=_id and `language`=_lang;
    ELSE
      SELECT 
        title,
        keywords,
        IFNULL(icon, _icon) icon,
        `language`,
        _vhost vhsot, 
        _ident ident
      FROM header WHERE id=_id and `language`='*';
    END IF;
  ELSE
    SELECT count(*) FROM header WHERE id=_hub_id and `language`=_lang INTO _count;
    IF _count THEN 
      SELECT 
        title,
        keywords,
        IFNULL(icon, _icon) icon,
        `language`,
        _vhost vhsot, 
        _ident ident
      FROM header WHERE id=_hub_id and `language`=_lang;
    ELSE 
      SELECT
        title,
        keywords,
        IFNULL(icon, _icon) icon,
        `language`,
        _vhost vhsot, 
        _ident ident
      FROM header WHERE id=_hub_id and `language`='*';
    END IF;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_hub_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_hub_next`(
  IN _key VARCHAR(255)
)
BEGIN
  DECLARE _hub_id VARCHAR(16);
  DECLARE _hub_db VARCHAR(40);
  DECLARE _fqdn VARCHAR(1024);
  DECLARE _vhost VARCHAR(1024);
  DECLARE _filesize FLOAT;
  DECLARE _type VARCHAR(1024);
  DECLARE _keywords VARCHAR(1024);
  DECLARE _domain VARCHAR(1024);
  DECLARE _master_domain VARCHAR(1024);
  DECLARE _exists BOOLEAN DEFAULT 1;
  DECLARE _org_id VARCHAR(16);
  DECLARE _org_name VARCHAR(512);
  DECLARE _org_home VARCHAR(512);
  DECLARE _entry_host VARCHAR(1024) DEFAULT 'george';

  SELECT o.link, o.domain_id, o.name, v.fqdn, e.id, e.type
    FROM vhost v
    INNER JOIN entity e ON v.id=e.id
    INNER JOIN organisation o ON o.domain_id=e.dom_id
  WHERE v.fqdn=_key OR e.id=_key OR e.db_name=_key LIMIT 1
  INTO _domain, _org_id, _org_name, _vhost, _hub_id, _type;

  IF _hub_id IS NULL OR _type = 'organization' THEN
    SELECT conf_value FROM sys_conf WHERE conf_key='entry_host' INTO _entry_host;
    SELECT id, fqdn FROM vhost WHERE id=_entry_host
      INTO _hub_id, _fqdn;
    SELECT 0 INTO _exists;
  END IF;

  IF(SELECT count(*) FROM yp.disk_usage where hub_id=_hub_id) = 0 THEN 
    INSERT INTO yp.disk_usage VALUES(null, _hub_id, 0);
  END IF;

  SELECT size FROM disk_usage WHERE hub_id=_hub_id INTO _filesize;

  SELECT
    e.id,
    e.id as oid,
    e.id AS hub_id,
    _exists AS `exists`,
    _org_id AS org_id,
    _org_name AS org_name,
    _domain AS org_home,
    _vhost as vhost,
    _domain AS domain,
    h.owner_id,
    utils.domain_name() AS master_domain,
    db_name,
    db_host,
    fs_host,
    home_dir,
    `type`,
    area,
    default_lang,
    status,
    ctime,
    mtime,
    IF(_exists, COALESCE(h.name, d.fullname), _org_name) AS `name`,
    e.headline AS keywords,
    homepage,
    _vhost AS hostname,
    icon,
    settings,
    COALESCE(d.profile, h.profile) `profile`,
    IF(_exists, _filesize, 0) as disk_usage
  FROM entity e 
    LEFT JOIN hub h ON h.id = e.id 
    LEFT JOIN drumate d ON d.id = e.id 
    WHERE e.id=_hub_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_hub_owner` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_hub_owner`(
  IN _vhost VARCHAR(255)
)
BEGIN
  DECLARE _hub_id VARCHAR(16);
  DECLARE _ident VARCHAR(128);
  DECLARE _area VARCHAR(128);
 
  SELECT vhost(_vhost) INTO _vhost;

  SELECT id, ident, area FROM vhost INNER JOIN entity using(id) WHERE fqdn=_vhost 
    INTO _hub_id, _ident, _area;


  SELECT
    h.id AS hub_id,
    _ident AS ident,
    _area AS area,
    owner_id,
    d.firstname,
    JSON_UNQUOTE(JSON_EXTRACT(d.profile, '$.email')) AS email,
    d.lastname
  FROM hub h INNER JOIN (yp.drumate d) ON 
    h.owner_id=d.id  WHERE h.id=_hub_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_innest_photo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_innest_photo`(
   IN id1 VARBINARY(16),
   IN id2 VARBINARY(16)
)
BEGIN
  DECLARE _done INT DEFAULT 0;
  DECLARE _index INT DEFAULT 0;
  DECLARE _best INT DEFAULT 0;
  DECLARE _level VARCHAR(40);
  DECLARE photo VARCHAR(40);
  DECLARE _field VARCHAR(40);
  DECLARE _areas CURSOR FOR SELECT if(count(*)>1, area, 'external') as c_area
    FROM membership
    WHERE drumate_id=id1 OR drumate_id=id2 GROUP BY area, hub_id HAVING c_area!='external';
  DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET _done = 1;

  OPEN _areas;

  REPEAT
    FETCH _areas INTO _level;
       SELECT CASE _level
           WHEN 'public' THEN 0
           WHEN 'restricted' THEN 1
           WHEN 'private' THEN 2
       END into _index;
       IF _index > _best THEN
           SET _best = _index;
       END IF;
  UNTIL _done END REPEAT;
  SELECT CASE _best
      WHEN 0 THEN 'photo_pub'
      WHEN 1 THEN 'photo_res'
      WHEN 2 THEN 'photo_prv'
  END into photo;

  CLOSE _areas;
  SET @s = CONCAT("SELECT ",photo," AS photo FROM drumate_view WHERE id=", quote(id2));
  PREPARE stmt FROM @s;
  EXECUTE stmt;
  DEALLOCATE PREPARE stmt;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_intl_msg` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_intl_msg`(
  IN _key VARCHAR(64)
)
BEGIN

  SELECT * FROM intl WHERE key_code=_key;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_laguages` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_laguages`(
  IN _name         VARCHAR(200),
  IN _page         INT(11)
)
BEGIN
  DECLARE _range int(6);
  DECLARE _offset int(6);
  CALL pageToLimits(_page, _offset, _range);
  SELECT _page as `page`, code, lcid, locale_en, locale, flag_image FROM yp.language WHERE `state` = 'active'
    AND code NOT IN (SELECT locale FROM language WHERE state = 'active' OR state = 'replaced')
    AND locale_en LIKE CONCAT(TRIM(IFNULL(_name, '')), '%')
    ORDER BY locale_en ASC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_locale_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_locale_next`(
  IN _lng VARCHAR(20),
  IN _cat VARCHAR(40)
)
BEGIN
  SELECT * FROM languages WHERE category=_cat AND lng=_lng;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_product` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_product`(
    IN _plan  varchar(30) CHARACTER SET ascii,
    IN _period varchar(30) CHARACTER SET ascii,
    IN _recurring  int
    )
BEGIN

    SELECT 
      id, product,stripe_id,plan,period,recurring,price,offer_price 
    FROM yp.product 
    WHERE plan = _plan AND 
      period = _period AND 
      recurring = _recurring AND 
      is_active=1;


  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_profile_photo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_profile_photo`(
   IN _uid VARBINARY(16),
   IN _vhost varchar(255)
)
BEGIN
  DECLARE _area varchar(30);
  DECLARE _res VARBINARY(16);

  SELECT area FROM `alias` INNER JOIN entity USING(id) WHERE `alias`.vhost=_vhost INTO _area;

  SELECT photo FROM profile WHERE id=CONCAT(_uid, "@", _area);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_redirect_state` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_redirect_state`(
  IN _id VARCHAR(16)
)
BEGIN
  SELECT * FROM  redirect_state WHERE id = _id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_seo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_seo`(
  IN _key VARCHAR(250),
  IN _hashtag VARCHAR(128),
  IN _lang VARCHAR(128)
)
BEGIN
  DECLARE _db VARCHAR(255);
  DECLARE _dn VARCHAR(255);

  
  select CONCAT('`', db_name, '`') from entity left join vhost using(id) where fqdn=_key INTO _db;
  IF _db != '' OR _db IS NOT NULL THEN
    SET @s1 = CONCAT("CALL ",_db, ".seo_get(", quote(_hashtag), ",", quote(_lang), ")");

    PREPARE stmt FROM @s1;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_settings` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_settings`(
  IN _key VARCHAR(255)
)
BEGIN
  DECLARE _id VARBINARY(16);
  IF _key REGEXP '^(.+)\\.(.+)' THEN
    SELECT id FROM `vhost` WHERE fqdn=_key INTO _id;
  ELSE
    SELECT id FROM `entity` WHERE id=_key OR ident=_key INTO _id;
  END IF;
  SELECT settings FROM entity WHERE id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_stylesheets` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_stylesheets`(
  IN _key VARCHAR(250)
)
BEGIN
  DECLARE _db VARCHAR(255);

  IF _key='' OR _key IS NULL THEN
    SELECT 'XXXXXXX' INTO _key;
  END IF;
  SELECT CONCAT('`', db_name, '`') FROM entity WHERE vhost=_key or id=_key or ident=_key INTO _db;
  IF _db != '' OR _db IS NOT NULL THEN
    SET @s1 = CONCAT("CALL ",_db, ".style_get_files()");

    PREPARE stmt FROM @s1;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_sys_conf` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_sys_conf`(
)
BEGIN
  SELECT conf_key AS `key`, conf_value AS `value` FROM sys_conf;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_transation_size` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_transation_size`(
  IN _nodes JSON,
  IN _recipient_id VARCHAR(16),
  IN _action   VARCHAR(16)
)
BEGIN
  DECLARE _nid  VARCHAR(16) CHARACTER SET ascii ;
  DECLARE _shub_id  VARCHAR(16) CHARACTER SET ascii ;
  DECLARE _idx INT(4) DEFAULT 0; 
  DECLARE _shub_db VARCHAR(40);
  DECLARE _size DOUBLE default 0;

  WHILE _idx < JSON_LENGTH(_nodes) DO 
    SELECT get_json_array(_nodes, _idx) INTO @_node;
    SELECT get_json_object(@_node, "nid") INTO _nid;
    SELECT get_json_object(@_node, "hub_id") INTO _shub_id;
 
    IF not (_action  = 'move'  AND _shub_id = _recipient_id ) then
      SELECT db_name FROM yp.entity WHERE id = _shub_id INTO _shub_db; 
      SELECT 0 INTO @__mysize;

          SET @st = CONCAT
          (
            "WITH RECURSIVE mytree AS 
            (
              SELECT id,  parent_id ,filesize, category
              FROM  ",_shub_db,".media WHERE id = ", QUOTE(_nid) , "
                UNION ALL
              SELECT m.id, m.parent_id ,m.filesize, m.category
              FROM ",_shub_db,".media AS m JOIN mytree AS t ON m.parent_id = t.id
            )
            SELECT sum(filesize) FROM mytree INTO @__mysize;"
          );
          PREPARE stmt FROM @st;
          EXECUTE stmt ;
          DEALLOCATE PREPARE stmt;
      SELECT  IFNULL(_size,0) + IFNULL(@__mysize,0) INTO _size ;  
    END IF;

    SELECT _idx + 1 INTO _idx;
  END WHILE;


  SELECT _size size;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_tutorial` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_tutorial`(
  _key  varchar(512)
)
BEGIN
  SELECT * FROM tutorial WHERE `name`=_key;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_ui_locale` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_ui_locale`(
)
BEGIN
  SELECT * FROM intl WHERE category='ui';
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_unified_room` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_unified_room`(
  IN _id VARCHAR(16) CHARACTER SET ascii,
  IN _uid VARCHAR(30) CHARACTER SET ascii
)
BEGIN

  IF _uid IN ('') THEN 
   SELECT NULL INTO  _uid;
  END IF;

   SELECT u.id, u.uid, is_mic_enabled, is_video_enabled, is_share_enabled, is_write_enabled, metadata,
   coalesce(guest_name, firstname) username FROM unified_room u 
      INNER JOIN socket s ON u.uid=s.id 
      INNER JOIN cookie c ON s.cookie=c.id
      LEFT JOIN drumate d on c.uid=d.id
    WHERE u.id =_id AND s.state='active' AND u.uid = IFNULL(_uid , u.uid);
  
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_unique_id` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_unique_id`()
BEGIN
  SELECT yp.uniqueId() AS id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_user` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_user`(
  IN _key VARCHAR(512) CHARACTER SET ascii
)
BEGIN
  DECLARE _id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _avatar VARCHAR(16);
  DECLARE _is_support INT DEFAULT 0 ;
  DECLARE _domain VARCHAR(256);
  DECLARE _org_name VARCHAR(256);
  DECLARE _domain_id INTEGER;

  DECLARE _entity_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _ntime INT(11); 
  DECLARE _etime INT(11); 

  SELECT UNIX_TIMESTAMP() INTO _ntime;

   SELECT id FROM entity e INNER JOIN(drumate d) USING(id) WHERE 
    e.id=_key  INTO _id;

   SELECT id FROM entity e INNER JOIN(drumate d) USING(id) WHERE 
    d.email=_key  AND  _id IS NULL INTO _id;


  SELECT _id INTO _entity_id;

  SELECT o.id
  FROM  yp.drumate d  
  INNER JOIN yp.organisation o ON o.domain_id= d.domain_id
  WHERE d.id =  _id AND  d.domain_id > 1  INTO _entity_id; 

  SELECT  IF(s.conf_value=o.domain_id, 1, 0)
    FROM organisation o 
    INNER JOIN drumate d ON d.domain_id=o.domain_id 
    INNER JOIN sys_conf s ON s.conf_key= 'support_domain' 
    WHERE d.id=_id
  INTO _is_support;
  
  IF _id IS NULL OR _id = '' OR _key = '' THEN
    SET _id = 'ffffffffffffffff';
  END IF;
  
  SELECT
    ee.id,
    IF(ee.id = get_sysconf('guest_id'), 1, 0) isGuest,
    ee.id as hub_id,
    dr.username AS ident,
    dr.username,
    db_name,
    home_dir,
    ee.home_id,
    dr.remit AS remit,
    mtime,
    ctime,
    dd.name AS domain,
    dd.id AS domain_id,
    oo.name AS organization,
    lang,
    avatar,
    status,
    profile,
    settings,
    disk_usage(ee.id) AS disk_usage,
    quota,
    firstname,
    lastname,
    fullname,
    IFNULL(JSON_value(dr.profile, "$.profile_type"),'normal')  profile_type,
    _is_support is_support
    FROM entity ee 
      INNER JOIN drumate dr ON ee.id=dr.id
      INNER JOIN domain dd ON dd.id=ee.dom_id
      INNER JOIN privilege pr ON dr.id=pr.uid
      INNER JOIN organisation oo ON ee.dom_id = oo.domain_id 
    WHERE ee.id=_id GROUP BY(ee.id);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_user1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_user1`(
  IN _key VARCHAR(512) CHARACTER SET ascii
)
BEGIN
  DECLARE _id VARCHAR(16) CHARACTER SET ascii;
  
  
  
  DECLARE _avatar VARCHAR(16);
  DECLARE _disk_usage float(16);
  DECLARE _subscription VARCHAR(30) default  'b2c';
  DECLARE _is_support INT DEFAULT 0 ;
  DECLARE _domain VARCHAR(256);
  DECLARE _org_name VARCHAR(256);
  DECLARE _domain_id INTEGER;

  DECLARE _entity_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _ntime INT(11); 
  DECLARE _etime INT(11); 
  DECLARE _is_active_subscription INT DEFAULT 0 ;
  DECLARE _is_free_subscription INT DEFAULT 0 ;
  DECLARE _plan VARCHAR(256) default  'hub'; 

  SELECT UNIX_TIMESTAMP() INTO _ntime;

   SELECT id FROM entity e INNER JOIN(drumate d) USING(id) WHERE 
    e.id=_key  INTO _id;

   SELECT id FROM entity e INNER JOIN(drumate d) USING(id) WHERE 
    d.email=_key  AND  _id IS NULL INTO _id;

  
  
  SELECT 'b2b','pro' FROM entity WHERE id=_id  AND dom_id > 1   INTO _subscription,_plan;


  SELECT _id INTO _entity_id;

  SELECT o.id
  FROM  yp.drumate d  
  INNER JOIN yp.organisation o ON o.domain_id= d.domain_id
  WHERE d.id =  _id AND  d.domain_id > 1  INTO _entity_id; 

  SELECT max(etime) FROM  subscription WHERE entity_id = _entity_id INTO _etime; 

  SELECT  1   , CASE WHEN mode = 'free' THEN 1 ELSE 0 END 
    FROM subscription 
    WHERE   entity_id = _entity_id
    AND  _ntime >= stime AND etime >= _ntime
    INTO   _is_active_subscription ,_is_free_subscription;

  
  SELECT  IF(s.conf_value=o.domain_id, 1, 0)
    FROM organisation o 
    INNER JOIN drumate d ON d.domain_id=o.domain_id 
    INNER JOIN sys_conf s ON s.conf_key= 'support_domain' 
    WHERE d.id=_id
  INTO _is_support;


   SELECT sum(e.space) FROM hub h LEFT JOIN entity e USING(id) 
    WHERE e.id=_id  INTO _disk_usage;

   SELECT sum(e.space) FROM hub h LEFT JOIN entity e USING(id) 
    WHERE  h.owner_id = _id AND _disk_usage IS NULL INTO _disk_usage;
  
  IF _id IS NULL OR _id = '' OR _key = '' THEN
    SET _id = 'ffffffffffffffff';
  END IF;
  
  SELECT
    ee.id,
    ee.id as hub_id,
    dr.username AS ident,
    dr.username,
    db_name,
    home_dir,
    ee.home_id,
    dr.remit AS remit,
    mtime,
    ctime,
    dd.name AS domain,
    dd.id AS domain_id,
    oo.name AS organization,
    lang,
    avatar,
    status,
    profile,
    settings,
    disk_usage(ee.id) AS disk_usage,
    quota,
    firstname,
    lastname,
    fullname,
    _subscription subscription,
    _is_active_subscription is_active_subscription, 
    _is_free_subscription is_free_subscription,
    _plan plan,
    _etime  subscription_etime,
    IFNULL(JSON_value(dr.profile, "$.profile_type"),'normal')  profile_type,
    _is_support is_support
    FROM entity ee 
      INNER JOIN drumate dr ON ee.id=dr.id
      INNER JOIN domain dd ON dd.id=ee.dom_id
      INNER JOIN privilege pr ON dr.id=pr.uid
      INNER JOIN organisation oo ON ee.dom_id = oo.domain_id 
    WHERE ee.id=_id GROUP BY(ee.id);
    
    
    
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_user_from_socket` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_user_from_socket`(
  IN _id VARCHAR(100)
)
BEGIN
  SELECT 
    COALESCE(d.fullname, z.name, c.guest_name) display, 
    COALESCE(d.fullname, z.name, c.guest_name) username, 
    c.uid, 
    s.id socket_id, 
    c.ctime, 
    c.id `sid` 
  FROM cookie c 
    INNER JOIN socket s ON s.cookie=c.id 
    LEFT JOIN drumate d ON d.id = c.uid
    LEFT JOIN dmz_user z ON z.id = c.uid
  WHERE s.id = _id
  LIMIT 1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_user_in_domain` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_user_in_domain`(
  IN _key VARCHAR(512),
  IN _domain_name VARCHAR(1000)
)
BEGIN
  DECLARE _id VARCHAR(16);
  DECLARE _sb_id VARCHAR(16);
  DECLARE _sb_db VARCHAR(50);
  DECLARE _sb_root VARCHAR(16);
  DECLARE _avatar VARCHAR(16);
  DECLARE _disk_usage float(16);
  DECLARE _exists BOOLEAN DEFAULT 1;

  SELECT e.id FROM entity e INNER JOIN(drumate d, domain m) ON e.id=d.id AND e.dom_id = m.id
    WHERE (d.username=_key AND (m.name = _domain_name OR m.id = _domain_name)) OR
    e.id=_key OR d.email=_key INTO _id;
  SELECT s.id, e.db_name, root_id FROM share_box s INNER JOIN yp.entity e USING(id)
  WHERE area = 'restricted' AND owner_id=_id INTO _sb_id, _sb_db, _sb_root;
  
  SELECT sum(e.space) FROM hub h LEFT JOIN entity e USING(id) 
    WHERE e.id=_id or h.owner_id = _id INTO _disk_usage;
  
  IF _id IS NULL OR _id = '' OR _key = '' THEN
    SELECT utils.nobody_id() INTO _id;
    SELECT 0 INTO _exists;
  END IF;
  
  SELECT
    ee.id,
    ee.id as hub_id,
    dr.username AS ident,
    dr.username AS username,
    _sb_id AS sb_id,
    _sb_db AS sb_db,
    _sb_root AS sb_root,
    db_name,
    home_dir,
    pr.privilege AS remit,
    mtime,
    ctime,
    dd.name AS domain,
    lang,
    avatar,
    status,
    profile,
    settings,
    disk_usage(ee.id) AS disk_usage,
    quota,
    firstname,
    lastname,
    fullname,
    _exists AS `exists`
    FROM entity ee INNER JOIN (drumate dr, domain dd, privilege pr) 
    ON ee.id=dr.id AND dd.id=ee.dom_id AND dr.id=pr.uid WHERE ee.id=_id
    GROUP BY(ee.id);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_visitor` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_visitor`(
  IN _key VARCHAR(512)
)
BEGIN
  DECLARE _uid VARCHAR(16);
  DECLARE _sb_id VARCHAR(16);
  DECLARE _sb_db VARCHAR(50);
  DECLARE _sb_root VARCHAR(16);
  DECLARE _avatar VARCHAR(16);
  DECLARE _disk_usage float(16);
  DECLARE _logged_in BOOLEAN DEFAULT 1;

  SELECT e.id FROM entity e LEFT JOIN(drumate u) USING(id) WHERE 
    e.id=_key OR u.email=_key INTO _uid;

  SELECT e.id, db_name, home_id
    FROM yp.hub h INNER JOIN yp.entity e USING(id) 
    WHERE area = 'restricted' and owner_id=_uid INTO _sb_id, _sb_db, _sb_root;
  
  SELECT sum(e.space) FROM hub h LEFT JOIN entity e USING(id) 
    WHERE e.id=_uid or h.owner_id = _uid INTO _disk_usage;
  
  IF _uid IS NULL OR _uid IN('', '*') OR _key IN('', '*')THEN
    SET _uid = 'ffffffffffffffff';
    SET _logged_in=0;
  END IF;
  
  SELECT
    e.id,
    e.id as oid,
    e.id as hub_id,
    u.username AS ident,
    u.username,
    _sb_id AS sb_id,
    _sb_db AS sb_db,
    _sb_root AS sb_root,
    db_name,
    _logged_in AS logged_in,
    home_dir,
    remit,
    mtime,
    ctime,
    domain,
    lang,
    avatar,
    status,
    profile,
    settings,
    disk_usage(e.id) AS disk_usage,
    quota,
    fullname
    FROM entity e 
      INNER JOIN drumate u ON u.id=e.id
      INNER JOIN privilege p ON p.uid=e.id
      INNER JOIN domain d ON d.id=e.dom_id
    WHERE e.id=_uid GROUP BY (e.id);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_visitor1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_visitor1`(
  IN _key VARCHAR(512)
)
BEGIN
  DECLARE _id VARCHAR(16);
  DECLARE _sb_id VARCHAR(16);
  DECLARE _sb_db VARCHAR(50);
  DECLARE _sb_root VARCHAR(16);
  DECLARE _avatar VARCHAR(16);
  DECLARE _disk_usage float(16);

  SELECT e.id FROM entity e LEFT JOIN(drumate u) USING(id) WHERE 
    e.ident=_key OR e.id=_key OR u.email=_key INTO _id;
  select _id;
  SELECT s.id, e.db_name, root_id FROM share_box s LEFT JOIN(entity e) ON e.id=s.id 
  WHERE owner_id=_id INTO _sb_id, _sb_db, _sb_root;
    select _id;
  SELECT sum(e.space) FROM hub h LEFT JOIN entity e USING(id) 
    WHERE e.id=_id or h.owner_id = _id INTO _disk_usage;
  
  select _id;
  
  IF _id IS NULL OR _id IN('', '*') THEN
    SET _id = 'ffffffffffffffff';
  END IF;
  
  SELECT
    e.id,
    e.id as oid,
    e.id as hub_id,
    e.ident,
    _sb_id AS sb_id,
    _sb_db AS sb_db,
    _sb_root AS sb_root,
    db_name,
    home_dir,
    remit,
    mtime,
    ctime,
    domain,
    lang,
    avatar,
    status,
    profile,
    settings,
    disk_usage(e.id) AS disk_usage,
    quota,
    fullname
    FROM entity e INNER JOIN (drumate u, privilege p, domain d)
      ON e.id=u.id AND p.uid=u.id AND d.id=p.domain_id  WHERE u.id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `get_workers` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `get_workers`(
     IN _key       VARCHAR(255)
)
BEGIN
   DECLARE _oid VARCHAR(16);

   SELECT id FROM entity WHERE ident=_key OR id=_key INTO _oid;
    
   SELECT 
    d.id ,   
    d.firstname,
    d.lastname,
    d.email,
    e.ident,
    e.domain
   FROM 
    corporate c
   INNER JOIN entity e on e.id =  c.entity_id 
   INNER JOIN drumate d on d.id=c.entity_id     
   WHERE 
    owner_id = _oid
   ORDER BY  c.ctime asc ;  

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `google_login` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `google_login`(
  IN _key VARCHAR(128),
  IN _cid VARCHAR(64),
  IN _domain_name VARCHAR(1000)
)
BEGIN

  DECLARE _uid VARCHAR(16) DEFAULT NULL;
  DECLARE _profile JSON DEFAULT "{}";
  DECLARE _sid VARCHAR(64);
  
  DECLARE _db_name VARCHAR(52) DEFAULT '0';

  DECLARE _secret VARCHAR(500);
  DECLARE _email VARCHAR(500);
  DECLARE _dom_id INT(8);


  SELECT IFNULL(domain_id,1) FROM `organisation` 
  WHERE link = _domain_name OR domain_id = _domain_name
  INTO _dom_id;

  SELECT e.id, `profile`, db_name, d.email, o.link FROM drumate d 
  INNER JOIN entity e ON e.id=d.id  
  LEFT JOIN organisation o on o.domain_id=e.dom_id
  WHERE (d.username=_key OR e.id=_key OR email=_key) AND o.link = _domain_name
  INTO _uid, _profile, _db_name, _email, _domain_name;

   SELECT id FROM cookie WHERE id=_cid INTO _sid;

    IF _sid IS NULL THEN 
      SELECT 'no_cookie' AS status;
    ELSE

      SELECT IFNULL(JSON_VALUE(_profile, "$.otp"), "") INTO @_otp;
      
      UPDATE cookie SET 
        failed=0, 
        mtime=UNIX_TIMESTAMP(), 
        
        `uid` = _uid, 
        status = 'ok',
        ttl = IFNULL(JSON_VALUE(_profile, "$.session_ttl"), 2592000)
      WHERE id=_cid;

      SELECT
        c.id AS session_id,
        e.id,
        d.username AS ident,
        d.username,
        d.fullname,
        _domain_name AS domain,
        _dom_id AS domain_id,
        db_name,
        db_host,
        fs_host,
        vhost,
        home_dir,
        home_id,
        c.status,
        email,
        dmail,
        firstname,
        lastname,
         mimicker,
        null mimic_id,
        null  mimc_type,
        area,
        area_id as aid,
        e.status AS `condition`,
        e.mtime,
        e.ctime,
        _profile AS `profile`,
        _secret `secret`
      FROM entity e INNER JOIN (drumate d, cookie c) ON e.id=d.id AND e.id=c.uid 
        WHERE d.id=_uid AND c.id=_cid;
    END IF;
 END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `handshake_add` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `handshake_add`(
  IN _handshake VARCHAR(64),
  IN _ip VARCHAR(64)
)
BEGIN
  DELETE FROM handshake WHERE UNIX_TIMESTAMP() - ctime > 300 ;
  INSERT INTO handshake SELECT null, _handshake, _ip, UNIX_TIMESTAMP();
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `handshake_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `handshake_get`(
  IN _handshake VARCHAR(64)
)
BEGIN
  SELECT * FROM handshake WHERE id=_handshake;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `helpdesk` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `helpdesk`(
_ln VARCHAR(25),
 _page int
)
BEGIN
SELECT * FROM helpdesk WHERE ln = _ln AND _page =1 ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hot_tech` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hot_tech`(
  IN _p VARCHAR(8)
)
BEGIN
  DECLARE prio INT DEFAULT 0;
  SELECT *, CONCAT(firstname, ' ', lastname) as fullname
    FROM team WHERE domain='tech' AND priority<=_p;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hubname_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hubname_exists`(
  IN _key VARCHAR(128),
  IN _domain VARCHAR(128)
)
BEGIN
  DECLARE _dom_id INTEGER DEFAULT 1;
  SELECT domain_id FROM organisation WHERE domain_id=_domain OR link=_domain INTO _dom_id;
  SELECT id, hubname FROM hub WHERE hubname=_key AND domain_id = _dom_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_all`(
    IN _uid VARCHAR(16)
    )
BEGIN

    SELECT  
      h.id,
      home_dir,
      area 
    FROM  
    yp.hub h
    INNER JOIN yp.entity e on e.id = h.id
    WHERE  h.owner_id = _uid;

  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_change_profile` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_change_profile`(
  IN _hub_id    VARCHAR(16),
  IN _name      VARCHAR(100),
  IN _value     VARCHAR(1024)
)
BEGIN
    UPDATE entity SET `settings` = JSON_SET(`profile`, CONCAT("$.", _name), _value) 
      WHERE id = _hub_id;
    SELECT id, profile FROM entity WHERE id = _hub_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_change_settings` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_change_settings`(
  IN _hub_id    VARCHAR(16),
  IN _name      VARCHAR(100),
  IN _value     VARCHAR(1024)
)
BEGIN
    UPDATE entity SET `settings` = JSON_SET(`settings`, CONCAT("$.", _name), _value) 
      WHERE id = _hub_id;
    SELECT id, settings FROM entity WHERE id = _hub_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_freeze` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_freeze`(
   IN _key VARCHAR(80)
)
BEGIN
  DECLARE _id VARCHAR(16);
  DECLARE _ident VARCHAR(128);

  SELECT id, ident FROM entity_ssv WHERE ident=_key OR id=_key INTO _id, _ident;

  START TRANSACTION;
    UPDATE entity SET status = 'frozen' WHERE  id=_id;
    
    
  COMMIT;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_has_huber` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_has_huber`(
   IN _hid VARCHAR(16),
   IN _uid VARCHAR(16)
)
BEGIN

  SELECT *  FROM membership_csv WHERE  hid=_hid AND uid=_uid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_limit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_limit`(
  _uid  VARCHAR(16) CHARACTER SET ascii
)
BEGIN

  DECLARE _q_share_hub  double  default 0.0 ;
  DECLARE _q_private_hub  double  default 0.0 ;
  DECLARE _cnt_share_hub int;
  DECLARE _cnt_private_hub int;
  DECLARE _quota json ;

  SELECT quota FROM yp.drumate WHERE id = _uid INTO _quota;
  SELECT get_json_object(_quota, "share_hub") INTO _q_share_hub;
  SELECT get_json_object(_quota, "private_hub") INTO _q_private_hub;


  
  SELECT 
    SUM(CASE WHEN e.area = 'private' then 1 else 0 END ),
    SUM(CASE WHEN e.area = 'share' then 1 else 0 END) 
    FROM 
      yp.hub h 
    INNER JOIN yp.entity e on e.id =  h.id
    WHERE 
    h.owner_id=_uid  
    INTO  _cnt_private_hub, _cnt_share_hub ;




SELECT  _q_share_hub quota_share_hub,  
        _q_private_hub quota_private_hub, 
        _cnt_share_hub   used_share_hub, 
        _cnt_private_hub  used_private_hub, 
        _q_share_hub - _cnt_share_hub  avaialable_share_hub,   
        _q_private_hub - _cnt_private_hub    available_private_hub;



END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_list` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_list`()
BEGIN
    SELECT db_name, home_dir FROM entity WHERE type = 'community';
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_list_by_owner` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_list_by_owner`(
  IN _owner_id    VARCHAR(16)
)
BEGIN
    SELECT h.id, ident, vhost, db_name, home_dir, type, area, status, settings, icon
      FROM hub h JOIN entity e USING(id) WHERE owner_id = _owner_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_register` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_register`(
  IN _ident VARCHAR(80),
  IN _area VARCHAR(16),
  IN _uid  VARCHAR(16),
  IN _profile VARCHAR(16000),
  IN _settings VARCHAR(16000),
  IN _status VARCHAR(16)
)
BEGIN
  DECLARE _db_host VARCHAR(255);
  DECLARE _fs_host VARCHAR(255);
  DECLARE _home_dir VARCHAR(255);
  DECLARE _hid VARCHAR(16);
  DECLARE _now INT(11);
  DECLARE _domain VARCHAR(80);
  DECLARE _db_name VARCHAR(80);
  DECLARE _dmail VARCHAR(500);
  DECLARE _fingerprint VARCHAR(512);

  SELECT uniqueId(), UNIX_TIMESTAMP(), utils.domain_name(), get_dmail(_ident), make_db_name()
    INTO _hid, _now, _domain, _dmail, _db_name;

  SELECT dbhost, fshost, CONCAT(site_root, _hid, '/') FROM settings WHERE build=1
   INTO _db_host, _fs_host, _home_dir;
  
  SELECT conf_value FROM sys_conf WHERE conf_key = 'icon' INTO @_icon;

  START TRANSACTION;
    INSERT INTO entity (
      `id`,`ident`,`db_name`,`db_host`,`fs_host`, `home_dir`,
      `vhost`, `settings`, `type`, `area`, icon,
      `status`, `ctime`, `mtime`)
    VALUES (
      _hid, _ident, _db_name, _db_host, _fs_host, _home_dir ,
      utils.vhost(_ident), _settings, 'community', _area, @_icon,
      IF(_status IS NULL OR _status='', 'active', _status), _now, _now);

    INSERT INTO hub (`id`, `owner_id`, `origin_id`, `name`, `keywords`, `dmail`, `profile`)
    VALUES (_hid, _uid, _uid, TRIM(IFNULL(JSON_UNQUOTE(JSON_EXTRACT(_profile, '$.name')), utils.dmail(_ident))),
    "Key words", _dmail, _profile);



    INSERT INTO yp.disk_usage VALUES(null, _hid, 0); 



    SET @s = CONCAT("CREATE DATABASE `", _db_name, "` CHARACTER SET utf8 COLLATE utf8_general_ci");
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;

  COMMIT;

  SELECT
    entity.id,
    entity.ident,
    entity.mtime,
    entity.status,
    entity.type,
    entity.area,
    entity.vhost,
    entity.headline,
    entity.layout as fallback,
    entity.home_layout as home,
    entity.layout,
    entity.db_name,
    entity.db_host,
    entity.fs_host,
    entity.home_dir,
    entity.settings,
    hub.name,
    hub.owner_id,
    hub.permission,
    hub.dmail,
    hub.photo,
    hub.profile
  FROM entity INNER JOIN hub USING(id) WHERE ident = _ident;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_search` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_search`(
  IN _pattern VARCHAR(84),
  IN _page TINYINT(4)
)
BEGIN

  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);

  SELECT
    _page as `page`,
    entity.id,
    entity.ident,
    `status`,
    `type`,
    dmail,
    vhost,
    area,
    name,
    photo,
    permission,
    entity.mtime,
    entity.ctime,
    home_layout as home,
    layout as fallback,
    headline,
    MATCH(`headline`)
      against(_pattern IN NATURAL LANGUAGE MODE WITH QUERY EXPANSION) *10
    + MATCH(`name`, keywords)
      against(_pattern IN NATURAL LANGUAGE MODE WITH QUERY EXPANSION) *10
    + IF(MATCH(`ident`)
      against(concat('*', _pattern, '*') IN BOOLEAN MODE), 25, 0) AS score
    FROM hub join entity USING(id) HAVING score > 24
    ORDER BY score DESC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_set_photo` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_set_photo`(
  IN _hid VARCHAR(16),
  IN _nid VARCHAR(16)
)
BEGIN

  UPDATE hub SET photo=_nid WHERE id=_hid;
  SELECT *, _nid as nid FROM vhost_csv WHERE id=_hid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_update`(
  IN _id VARCHAR(16),
  IN _ident VARCHAR(40),
  IN _name VARCHAR(40),
  IN _headline VARCHAR(255),
  IN _keywords VARCHAR(1024),
  IN _permission TINYINT(4)
)
BEGIN
  DECLARE _type VARCHAR(40);
  DECLARE _cur_ident VARCHAR(40);
  DECLARE _cur_oid VARCHAR(20);

  SELECT ident, area_oid FROM site_csv WHERE id=_id INTO _cur_ident, _cur_oid;

  START TRANSACTION;
    UPDATE entity SET headline=_headline, ident=_ident,
      vhost=utils.vhost(_ident), mtime=unix_timestamp() WHERE id=_id;

    UPDATE hub SET keywords=_keywords, name=_name, permission=_permission WHERE id=_id;

    IF _ident != _cur_ident AND _cur_ident !='' THEN
      UPDATE `vhost` SET fqdn=utils.vhost(_ident) WHERE fqdn=utils.vhost(_cur_ident);
    END IF;
    SELECT * FROM site_view WHERE id=_id;
  COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_update_favicon` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_update_favicon`(
  IN _hub_id    VARCHAR(16),
  IN _favicon  MEDIUMTEXT
)
BEGIN
    UPDATE entity SET icon = _favicon WHERE id = _hub_id;
    SELECT * FROM entity WHERE id = _hub_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_update_name` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_update_name`(
  IN _hub_id    VARCHAR(16),
  IN _name      VARCHAR(80)
)
BEGIN
  UPDATE hub SET `name` = _name, `profile` = JSON_SET(`profile`, "$.name", _name) WHERE id = _hub_id;
  SELECT entity.id, entity.ident, entity.mtime, entity.status, entity.type, entity.area,
  entity.vhost, entity.headline, entity.layout as fallback, entity.home_layout as home,
  entity.layout, entity.db_name, entity.db_host, entity.fs_host, entity.home_dir,
  entity.settings, hub.name, hub.permission, hub.dmail,  hub.profile
  FROM entity INNER JOIN hub USING(id) WHERE entity.id = _hub_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_update_title` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_update_title`(
  IN _hub_id    VARCHAR(16),
  IN _hub_title VARCHAR(200)
)
BEGIN
    UPDATE entity SET headline = _hub_title WHERE id = _hub_id;
    SELECT * FROM entity WHERE id = _hub_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `hub_update_visibility` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `hub_update_visibility`(
  IN _hub_id        VARCHAR(16),
  IN _visibility    VARCHAR(50)
)
BEGIN
    UPDATE entity SET area = _visibility WHERE id = _hub_id;
    SELECT * FROM entity WHERE id = _hub_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ident_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `ident_exists`(
  IN _key VARCHAR(128)
)
BEGIN
  
  SELECT id, ident, status FROM entity WHERE ident=_key 
  UNION
  SELECT id ,ident, 'active' status FROM  organisation WHERE ident=_key;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ident_exists1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `ident_exists1`(
  IN _key VARCHAR(128)
)
BEGIN
  
  SELECT id, ident, status FROM entity WHERE ident=_key 
  UNION
  SELECT id ,ident, 'active' status FROM  organisation WHERE ident=_key;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_add` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_add`(
  IN _code VARCHAR(128),
  IN _en TEXT,
  IN _fr TEXT,
  IN _ru TEXT,
  IN _zh TEXT
)
BEGIN
  DECLARE _cat VARCHAR(30) DEFAULT 'ui';
  IF _code REGEXP '^_' THEN
    SELECT 'page' INTO _cat;
  END IF;
  INSERT INTO intl VALUES(null, _code, _cat, _fr, _en, _ru, _zh);
  SELECT sys_id as id, key_code, fr, en, ru, zh FROM intl WHERE key_code = _code;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_add_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_add_next`(
  IN _code VARCHAR(128),
  IN _cat VARCHAR(128),
  IN _lng VARCHAR(28),
  IN _des TEXT
)
BEGIN
  REPLACE INTO languages VALUES(null, _code, _cat, _lng, _des);
  SELECT LAST_INSERT_ID() AS id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_delete`(
  IN _key VARCHAR(80)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  DELETE FROM intl WHERE sys_id=_key OR (key_code=_key and category='ui');
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_delete_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_delete_next`(
  IN _key VARCHAR(128),
  IN _cat VARCHAR(128)
)
BEGIN
  DELETE FROM languages WHERE key_code=_key AND category=_cat;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_error` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_error`(
  IN _code VARCHAR(128),
  IN _level VARCHAR(20),
  IN _err_code INT(8),
  IN _fr TEXT,
  IN _en TEXT
)
BEGIN
  INSERT INTO intl VALUES(_code, 'error', _fr, _en);
  INSERT INTO error VALUES(_code, _level, _err_code);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_find` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_find`(
  IN _arg VARCHAR(128)
)
BEGIN
  SET @arg = CONCAT('%', _arg, '%');
  SELECT * FROM intl WHERE key_code LIKE @arg OR fr LIKE @arg OR en LIKE @arg;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_get`(
  IN _key VARCHAR(80)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  select sys_id as id, key_code, fr, en, ru, zh FROM intl WHERE 
    _key = sys_id OR (key_code=_key and category='ui');
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_get_by_group` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_get_by_group`(
  IN _key VARCHAR(64)
)
BEGIN

  SELECT * FROM intl WHERE key_code LIKE CONCAT(_key, "%");

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_get_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_get_next`(
  IN _key VARCHAR(80),
  IN _cat VARCHAR(80)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  SELECT *, lng AS `name`, `des` AS `value`, sys_id AS id
    FROM languages WHERE key_code=_key AND category=_cat;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_keys` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_keys`(
  IN _page TINYINT(6)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);
  SELECT _page as `page`, sys_id as id, key_code
    FROM languages WHERE category='ui'
  GROUP BY key_code ORDER BY key_code ASC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_keys_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_keys_next`(
  IN _key VARCHAR(80),
  IN _cat VARCHAR(80)
)
BEGIN

  IF LENGTH(_key) < 3 THEN
    SET @pattern = CONCAT(TRIM(_key), '%');
  ELSE
    SET @pattern = CONCAT('%', TRIM(_key), '%');
  END IF;

  SELECT DISTINCT(key_code) AS content FROM languages WHERE 
    (key_code LIKE @pattern OR `des`LIKE @pattern) AND category=_cat 
    LIMIT 20;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_list` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_list`(
  IN _page TINYINT(6)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);
  select _page as `page`, sys_id as id, key_code, fr, en, ru, zh from intl where category='ui'
  ORDER BY key_code ASC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_list_by_type` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_list_by_type`(
  IN _type VARCHAR(16),
  IN _page TINYINT(6)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);
  select _page as `page`, sys_id as id, key_code, fr, en, ru, zh from intl where category=_type
  ORDER BY key_code ASC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_list_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_list_next`(
  IN _cat VARCHAR(80),
  IN _page TINYINT(6)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  SET @rows_per_page=100;
  CALL pageToLimits(_page, _offset, _range);
  SELECT _page as `page`, sys_id as id, key_code, lng, `des` 
    FROM languages WHERE category=_cat
  ORDER BY key_code ASC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_search` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_search`(
  IN _arg VARCHAR(128),
  IN _page INT(4)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);
  SET @arg = CONCAT('%', _arg, '%');
  SELECT *, sys_id AS id, _page as `page`
    FROM intl WHERE key_code LIKE @arg OR fr LIKE @arg OR en LIKE @arg
    ORDER BY `key_code` ASC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_search_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_search_next`(
  IN _arg VARCHAR(128),
  IN _cat VARCHAR(128),
  IN _page INT(4)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);

  IF LENGTH(_arg) < 3 THEN
    SET @arg = CONCAT(TRIM(_arg), '%');
  ELSE
    SET @arg = CONCAT('%', TRIM(_arg), '%');
  END IF;

  DROP TABLE IF EXISTS __tmp_search;
  CREATE TEMPORARY TABLE __tmp_search (
    `sys_id` int(11) unsigned,
    `key_code` varchar(40) NOT NULL,
    `category` varchar(40),
    `lng` varchar(20) NOT NULL,
    `des` text NOT NULL
  );

  INSERT INTO __tmp_search SELECT * FROM languages 
    WHERE category=_cat AND key_code LIKE @arg OR `des` LIKE @arg
    ORDER BY `key_code` ASC LIMIT _offset, _range;

  SELECT l.*, l.sys_id id FROM  __tmp_search t LEFT JOIN languages l ON 
    t.key_code=l.key_code WHERE l.category=_cat ORDER BY `key_code` ASC;
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_update`(
  IN _key VARCHAR(40),
  IN _en TEXT,
  IN _fr TEXT,
  IN _ru TEXT,
  IN _zh TEXT
)
BEGIN
  DECLARE _cat VARCHAR(30) DEFAULT 'ui';
  IF _key REGEXP '^_' THEN
    SELECT 'page' INTO _cat;
  END IF;
  UPDATE intl SET en=_en, fr=_fr, ru=_ru, zh=_zh WHERE 
    _key = sys_id OR (key_code=_key and category=_cat);
  SELECT key_code, fr, en, ru, zh FROM intl WHERE 
    _key = sys_id OR (key_code=_key and category=_cat);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_update_by_id` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_update_by_id`(
  IN _id INTEGER,
  IN _key VARCHAR(80),
  IN _en TEXT,
  IN _fr TEXT,
  IN _ru TEXT,
  IN _zh TEXT
)
BEGIN

  DECLARE _cat VARCHAR(30) DEFAULT 'ui';
  IF _key REGEXP '^_' THEN
    SELECT 'page' INTO _cat;
    SELECT lower(_key) INTO _key;
  END IF;

  UPDATE intl 
    SET key_code=_key, en=_en, fr=_fr, ru=_ru, zh=_zh, category=_cat
    WHERE _id = sys_id;
  SELECT category, key_code, fr, en, ru, zh 
    FROM intl 
    WHERE _id = sys_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `intl_update_by_id_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `intl_update_by_id_next`(
  IN _id INTEGER,
  IN _value TEXT
)
BEGIN

  DECLARE _lng VARCHAR(30) DEFAULT 'ui';
  DECLARE _cat VARCHAR(30) DEFAULT 'ui';
  DECLARE _key VARCHAR(80) DEFAULT '';
  SELECT lng, category, key_code FROM languages 
    WHERE sys_id=_id INTO _lng, _cat, _key;
  IF _lng IS NOT NULL THEN 
    UPDATE languages SET `des`=_value WHERE sys_id=_id;
    SELECT *, sys_id id, 'previous' position FROM languages 
      WHERE key_code < _key AND lng=_lng AND category=_cat LIMIT 1;
    SELECT *, sys_id id, 'current' position FROM languages  WHERE sys_id=_id;
    SELECT *, sys_id id, 'next' position FROM languages 
      WHERE key_code > _key AND lng=_lng AND category=_cat LIMIT 1;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `is_drumate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `is_drumate`(
  IN _key VARCHAR(255)
)
BEGIN
  SELECT * FROM user_view WHERE ident=_key OR id=_key OR email=_key AND status='active';
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `is_in_media` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `is_in_media`(
 IN _nid VARBINARY(16),
 IN _entity_db VARCHAR(20)

)
BEGIN
    SELECT 0 INTO @is_in_media; 

    SET @s = CONCAT('SELECT  1 FROM ', _entity_db, 
      '.media WHERE id = ? INTO  @is_in_media');
    PREPARE stmt FROM @s;
    EXECUTE stmt USING _nid;
    DEALLOCATE PREPARE stmt;

    SELECT @is_in_media is_in_media; 

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `language_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `language_exists`(
  IN _locale       VARCHAR(100)
)
BEGIN
  SELECT COUNT(*) AS lang FROM language WHERE state = 'active' AND lcid = _locale;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `lang_search` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `lang_search`(
  IN _arg VARCHAR(128),
  IN _page TINYINT(4)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);
  SELECT *, _page as `page`, IF(lcid=_arg, 100, 0)
    + IF(locale_en=_arg, 100, 0)
    + IF(locale=_arg, 100, 0)
    + IF(code=_arg, 50, 0)
    + IF(locale_en LIKE concat(_arg, "%"), 25 ,0)
    + IF(locale_en LIKE concat("%", _arg, "%"), 13, 0)
    + IF(locale LIKE concat(_arg, "%"), 25,0)
    + IF(locale LIKE concat("%", _arg, "%"), 13, 0)
    + MATCH(locale_en, locale, comment)
      against(_arg IN NATURAL LANGUAGE MODE WITH QUERY EXPANSION) AS score
    FROM `language` HAVING score > 25
    ORDER BY score DESC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_all_db` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `list_all_db`(
)
BEGIN

  select db_name from entity where type='drumate' or type='community' or type='hub';

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_drumate_db` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `list_drumate_db`(
)
BEGIN

  select db_name from entity where type='drumate';

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_hubers` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `list_hubers`(
  IN _cid VARBINARY(16),
  IN _uid VARBINARY(16),
  IN _page TINYINT(4)
)
BEGIN
  DECLARE _ident VARCHAR(255);
  DECLARE _area VARCHAR(20);
  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);

  SELECT area FROM entity WHERE id=_cid INTO _area;

  IF _area = 'private' THEN
    SELECT ident FROM hubers_csv WHERE cid=_cid AND id=_uid INTO _ident;
    IF _ident IS NOT NULL OR _ident!='' THEN
      SELECT * FROM  hubers_csv WHERE cid=_cid ORDER BY lastname, firstname ASC LIMIT _offset, _range;
    END IF;
  ELSE
    SELECT * FROM  hubers_csv WHERE cid=_cid ORDER BY lastname, firstname ASC LIMIT _offset, _range;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_hubs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `list_hubs`(
  IN _page TINYINT(4)
)
BEGIN

  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);

  SELECT
    entity.id,
    entity.ident,
    area_id as aid,
    `status`,
    `type`,
    dmail,
    vhost,
    area,
    cname as `name`,
    photo,
    photo_banner as bannerImage,
    ctime,
    home_layout as home,
    permission,
    headline,
    keywords
    FROM community join entity USING(id) WHERE area='public' OR area='restricted'
    ORDER BY ctime DESC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_hub_db` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `list_hub_db`(
)
BEGIN

  select db_name from entity where type='community' or type='hub';

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `list_procs` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `list_procs`(
  IN _dbname VARCHAR(32)
)
BEGIN

  SELECT ROUTINE_NAME FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA = _dbname
  AND ROUTINE_TYPE = 'PROCEDURE';

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `logout` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `logout`(
  IN _key VARCHAR(128),
  IN _ip VARCHAR(120)
)
BEGIN

  DELETE FROM sessions  WHERE (id=_key) OR (user_id=_key AND last_ip=_ip);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `log_activity` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `log_activity`(
  IN _uid      varchar(16),
  IN _username varchar(40),
  IN _ip       varchar(40),
  IN _ip_fwd   varchar(40),
  IN _req_uri  varchar(255),
  IN _referer  varchar(255),
  IN _ua       varchar(255),
  IN _action   varchar(40)
)
BEGIN

  INSERT INTO log values(
    sha2(uuid(),224),
    sha2(uuid(),224),
    _uid,
    _username,
    UNIX_TIMESTAMP(),
    UNIX_TIMESTAMP(),
    0,
    _ip,
    _ip_fwd,
    _req_uri,
    _referer,
    _ua,
    _action
  );
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `log_request` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `log_request`(
  IN _firstname VARCHAR(255),
  IN _lastname VARCHAR(255),
  IN _email VARCHAR(255),
  IN _ident VARCHAR(255),
  IN _message TEXT,
  IN _reason VARCHAR(16)
)
BEGIN

  DECLARE _now INT(11) DEFAULT 0;
  DECLARE _cksum VARCHAR(255);

  SELECT UNIX_TIMESTAMP() into _now;
  SELECT sha2(uuid(),224) INTO _cksum;

  INSERT INTO
    request (`firstname`,`lastname`,`email`, `id`, `message`,`reason`,`ident`,`tstamp`)
    VALUES (_firstname, _lastname, _email, _cksum, _message,_reason,_ident,_now);

  SELECT * FROM request WHERE id = _cksum;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `log_signon` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `log_signon`(
  IN _firstname VARCHAR(255),
  IN _lastname VARCHAR(255),
  IN _email VARCHAR(500),
  IN _ident VARCHAR(80),
  IN _fingerprint VARCHAR(255),
  IN _ip VARCHAR(40),
  IN _referer VARCHAR(500)
)
BEGIN

  DECLARE _now INT(11) DEFAULT 0;
  DECLARE _key VARCHAR(255);

  SELECT UNIX_TIMESTAMP() into _now;
  SELECT sha2(uuid(),224) INTO _key;

  DELETE FROM signon WHERE email=_email;
  INSERT INTO
    signon VALUES(_firstname, _lastname, _email, _ident, _fingerprint, _key, _ip, _referer, _now);

  SELECT * FROM signon WHERE `key` = _key;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `lookup_area` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `lookup_area`(
  IN _id VARBINARY(16)
)
BEGIN
  SELECT * FROM entity_ssv WHERE area_id=_id GROUP BY area_id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `lookup_dmail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `lookup_dmail`(
  IN _key VARCHAR(255)
)
BEGIN
  SELECT COUNT(*) FROM postfix.mailbox WHERE local_part=_key;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `lookup_drumates` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `lookup_drumates`(
  IN _key VARCHAR(255),
  IN _page TINYINT(4)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);
  SELECT 
    _page as `page`,
    d.id,
    e.ident,
    d.firstname,
    d.lastname,
    d.remit,
    email
  FROM entity e INNER JOIN (yp.drumate d) USING(id) 
    WHERE ident 
    LIKE CONCAT(_key, "%") OR 
    email LIKE CONCAT(_key, "%") OR 
    d.firstname LIKE CONCAT(_key, "%") OR 
    d.lastname LIKE CONCAT(_key, "%") ORDER BY d.lastname DESC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `lookup_hub` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `lookup_hub`(
  IN _id VARBINARY(16)
)
BEGIN
  SELECT * FROM site_csv WHERE id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `lookup_site_member` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `lookup_site_member`(
  IN _cid VARCHAR(16),
  IN _privilege INT(8)
)
BEGIN
  SELECT * FROM member_view WHERE cid=_cid AND privilege >=_privilege;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `lookup_user` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `lookup_user`(
  IN _key VARCHAR(255)
)
BEGIN
  DECLARE _type VARCHAR(40);
  DECLARE _id VARBINARY(16);

  SELECT `type`,id FROM entity WHERE ident=_key OR id=_key OR vhost=_key INTO _type, _id;

  IF _type = 'community' THEN
    SELECT * FROM community_profile WHERE id=_id;
  ELSEIF _type = 'dummy' THEN
    SELECT * FROM entity WHERE id='ffffffffffffffff';
  ELSE
    SELECT * FROM user_profile WHERE id=_id;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mediaEnv` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `mediaEnv`(
  OUT _vhost VARCHAR(255),
  OUT _hub_id VARCHAR(16), 
  OUT _area VARCHAR(25),
  OUT _home_dir VARCHAR(512),
  OUT _home_id VARCHAR(16),
  OUT _db_name VARCHAR(50),
  OUT _accessibility VARCHAR(16)
)
BEGIN
  SELECT utils.vhost(ident), id, area, home_dir, db_name, accessibility 
  from yp.entity where db_name=database()
  INTO _vhost, _hub_id, _area, _home_dir, _db_name, _accessibility;
  SELECT id from media where parent_id='0' INTO _home_id;
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `member_admin_list` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `member_admin_list`(
  IN _org_id VARCHAR(16),
  IN _page INT(6)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  
   CALL pageToLimits(_page, _offset, _range);
   SELECT 
      _page as `page`,
      o.id ogrid,
      o.name org_name,
      dm.id  domain_id,
      dm.name domain_name,
      d.id drumate_id,
      d.firstname,
      d.lastname,
      d.fullname,
      d.email,
      d.connected,
      d.username  ident,
      read_json_object(d.profile, "address")  `address`,
      read_json_object(d.profile, "personaldata")  personaldata,
      read_json_object(d.profile, "mobile")  mobile,
      read_json_object(d.profile, "areacode")  areacode, 
      p.privilege, 
      CASE WHEN IFNULL(read_json_object(d.profile, "mobile_verified"),'no') <> 'yes' THEN 'no' ELSE 'yes' END  mobile_verified,
      CASE WHEN IFNULL(read_json_object(d.profile, "email_verified"),'no') <> 'yes' THEN 'no' ELSE 'yes' END  email_verified,  
     
     
      e.status,
      IFNULL(JSON_UNQUOTE(JSON_EXTRACT(e.settings, '$.status_date')),null) status_date,
      d.otp
    FROM 
      privilege p 
      INNER JOIN organisation o ON p.domain_id=o.domain_id  
      INNER JOIN domain dm ON  dm.id = p.domain_id  
      INNER JOIN drumate d ON p.uid = d.id 
      INNER JOIN entity e  ON d.id = e.id 
     WHERE  o.id =_org_id  AND   p.privilege <> 1
      ORDER BY fullname ASC, d.id ASC
      LIMIT _offset, _range; 

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `member_detail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `member_detail`(
  IN _role_id INT,
  IN _org_id VARCHAR(16),
  IN _key VARCHAR(200),
  IN _page INT(6)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  
  CALL pageToLimits(_page, _offset, _range);

  
   IF _role_id IN (0) THEN 
   SELECT NULL INTO  _role_id;
  END IF;

  IF  _role_id IS NOT NULL THEN 
    SELECT 
      _page as `page`,
      dm.id  domain_id,
      dm.name domain_name,
      d.id drumate_id,
      d.firstname,
      d.lastname,
      d.fullname,
      d.email,
      e.ident,
      read_json_object(d.profile, "address")  `address`,
      read_json_object(d.profile, "personaldata")  personaldata,
      read_json_object(d.profile, "mobile")  mobile 
    FROM 
      privilege p 
      INNER JOIN organisation o ON p.domain_id=o.domain_id  
      INNER JOIN domain dm ON  dm.id = p.domain_id  
      INNER JOIN drumate d ON p.uid = d.id 
      INNER JOIN entity e  ON d.id = e.id 
      INNER JOIN map_role m ON p.uid= m.uid AND  o.id= m.org_id
    WHERE 
      o.id =_org_id  AND  
      m.role_id =_role_id  AND
      (CONCAT(d.firstname, ' ', d.lastname) LIKE CONCAT('%', TRIM(_key),'%') OR d.email LIKE CONCAT('%', TRIM(_key), '%'))
    ORDER BY fullname ASC
    LIMIT _offset, _range; 


  ELSE 
    SELECT 
      _page as `page`,
      dm.id  domain_id,
      dm.name domain_name,
      d.id drumate_id,
      d.firstname,
      d.lastname,
      d.fullname,
      d.email,
      e.ident,
      read_json_object(d.profile, "address")  `address`,
      read_json_object(d.profile, "personaldata")  personaldata,
      read_json_object(d.profile, "mobile")  mobile 
    FROM 
      privilege p 
      INNER JOIN organisation o ON p.domain_id=o.domain_id  
      INNER JOIN domain dm ON  dm.id = p.domain_id  
      INNER JOIN drumate d ON p.uid = d.id 
      INNER JOIN entity e  ON d.id = e.id 
    WHERE 
     o.id =_org_id AND 
    (CONCAT(d.firstname, ' ', d.lastname) LIKE CONCAT('%', TRIM(_key),'%') OR d.email LIKE CONCAT('%', TRIM(_key), '%'))
    ORDER BY fullname ASC
    LIMIT _offset, _range;    
   END IF; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `member_list` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `member_list`(
  IN _uid VARCHAR(16),
  IN _role_id INT,
  IN _org_id VARCHAR(16),
  IN _key VARCHAR(200),
  IN _option VARCHAR(200),
  IN _page INT(6)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  DECLARE _owner_id VARCHAR(16);
  DECLARE _dom_id INT;
  CALL pageToLimits(_page, _offset, _range);

  SELECT owner_id, domain_id FROM yp.organisation WHERE id = _org_id INTO _owner_id , _dom_id;

  IF _role_id IN (0) THEN 
   SELECT NULL INTO  _role_id;
  END IF;

  IF  _role_id IS NOT NULL THEN 
    SELECT 
      _page as `page`,
      dm.id  domain_id,
      dm.name domain_name,
      d.id drumate_id,
      d.firstname,
      d.lastname,
      d.fullname,
      d.email,
      d.connected,
      d.username  ident,
      read_json_object(d.profile, "address")  `address`,
      read_json_object(d.profile, "personaldata")  personaldata,
      read_json_object(d.profile, "mobile")  mobile,
      read_json_object(d.profile, "areacode")  areacode, 
      p.privilege , 
      e.status,
      IFNULL(JSON_UNQUOTE(JSON_EXTRACT(e.settings, '$.status_date')),null) status_date,
      d.otp, 
      CASE WHEN IFNULL(read_json_object(d.profile, "mobile_verified"),'no') <> 'yes' THEN 'no' ELSE 'yes' END  mobile_verified,
      CASE WHEN IFNULL(read_json_object(d.profile, "email_verified"),'no') <> 'yes' THEN 'no' ELSE 'yes' END  email_verified
    FROM 
      privilege p 
      INNER JOIN organisation o ON p.domain_id=o.domain_id  
      INNER JOIN domain dm ON  dm.id = p.domain_id  
      INNER JOIN drumate d ON  d.id  = p.uid 
      INNER JOIN entity e  ON d.id = e.id 
      INNER JOIN map_role m ON p.uid= m.uid AND  o.id= m.org_id
    WHERE 
      o.id =_org_id  AND
      p.domain_id = _dom_id AND 
      m.role_id =_role_id   AND
     
      (CONCAT(d.firstname, ' ', d.lastname) LIKE CONCAT('%', TRIM(_key),'%') OR d.email LIKE CONCAT('%', TRIM(_key), '%')) AND
      CASE  WHEN _option = 'member'   AND  p.privilege  = p.privilege  THEN  1  
            WHEN _option = 'admin'     AND  p.privilege  > 1  THEN  1  
            WHEN _option = 'nonadmin'  AND  p.privilege  = 1  AND  IFNULL(JSON_EXTRACT(d.profile, "$.mobile"),'-x-') <> '-x-'  THEN  1 
            WHEN _option = 'blocked'   AND  e.status    = 'locked' THEN  1 
            WHEN _option = 'archived'  AND  e.status    = 'archived' THEN  1 ELSE 0 END =1  AND 
      CASE WHEN  e.status = 'archived' AND  _option IN ('member','admin' , 'nonadmin' ) THEN 1 ELSE 0 END = 0 
     ORDER BY fullname ASC, d.id ASC
     LIMIT _offset, _range; 


  ELSE 
     SELECT
      _page as `page`,
      dm.id  domain_id,
      dm.name domain_name,
      d.id drumate_id,
      d.firstname,
      d.lastname,
      d.fullname,
      d.email,
      d.connected,
      d.username  ident,
      read_json_object(d.profile, "address")  `address`,
      read_json_object(d.profile, "personaldata")  personaldata,
      read_json_object(d.profile, "mobile")  mobile,
      read_json_object(d.profile, "areacode")  areacode, 
      p.privilege, 
      e.status,
      IFNULL(JSON_UNQUOTE(JSON_EXTRACT(e.settings, '$.status_date')),null) status_date,
      d.otp, 
      CASE WHEN IFNULL(read_json_object(d.profile, "mobile_verified"),'no') <> 'yes' THEN 'no' ELSE 'yes' END  mobile_verified,
      CASE WHEN IFNULL(read_json_object(d.profile, "email_verified"),'no') <> 'yes' THEN 'no' ELSE 'yes' END  email_verified
    FROM 
      privilege p 
      INNER JOIN organisation o ON p.domain_id=o.domain_id  
      INNER JOIN domain dm ON  dm.id = p.domain_id  
      INNER JOIN drumate d ON p.uid = d.id 
      INNER JOIN entity e  ON d.id = e.id 
    WHERE 
      o.id =_org_id AND 
      p.domain_id =   _dom_id AND 
    
      (CONCAT(d.firstname, ' ', d.lastname) LIKE CONCAT('%', TRIM(_key),'%') OR d.email LIKE CONCAT('%', TRIM(_key), '%')) AND
      CASE  WHEN _option = 'member'    AND  p.privilege  = p.privilege AND p.privilege >0 THEN  1  
            WHEN _option = 'admin'     AND  p.privilege  >1  THEN  1  
            WHEN _option = 'nonadmin'  AND  p.privilege  = 1 AND IFNULL(JSON_EXTRACT(d.profile, "$.mobile"),'-x-') <> '-x-' THEN  1 
            WHEN _option = 'blocked'   AND  e.status    = 'blocked' THEN  1 
            WHEN _option = 'archived'  AND  e.status    = 'archived' THEN  1 ELSE 0 END =1 AND 
      CASE WHEN  e.status = 'archived' AND  _option IN ('member','admin' , 'nonadmin' ) THEN 1 ELSE 0 END = 0 
      ORDER BY fullname ASC, d.id ASC
      LIMIT _offset, _range;    
   END IF; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `member_list_all` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `member_list_all`(
  IN _uid VARCHAR(16),
  IN _key VARCHAR(16)
)
BEGIN
 SELECT 
      o.id ogrid,
      o.name org_name,
      dm.id  domain_id,
      dm.name domain_name,
      d.id drumate_id,
      d.firstname,
      d.lastname,
      d.fullname,
      d.email,
      d.connected,
      d.username  ident,
      read_json_object(d.profile, "address")  `address`,
      read_json_object(d.profile, "personaldata")  personaldata,
      read_json_object(d.profile, "mobile")  mobile,
      read_json_object(d.profile, "areacode")  areacode, 
      p.privilege, 
      CASE WHEN IFNULL(read_json_object(d.profile, "mobile_verified"),'no') <> 'yes' THEN 'no' ELSE 'yes' END  mobile_verified,
      CASE WHEN IFNULL(read_json_object(d.profile, "email_verified"),'no') <> 'yes' THEN 'no' ELSE 'yes' END  email_verified,  
      e.status,
      IFNULL(JSON_UNQUOTE(JSON_EXTRACT(e.settings, '$.status_date')),null) status_date,
      d.otp
    FROM 
      privilege p 
      INNER JOIN organisation o ON p.domain_id=o.domain_id  
      INNER JOIN domain dm ON  dm.id = p.domain_id  
      INNER JOIN drumate d ON p.uid = d.id 
      INNER JOIN entity e  ON d.id = e.id 
     WHERE  (o.id =_key OR (o.domain_id = _key  
      AND LENGTH(_key) <> 16 ))  
      
      AND  d.id <> _uid
     ORDER BY fullname ASC, d.id ASC;
   

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `member_seen_by` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `member_seen_by`(
  IN _uid VARCHAR(16),
  IN _hubs JSON,
  IN _roles JSON
)
BEGIN
 DECLARE _idx INTEGER DEFAULT 0;
 DECLARE _hub_id VARCHAR(16);
 DECLARE _role_id  INTEGER;
 DECLARE _length INTEGER DEFAULT 0;
 

 SELECT  JSON_LENGTH(_hubs)  INTO _length;

  WHILE _idx < _length  DO 
    SELECT JSON_UNQUOTE(JSON_EXTRACT(_hubs, CONCAT("$[", _idx, "]"))) INTO _hub_id;
    INSERT INTO contact_sync(hub_id,uid,status) 
    SELECT _hub_id,_uid,'new' ON DUPLICATE KEY UPDATE status =status;
    SELECT _idx + 1 INTO _idx;
  END WHILE;

  SELECT 0 INTO _length;

  SELECT  JSON_LENGTH(_roles)  INTO _length;

  WHILE _idx < _length  DO 
    SELECT JSON_UNQUOTE(JSON_EXTRACT(_roles, CONCAT("$[", _idx, "]"))) INTO _role_id;
    INSERT INTO contact_sync(hub_id,uid,status) 
    SELECT uid,_uid,'new' map_role  WHERE  role_id = _role_id ON DUPLICATE KEY UPDATE status =status;
    SELECT _idx + 1 INTO _idx;
  END WHILE;


  SELECT * FROM contact_sync;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mfs_home` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `mfs_home`(
)
BEGIN
  DECLARE _area VARCHAR(25);

  DECLARE _home_dir VARCHAR(500);
  DECLARE _name VARCHAR(500);

  DECLARE _home_id VARCHAR(16) CHARACTER SET ascii; 
  DECLARE _chat_upload_id VARCHAR(16) CHARACTER SET ascii; 
  DECLARE _chat_id VARCHAR(16) CHARACTER SET ascii; 

  DECLARE _ticket_id VARCHAR(16) CHARACTER SET ascii; 
  DECLARE _entity_id VARCHAR(16) CHARACTER SET ascii;
  SELECT id  FROM media WHERE parent_id='0' INTO _home_id;
  SELECT node_id_from_path('/__chat__/__upload__') INTO _chat_upload_id;
  SELECT node_id_from_path('/__chat__/') INTO _chat_id;
  SELECT node_id_from_path('/__ticket__/') INTO _ticket_id;
  
  SELECT id ,area, home_dir from yp.entity WHERE  db_name=database() INTO _entity_id, _area, _home_dir ; 
 
  SELECT name FROM  yp.hub  WHERE id = _entity_id  INTO _name;

  IF _name IS NULL THEN 
     SELECT CONCAT(firstname, ' ', lastname) FROM yp.drumate 
     WHERE id = _entity_id  INTO _name;
  END IF;

  SELECT utils.vhost(_entity_id) vhost, 
    _entity_id AS hub_id, 
    _area area, 
    _home_dir home_dir, 
    _name AS `name`,
    _home_id AS home_id,
    _chat_upload_id chat_upload_id,
    _chat_id  chat_id,
    _ticket_id ticket_id;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mfs_init_folders` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `mfs_init_folders`(
  IN _folders JSON,
  IN _clear_existing boolean
)
BEGIN
  DECLARE _i INT(4) DEFAULT 0; 
  DECLARE _pid VARCHAR(16);
  DECLARE _home_id VARCHAR(16);
  DECLARE _uid VARCHAR(16);
  DECLARE _status VARCHAR(16);
  DECLARE _path TEXT;
  IF _clear_existing THEN 
    SELECT id FROM media WHERE parent_id='0' INTO _home_id;
    DELETE FROM media WHERE status='active' AND parent_id=_home_id;
    SELECT id FROM yp.entity WHERE db_name=database() INTO _uid;
    UPDATE media SET origin_id=_uid;
  END IF;
  WHILE _i < JSON_LENGTH(_folders) DO 
    SELECT JSON_UNQUOTE(JSON_EXTRACT(_folders, CONCAT("$[", _i, "]"))) INTO @_node;
    SELECT JSON_UNQUOTE(JSON_EXTRACT(@_node, "$.path")) INTO _path;
    SELECT TRIM(TRAILING '/' FROM TRIM(LEADING '/' FROM _path)) INTO _path;
    SELECT IFNULL(JSON_UNQUOTE(JSON_EXTRACT(@_node, "$.pid")), _home_id) INTO _pid;
    SELECT IFNULL(JSON_UNQUOTE(JSON_EXTRACT(@_node, "$.status")), 'active') INTO _status;
    CALL mfs_make_dir(_pid, JSON_ARRAY(_path), 0);
    UPDATE media SET status=_status WHERE file_path=CONCAT('/', _path, '.folder');
    SELECT _i + 1 INTO _i;
  END WHILE;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mfs_new_node` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `mfs_new_node`(
  IN _origin_id       VARCHAR(16),
  IN _owner_id        VARCHAR(16),
  IN _user_filename   VARCHAR(512),
  IN _pid             VARCHAR(20),
  IN _category        VARCHAR(50),
  IN _ext             VARCHAR(100),
  IN _mimetype        VARCHAR(100),
  IN _geometry        VARCHAR(200),
  IN _file_size       BIGINT UNSIGNED,
  IN _show_results    BOOLEAN
)
BEGIN
  DECLARE _vhost VARCHAR(255);
  DECLARE _hub_id VARCHAR(16);
  DECLARE _area VARCHAR(50);
  DECLARE _home_dir VARCHAR(512);
  DECLARE _home_id VARCHAR(16);
  DECLARE _src_db_name VARCHAR(50);
  DECLARE _accessibility VARCHAR(20);

  DECLARE _fileid   VARCHAR(16) DEFAULT '';
  DECLARE _ts   INT(11) DEFAULT 0;
  DECLARE _parent_id TEXT;
  DECLARE _root_id VARCHAR(16);
  DECLARE _parent_path TEXT;
  DECLARE _parent_name VARCHAR(100) DEFAULT '';
  DECLARE _file_path   VARCHAR(1024);
  DECLARE _file_name VARCHAR(1024);
  DECLARE _username VARCHAR(100);
  DECLARE _org VARCHAR(500);

  SELECT UNIX_TIMESTAMP() INTO _ts;
  SELECT yp.uniqueId() INTO _fileid;

  SELECT username, link FROM yp.drumate d 
    INNER JOIN yp.organisation o ON o.domain_id = d.domain_id
    WHERE d.id=_owner_id INTO _username, _org;

  

  IF IFNULL(_pid, '0') IN('', '0') THEN 
    SELECT id FROM media WHERE parent_id='0' INTO  _pid;
  END IF;

  explain SELECT id, REGEXP_REPLACE(user_filename, '^[/ ]+|/+|\<.*\>|[/ ]+$', '') 
    FROM media WHERE id=_pid INTO _parent_id, _parent_name;

  IF _parent_id IS NULL OR _parent_id='' THEN 
    SELECT id FROM media m WHERE m.parent_id='0' INTO  _parent_id;
    
  END IF;
  

  SELECT COUNT(*) FROM media WHERE parent_id = _pid INTO @_count;

  SELECT parent_path(_parent_id) INTO _parent_path;
  SELECT REGEXP_REPLACE(_user_filename, '^[/ ]+|\<.*\>|[/ ]+$', '') INTO _file_name;
  SELECT REGEXP_REPLACE(_file_name, '( *)(/+)( *)', '') INTO _file_name;

  SELECT unique_filename(_parent_id, _file_name, _ext) INTO _file_name;

  IF(_ext IS NULL OR _category IN('folder', 'hub') OR _ext IN('', 'folder')) THEN
    SELECT CONCAT(_parent_path, '/', _parent_name, '/', _file_name)
    INTO _file_path;
    SELECT '' INTO _ext;
  ELSEIF (_category='hub') THEN
    SELECT _username INTO _ext;
  ELSE
    SELECT CONCAT(_parent_path, '/', _parent_name, '/', _file_name, '.', _ext)
    INTO _file_path;
  END IF;

  SELECT clean_path(_file_path) INTO _file_path;

  INSERT INTO `media` (
    id, 
    origin_id, 
    owner_id,
    file_path, 
    user_filename, 
    parent_id, 
    parent_path,

    extension, 
    mimetype, 
    category,
    isalink,

    filesize, 
    `geometry`, 
    publish_time, 
    upload_time, 

    `status`,
    rank
  ) VALUES (
    _fileid, 
    _origin_id, 
    _owner_id,
    _file_path, 
    TRIM('/' FROM _file_name),
    _pid, 
    _parent_path,

    _ext, 
    _mimetype, 
    _category, 
    0,

    IFNULL(_file_size, 4096),
    IFNULL(_geometry, '0x0'), 
    _ts, 
    _ts, 

    IF(_category='stylesheet', 'idle', 'active'),
    @_count
  );
  
  
  DROP TABLE IF EXISTS __register_stack;
  CREATE TEMPORARY TABLE __register_stack LIKE template.__register_stack;
  INSERT INTO __register_stack VALUES (
    _fileid, 
    _origin_id, 
    _owner_id, 
    _file_path, 
    _file_name,
    _pid, 
    _parent_path,

    _ext, 
    _mimetype, 
    _category, 
    0,

    IFNULL(_file_size, 4096),
    IFNULL(_geometry, '0x0'), 
    _ts, 
    _ts, 

    'active',
    @_count
  );

  SET @perm = 0;
  
  
  
  
  
  


  IF _category NOT IN ('hub', 'folder') THEN 
    UPDATE media SET metadata=JSON_MERGE(
      IFNULL(metadata, '{}'), 
      JSON_OBJECT('_seen_', JSON_OBJECT(_owner_id, UNIX_TIMESTAMP()))
    )
    WHERE id=_fileid;
  END IF; 
  UPDATE media SET parent_path=parent_path(_fileid) WHERE id=_fileid;

  IF IFNULL(_show_results, 0) != 0  THEN
    SELECT 
      m.id, 
      m.id as nid, 
      concat(_home_dir, "/__storage__/") AS mfs_root,
      parent_id AS pid,
      parent_id,
      e.id AS holder_id,
      e.home_id,
      e.home_dir,
      user_permission(_origin_id, m.id)  AS privilege,
      e.id AS owner_id,    
      e.id AS hub_id,    
      yp.vhost(e.id) AS vhost,    
      user_filename AS filename,
      _file_path AS filepath,
      filesize,
      e.area,
      caption,
      e.accessibility,
      capability,
      m.extension,
      m.extension AS ext,
      m.category AS ftype,
      m.category AS filetype,
      m.mimetype,
      download_count AS view_count,
      geometry,
      upload_time AS ctime,
      publish_time AS mtime,
      firstname,
      lastname,
      m.category,
      user_filename,
      _username AS username,
      _org AS organization,
      _file_path AS file_path, 
      parent_path
    FROM media m
      INNER JOIN yp.entity e  ON e.db_name=database()
      LEFT JOIN yp.drumate dr ON e.id = dr.id
      LEFT JOIN yp.domain d ON d.id = e.dom_id
      LEFT JOIN yp.filecap ff ON m.extension=ff.extension

      
      
      WHERE m.id = _fileid;
  END IF ;

  SELECT id FROM yp.entity WHERE db_name=database() INTO _hub_id;
  UPDATE yp.disk_usage SET size = (IFNULL(size,0) + _file_size) WHERE hub_id = _hub_id;
  

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mfs_reorder` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `mfs_reorder`(
  IN _nodes JSON
)
BEGIN
  DECLARE _i INTEGER DEFAULT 0;
  DROP TABLE IF EXISTS __tmp_rank;
  CREATE TEMPORARY TABLE __tmp_rank(
    `rank` INTEGER,
    `id` varchar(16) DEFAULT NULL
  ); 

  WHILE _i < JSON_LENGTH(_nodes) DO 
    
    
    INSERT INTO __tmp_rank 
      SELECT _i, JSON_UNQUOTE(JSON_EXTRACT(_nodes, CONCAT("$[", _i, "]")));
    SELECT _i + 1 INTO _i;
  END WHILE;
  UPDATE media m INNER JOIN __tmp_rank t ON m.id=t.id SET m.rank = t.rank WHERE m.status='active';
  SELECT * FROM __tmp_rank;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mfs_restore_into` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `mfs_restore_into`(
  IN _nodes JSON,
  IN _uid VARCHAR(16)
)
BEGIN
  DECLARE _idx INT(4) DEFAULT 0; 
  DECLARE _nid VARCHAR(16);
  DECLARE _hub_id VARCHAR(16);
  DECLARE _hub_db VARCHAR(40);
  DECLARE _home_dir VARCHAR(512);
  DECLARE _dest_db VARCHAR(50);
  DECLARE _dest_home_dir VARCHAR(512);
  DECLARE _temp_nid  VARCHAR(16);


  DECLARE _dest_id VARCHAR(16);
  DECLARE _recipient_id VARCHAR(16);

  
  DECLARE _is_root tinyint(2) ;
  DECLARE _is_sbx tinyint(2) DEFAULT 0;
  DECLARE _origin_id      VARCHAR(16);   
  DECLARE _file_name      VARCHAR(512); 
  DECLARE _category       VARCHAR(50);   
  DECLARE _extension      VARCHAR(100); 
  DECLARE _mimetype       VARCHAR(100);      
  DECLARE _file_size      INT(20) UNSIGNED;
  DECLARE _geometry       VARCHAR(200);       
  DECLARE _status         VARCHAR(50); 
  DECLARE _finished       INTEGER DEFAULT 0;
  DECLARE _seq            INTEGER;  
  DECLARE _id             VARCHAR(16);   
  DECLARE _new_parent_id  VARCHAR(16);  

  DECLARE _metadata       JSON; 
  DECLARE _isalink         tinyint(2) unsigned DEFAULT 0;

    DROP TABLE IF EXISTS  _src_media;
    CREATE TEMPORARY TABLE `_src_media` (
      `seq`  int NOT NULL AUTO_INCREMENT,
      `is_root` boolean default 0 ,
      `id` varchar(16) DEFAULT NULL,
      `origin_id` varchar(16) DEFAULT NULL,
      `user_filename` varchar(128) DEFAULT NULL,
      `metadata` JSON,
      `isalink`  tinyint(2) unsigned, 
      `category`      VARCHAR(50) DEFAULT NULL,
      `parent_id` varchar(16) DEFAULT null,
      `extension` varchar(100) NOT NULL DEFAULT '',
      `mimetype` varchar(100) NOT NULL,
      `filesize` int(20) unsigned NOT NULL DEFAULT '0',
      `geometry` varchar(200) NOT NULL DEFAULT '0x0',
      `new_id` varchar(16) DEFAULT NULL,  
      `new_parent_id` varchar(16) DEFAULT '' ,
      `is_checked` boolean default 0 ,
       home_dir VARCHAR(512) DEFAULT null,
       db_name VARCHAR(512) DEFAULT null,
       hub_id VARCHAR(16) DEFAULT null,
       dest_home_dir VARCHAR(512) DEFAULT null,
       dest_db_name VARCHAR(512) DEFAULT null,
       dest_hub_id VARCHAR(16) DEFAULT null,
    
       permission   tinyint(4) unsigned , 
       PRIMARY KEY `seq`(`seq`)  
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;


  DROP TABLE IF EXISTS _final_media; 
  CREATE TEMPORARY TABLE `_final_media` (
    nid varchar(16) DEFAULT NULL,  
    src_mfs_root varchar(1024) DEFAULT NULL,  
    des_id varchar(16) DEFAULT NULL,  
    des_mfs_root varchar(1024) DEFAULT NULL, 
    dest_hub_id VARCHAR(16) DEFAULT null, 
    dest_db_name VARCHAR(512) DEFAULT null,
    action varchar(16) DEFAULT NULL
    );

  
  


  WHILE _idx < JSON_LENGTH(_nodes) DO 
    DELETE FROM _src_media;

    
    SELECT JSON_UNQUOTE(JSON_EXTRACT(_nodes, CONCAT("$[", _idx, "]"))) INTO @_node;
    SELECT JSON_VALUE(@_node, "$.nid") INTO _nid;
    SELECT JSON_VALUE(@_node, "$.hub_id") INTO _hub_id;
    SELECT JSON_VALUE(@_node, "$.pid") INTO _dest_id;
    SELECT JSON_VALUE(@_node, "$.recipient_id") INTO _recipient_id;
    
    SELECT db_name, home_dir FROM yp.entity WHERE id=_recipient_id  
      INTO _dest_db, _dest_home_dir;


    
    SET @st = CONCAT("CREATE TEMPORARY TABLE IF NOT EXISTS  ",
      _dest_db,".__register_stack LIKE template.__register_stack"
    ); 
    PREPARE stmt FROM @st;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;



    SELECT db_name, home_dir FROM yp.entity WHERE id=_hub_id INTO _hub_db ,_home_dir;
    
    
    SET @st = CONCAT("
      INSERT INTO _src_media SELECT 
      null,0, id, origin_id, user_filename,metadata,isalink, category, parent_id, 
      extension, mimetype, filesize, geometry, null, null, 0,
      ?, ?, ?, ?, ?, ?, 0
      FROM ", _hub_db , ".media m WHERE  parent_id <>'0' AND  m.id =?"
    );  
    PREPARE stmt FROM @st;
    EXECUTE stmt USING _home_dir, _hub_db, _hub_id, _dest_home_dir, _dest_db, _recipient_id, _nid;
    DEALLOCATE PREPARE stmt; 

    UPDATE _src_media SET new_parent_id = _dest_id  WHERE  id=_nid; 
    SELECT id FROM _src_media WHERE id = _nid INTO _temp_nid ;

     WHILE _temp_nid IS NOT NULL DO
       
        SELECT seq,id,origin_id,user_filename,metadata, isalink,category,extension,mimetype,`geometry`,filesize,new_parent_id ,is_root
        FROM _src_media WHERE id =_temp_nid 
        INTO _seq,_id,_origin_id,_file_name,_metadata, _isalink,_category,_extension,_mimetype,_geometry,_file_size, _new_parent_id,_is_root;        
     

        IF _category = 'hub' THEN
          
          IF _hub_id = _recipient_id   THEN
          
            SET @st = CONCAT("UPDATE ", _hub_db,
              ".media SET  file_path=?, parent_id=? WHERE id =?"
            );
            PREPARE stmt3 FROM @st;
            EXECUTE stmt3 USING _temp_nid, _new_parent_id, _temp_nid;
            DEALLOCATE PREPARE stmt3;

            SET @st = CONCAT("UPDATE ", _hub_db, 
              ".media SET parent_path=",_hub_db,".parent_path(?) WHERE id =?"
            );
            PREPARE stmt3 FROM @st;
            EXECUTE stmt3 USING _temp_nid, _temp_nid;
            DEALLOCATE PREPARE stmt3;


            SET @st = CONCAT( "UPDATE ",_hub_db, 
              ".media SET status='active', file_path =clean_path(concat(parent_path, '/', user_filename, '.', extension)) 
              WHERE id =?");
            PREPARE stmt3 FROM @st;
            EXECUTE stmt3 USING _temp_nid;
            DEALLOCATE PREPARE stmt3;

          END IF;
        
          IF _hub_id <> _recipient_id AND _is_root = 0  THEN
            SET @st = CONCAT("UPDATE ",_hub_db, 
              ".media m , (SELECT id FROM ",_hub_db,".media WHERE  parent_id = '0') p SET 
              m.parent_id =p.id, status='active',
              m.parent_path ='/',
              m.file_path =  clean_path(CONCAT('/', m.user_filename, '.', m.extension))
              WHERE m.id =?");
            PREPARE stmt3 FROM @st;
            EXECUTE stmt3 USING _temp_nid;
            DEALLOCATE PREPARE stmt3;
          END IF;

        ELSE 
          
          IF _category = 'folder' THEN
            SET @st = CONCAT("
              INSERT INTO _src_media SELECT 
              null,0, id, origin_id, user_filename, category, parent_id, 
              extension, mimetype, filesize, geometry, null, null, 0,
              ?, ?, ?, ?, ?, ?, 0
              FROM ", _hub_db , ".media m WHERE m.parent_id =?"
            );  
            PREPARE stmt FROM @st;
            EXECUTE stmt USING _home_dir, _hub_db, _hub_id, _dest_home_dir, _dest_db, _recipient_id, _temp_nid;
            DEALLOCATE PREPARE stmt; 
          END IF ;

          SET @st = CONCAT( "DELETE FROM ",_hub_db,".media WHERE category <> 'hub' AND id= ",QUOTE(_temp_nid));
          PREPARE stmt3 FROM @st;
          EXECUTE stmt3;
          DEALLOCATE PREPARE stmt3;


          SET @st = CONCAT( "DELETE FROM ",_dest_db,".__register_stack"); 
          PREPARE stmt1 FROM @st;
          EXECUTE stmt1;
          DEALLOCATE PREPARE stmt1;

          SET @st = CONCAT("CALL ", _dest_db, ".mfs_new_node(?,?,?,?,?,?,?,?,?,?)");
          PREPARE stmt2 FROM @st;
          EXECUTE stmt2 USING 
            _origin_id     ,
            _uid           ,
            _file_name     ,
            _new_parent_id ,
            _category      ,
            _extension     ,
            _mimetype      ,
            _geometry      ,
            _file_size     , 
            0;           
          DEALLOCATE PREPARE stmt2;
SELECT 1;

          SET @st = CONCAT( "SELECT id ,parent_id FROM ",
            _dest_db,".__register_stack INTO @temp_nid, @pid");
          PREPARE stmt3 FROM @st;
          EXECUTE stmt3;
          DEALLOCATE PREPARE stmt3;   

          IF _isalink  = 1 THEN 
              SET @st = CONCAT( "UPDATE ",_dest_db,".media SET metadata=?,isalink=1 WHERE id=?");
              PREPARE stmt3 FROM @st;
              EXECUTE stmt3 USING _metadata,  @temp_nid;
              DEALLOCATE PREPARE stmt3; 
          END IF;                  

          UPDATE _src_media SET new_id = @temp_nid WHERE seq = _seq ; 
          UPDATE _src_media SET new_parent_id = @temp_nid WHERE parent_id = _temp_nid; 
        END IF;

          
        UPDATE _src_media SET is_checked = 1 WHERE id = _temp_nid ;
        SELECT NULL,NULL,NULL INTO _temp_nid ,@temp_nid,@pid;
        SELECT id FROM _src_media WHERE is_checked =0 AND new_parent_id IS NOT NULL LIMIT 1 INTO _temp_nid ;

     END WHILE;
    
    INSERT INTO _final_media  
    SELECT IFNULL(new_id,id) ,NULL ,NULL, NULL,dest_hub_id ,dest_db_name,'showone' FROM _src_media WHERE seq=1; 
    INSERT INTO _final_media 
    SELECT IFNULL(new_id,id),NULL ,NULL, NULL,dest_hub_id ,dest_db_name,'show' FROM _src_media WHERE is_root=1;

    
    

    INSERT INTO _final_media  
    SELECT id ,  CONCAT(home_dir, "/__storage__/") ,  new_id , CONCAT(dest_home_dir, "/__storage__/")  ,dest_hub_id,dest_db_name , 'move'  
    FROM _src_media WHERE category NOT IN ("folder","hub") ; 
    
    
 

    SELECT _idx + 1 INTO _idx;
  END WHILE;
  SELECT * FROM _final_media;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mfs_show_node_by` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `mfs_show_node_by`(
  IN _node_id VARCHAR(16) CHARACTER SET ascii,
  IN _uid VARCHAR(16) CHARACTER SET ascii,
  IN _sort_by VARCHAR(20),
  IN _order   VARCHAR(20),
  IN _page    TINYINT(4)
)
BEGIN
 
  DECLARE _range bigint;
  DECLARE _offset bigint;
  DECLARE _home_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _src_db_name VARCHAR(255);
  DECLARE _finished       INTEGER DEFAULT 0; 
  DECLARE _nid VARCHAR(16) CHARACTER SET ascii;  
  DECLARE _parent_id VARCHAR(16) CHARACTER SET ascii;  
  DECLARE _hub_db_name VARCHAR(255);
  DECLARE _ftype VARCHAR(255);

  DECLARE _sys_id INT;
  DECLARE _temp_sys_id INT;
  DECLARE _db VARCHAR(400);


  DECLARE _tempid VARCHAR(16) CHARACTER SET ascii;
  DECLARE _category VARCHAR(16);
  DECLARE _area VARCHAR(30);
  DECLARE _flag_expiry VARCHAR(30);
  DECLARE _lvl INT;
  
  DECLARE _hubs MEDIUMTEXT DEFAULT NULL;
  DECLARE _hub_id VARCHAR(16);
  DECLARE _username VARCHAR(100);
  DECLARE _org VARCHAR(500);
  DECLARE _ts INT(11);
  DECLARE _expiry_time INT(11);
  SELECT UNIX_TIMESTAMP() INTO _ts;

  CALL pageToLimits(_page, _offset, _range);  
  SELECT database() INTO _src_db_name;
  SELECT id  from media where parent_id='0' INTO _home_id;
  IF _node_id IS NULL OR _node_id='0' THEN 
    SELECT _home_id INTO _node_id;
  END IF;
  
  IF _node_id REGEXP "^/.+" THEN 
    SELECT id FROM media WHERE file_path = clean_path(_node_id) INTO _node_id;
  END IF;

  DROP TABLE IF EXISTS _temp_show_node;
  CREATE TEMPORARY TABLE _temp_show_node  AS  
  SELECT 
    m.id AS nid,
    m.parent_id AS pid,
    m.parent_id AS parent_id,
    m.file_path as filepath,
    me.id  AS holder_id,    
    _home_id  AS home_id,   
    ff.capability,
    _src_db_name AS src_db_name,
    he.db_name hub_db_name,
    COALESCE(he.accessibility,me.accessibility) AS  accessibility,
    COALESCE(he.id, hh.owner_id) AS owner_id,
    COALESCE(he.id, me.id) AS hub_id,
    
    COALESCE(he.status, m.status) AS status,
    
    m.user_filename AS filename,
    m.filesize AS filesize,
    COALESCE(vv.fqdn, v.fqdn) AS vhost,
    he.area AS area,
    m.caption,
    m.extension AS ext,
    m.category AS ftype,
    m.category AS filetype,
    m.mimetype,
    m.metadata,
    m.download_count AS view_count,
    m.geometry,
    m.upload_time AS ctime,
    m.publish_time AS mtime,
    is_new(m.metadata, COALESCE(he.id, hh.owner_id) , _uid)  new_file,
    isalink,
     _page as page,
     m.rank,
    IF(m.category = 'hub' , null, user_permission(_uid, m.id )) privilege,
    IF(m.category = 'hub' , null, user_expiry(_uid, m.id )) expiry_time
  FROM media m
    INNER JOIN yp.entity me  ON me.db_name=database()
    LEFT JOIN yp.vhost v ON  v.id=me.id
    LEFT JOIN yp.vhost vv ON  vv.id=m.id
    LEFT JOIN yp.filecap ff ON m.extension=ff.extension
    LEFT JOIN yp.entity he ON m.id = he.id AND m.category='hub'
    LEFT JOIN yp.hub hh ON m.id = hh.id AND m.category='hub'
  WHERE m.parent_id=_node_id AND 
    m.file_path not REGEXP '^/__(chat|trash|upload)__' AND 
    m.`status` NOT IN ('hidden', 'deleted') ;

  ALTER TABLE _temp_show_node ADD sys_id INT PRIMARY KEY AUTO_INCREMENT;
  ALTER TABLE _temp_show_node ADD flag_expiry VARCHAR(30) DEFAULT 'na';
  ALTER TABLE _temp_show_node modify  new_file int DEFAULT 0;

  SELECT sys_id, IF(ftype = 'hub', hub_db_name, null), IF(ftype = 'hub', nid, null) , area
    FROM _temp_show_node WHERE sys_id > 0  AND  (hub_db_name is not null) ORDER BY sys_id ASC LIMIT 1 
    INTO _sys_id , _db, _nid,_area;


  WHILE _sys_id <> 0 DO

    SET @perm = 0;
    SET @resexpiry = NULL;
    SET @s = CONCAT("SELECT ",
      _db,".user_permission (?, ?) INTO @perm"
    );
    PREPARE stmt FROM @s;
    EXECUTE stmt USING _uid, _nid;
    DEALLOCATE PREPARE stmt; 

    
    SET @resexpiry = null;    
    SET @s = CONCAT("SELECT ",
      _db,".user_expiry (?, ?) INTO @resexpiry"
    );
    PREPARE stmt FROM @s;
    EXECUTE stmt USING _uid, _nid;
    DEALLOCATE PREPARE stmt;

   SELECT 'na' INTO _flag_expiry ;

    IF _area = 'share' THEN
        SET @expiry_time = NULL;
        SET @s = CONCAT("
                  SELECT p.expiry_time
                  FROM  ",_db,".permission p 
                  INNER JOIN yp.dmz_token t ON p.entity_id = t.guest_id
                  INNER JOIN yp.dmz_user u ON p.entity_id = u.id
                INNER JOIN yp.entity e ON e.id=  t.hub_id AND  e.home_id = t.node_id
                  WHERE e.db_name='",_db,"' AND  u.id = utils.get('guest_id')  INTO @expiry_time"
        );
        PREPARE stmt FROM @s;
        EXECUTE stmt ;
        DEALLOCATE PREPARE stmt;
        SELECT 
          CASE 
            WHEN IFNULL(@expiry_time,0) = 0 THEN  'infinity' 
            WHEN (@expiry_time - _ts) <= 0  THEN 'expired'
            ELSE 'active'
        END INTO  _flag_expiry; 
      
    END IF;

    
    UPDATE _temp_show_node s SET privilege = @perm, expiry_time = @resexpiry ,flag_expiry =_flag_expiry 
      WHERE sys_id = _sys_id;
    SELECT _sys_id INTO  _temp_sys_id ;  
    SELECT 0 , NULL,NULL INTO  _sys_id, _db , _area; 

    SELECT IFNULL(sys_id,0), IF(ftype = 'hub', hub_db_name, src_db_name), nid ,area
    FROM _temp_show_node WHERE sys_id >_temp_sys_id AND ftype = 'hub' AND hub_db_name IS NOT NULL ORDER BY sys_id ASC LIMIT 1 
    INTO _sys_id, _db, _nid,_area;

  END WHILE;


  DROP TABLE IF EXISTS _show_node;
  CREATE TEMPORARY TABLE _show_node  AS 
  SELECT * FROM _temp_show_node WHERE 
    (expiry_time = 0 OR expiry_time > UNIX_TIMESTAMP()) AND 
    privilege > 0 ORDER BY 
    CASE WHEN LCASE(_sort_by) = 'date' and LCASE(_order) = 'asc' THEN ctime END ASC,
    CASE WHEN LCASE(_sort_by) = 'date' and LCASE(_order) = 'desc' THEN ctime END DESC,
    CASE WHEN LCASE(_sort_by) = 'name' and LCASE(_order) = 'asc' THEN filename END ASC,
    CASE WHEN LCASE(_sort_by) = 'name' and LCASE(_order) = 'desc' THEN filename END DESC,
    CASE WHEN LCASE(_sort_by) = 'rank' and LCASE(_order) = 'asc' THEN rank END ASC,
    CASE WHEN LCASE(_sort_by) = 'rank' and LCASE(_order) = 'desc' THEN rank END DESC,
    CASE WHEN LCASE(_sort_by) = 'size' and LCASE(_order) = 'asc' THEN filesize END ASC,
    CASE WHEN LCASE(_sort_by) = 'size' and LCASE(_order) = 'desc' THEN filesize END DESC
  LIMIT _offset ,_range;

  ALTER table _show_node ADD hubs MEDIUMTEXT ;
  ALTER table _show_node ADD nodes MEDIUMTEXT ;
  ALTER table _show_node ADD actual_home_id VARCHAR(16) ;

    DROP TABLE IF EXISTS _node_tree; 
    CREATE TEMPORARY TABLE _node_tree (
     `seq`  int NOT NULL AUTO_INCREMENT,
     `heritage_id` varchar(16) CHARACTER SET ascii,
     `id` varchar(16) CHARACTER SET ascii,
     `parent_id` varchar(16) CHARACTER SET ascii, 
     `category` varchar(16) ,
     `new_file` int default 0, 
    
      PRIMARY KEY `seq`(`seq`)
      );



    INSERT INTO _node_tree 
    (heritage_id, id, parent_id ,category)
    WITH RECURSIVE mytree AS 
    ( 
      SELECT id heritage_id , id, parent_id ,category
      FROM media WHERE id IN  (
        SELECT nid from _show_node WHERE category in ('folder','hub' ) 
      ) AND   category in ('folder','hub' )
      UNION ALL
      SELECT t.heritage_id,m.id,m.parent_id ,m.category
      FROM media AS m JOIN mytree AS t ON m.parent_id = t.id AND
        t.category IN ('folder','hub' ) 
      
    ) SELECT heritage_id, id, parent_id ,category  FROM mytree;


    SELECT MAX(seq) FROM _node_tree  INTO _lvl; 
    SELECT id,category FROM _node_tree WHERE seq = _lvl 
    INTO _tempid  ,_category;

    WHILE ( _lvl >= 1 AND  _tempid IS NOT NULL) DO

      IF (_category = 'hub') THEN
        SET @_temp_read_cnt = 0; 
        SELECT db_name FROM yp.entity WHERE id = _tempid  
        INTO _hub_db_name; 
        IF (_hub_db_name IS NOT NULL) THEN 
          SET @s = CONCAT(
            "SELECT IFNULL(SUM(is_new(metadata, owner_id, ?)), 0) FROM ", _hub_db_name ,
            ".media WHERE file_path not REGEXP '^/__(chat|trash)__' INTO @_temp_file_count"
          );
          PREPARE stmt FROM @s;
          EXECUTE stmt USING _uid;
          DEALLOCATE PREPARE stmt;
          UPDATE  _node_tree   SET new_file = @_temp_file_count WHERE id = _tempid;


          SET @s = CONCAT("SELECT id FROM ", 
              _hub_db_name ,".media WHERE parent_id='0' INTO @actual_home_id"
            );
          PREPARE stmt FROM @s;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
          UPDATE _show_node SET actual_home_id =@actual_home_id WHERE nid = _tempid;

        END IF;
      END IF;
      SELECT _lvl - 1  INTO _lvl; 
      SELECT NULL, NULL INTO _tempid,_category;
      SELECT id,category FROM _node_tree WHERE seq = _lvl 
      INTO _tempid,_category;
    END WHILE;

    UPDATE  _node_tree t 
    INNER JOIN media m USING(id) 
    SET t.new_file=is_new(m.metadata, owner_id, _uid)
    WHERE t.category <>  'hub';

    UPDATE _show_node t 
    INNER JOIN ( SELECT  heritage_id , 
      SUM(new_file) new_file ,
      
      GROUP_CONCAT( CASE WHEN id <> heritage_id THEN  id  ELSE NULL END ) nodes,
      GROUP_CONCAT(CASE WHEN category = 'hub' AND id <> heritage_id THEN  id  ELSE NULL END ) hubs
    FROM _node_tree GROUP by heritage_id ) h ON nid = heritage_id
    SET t.new_file =h.new_file, 
        
        
        t.nodes = h.nodes,
        t.hubs = h.hubs;

  SELECT
    nid,
    pid,
    parent_id,
    filepath,
    holder_id,
    home_id,
    capability,
    src_db_name,
    hub_db_name,
    accessibility,
    owner_id,
    status,
    filename,
    filetype,
    hub_id,
    area,
    filesize,
    vhost,
    isalink,
    caption,
    ext,
    ftype,
    mimetype,
    metadata,
    view_count,
    geometry,
    ctime,
    mtime,
    new_file,
    
    
    
    page,
    rank,
    privilege,
    expiry_time,
    sys_id,
    hubs,
    nodes,
    IFNULL(actual_home_id, _home_id) actual_home_id,
    flag_expiry dmz_expiry
  FROM _show_node  ORDER BY 
    CASE WHEN LCASE(_sort_by) = 'date' and LCASE(_order) = 'asc' THEN ctime END ASC,
    CASE WHEN LCASE(_sort_by) = 'date' and LCASE(_order) = 'desc' THEN ctime END DESC,
    CASE WHEN LCASE(_sort_by) = 'name' and LCASE(_order) = 'asc' THEN filename END ASC,
    CASE WHEN LCASE(_sort_by) = 'name' and LCASE(_order) = 'desc' THEN filename END DESC,
    CASE WHEN LCASE(_sort_by) = 'rank' and LCASE(_order) = 'asc' THEN rank END ASC,
    CASE WHEN LCASE(_sort_by) = 'rank' and LCASE(_order) = 'desc' THEN rank END DESC,
    CASE WHEN LCASE(_sort_by) = 'size' and LCASE(_order) = 'asc' THEN filesize END ASC,
    CASE WHEN LCASE(_sort_by) = 'size' and LCASE(_order) = 'desc' THEN filesize END DESC;

  DROP TABLE IF EXISTS _temp_show_node;
  DROP TABLE IF EXISTS _show_node;
  DROP TABLE IF EXISTS _node_tree;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mfs_show_node_byxxxx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `mfs_show_node_byxxxx`(
  IN _node_id VARCHAR(16) CHARACTER SET ascii,
  IN _uid VARCHAR(16) CHARACTER SET ascii,
  IN _sort_by VARCHAR(20),
  IN _order   VARCHAR(20),
  IN _page    TINYINT(4)
)
BEGIN
 
  DECLARE _range bigint;
  DECLARE _offset bigint;
  DECLARE _home_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _src_db_name VARCHAR(255);
  DECLARE _finished       INTEGER DEFAULT 0; 
  DECLARE _nid VARCHAR(16) CHARACTER SET ascii;  
  DECLARE _parent_id VARCHAR(16) CHARACTER SET ascii;  
  DECLARE _hub_db_name VARCHAR(255);
  DECLARE _ftype VARCHAR(255);

  DECLARE _sys_id INT;
  DECLARE _temp_sys_id INT;
  DECLARE _db VARCHAR(400);


  DECLARE _tempid VARCHAR(16) CHARACTER SET ascii;
  DECLARE _category VARCHAR(16);
  DECLARE _lvl INT;
  
  DECLARE _hubs MEDIUMTEXT DEFAULT NULL;
  DECLARE _hub_id VARCHAR(16);


  CALL pageToLimits(_page, _offset, _range);  
  SELECT database() INTO _src_db_name;
  SELECT id  from media where parent_id='0' INTO _home_id;
  IF _node_id IS NULL OR _node_id='0' THEN 
    SELECT _home_id INTO _node_id;
  END IF;
  
  IF _node_id REGEXP "^/.+" THEN 
    SELECT id FROM media WHERE file_path = CONCAT(
      clean_path(_node_id), '.folder') INTO _node_id;
  END IF;

  DROP TABLE IF EXISTS _temp_show_node;
  CREATE TEMPORARY TABLE _temp_show_node  AS  
  SELECT 
    m.id AS nid,
    m.parent_id AS pid,
    m.parent_id AS parent_id,
    m.file_path as filepath,
    me.id  AS holder_id,    
    _home_id  AS home_id,   
    ff.capability,
    _src_db_name AS src_db_name,
    he.db_name hub_db_name,
    COALESCE(he.accessibility,me.accessibility) AS  accessibility,
    COALESCE(he.id, hh.owner_id) AS owner_id,
    COALESCE(he.id, me.id) AS hub_id,
    
    COALESCE(he.status, m.status) AS status,
    COALESCE(hh.name, m.user_filename) AS filename,
    m.filesize AS filesize,
    COALESCE(vv.fqdn, v.fqdn) AS vhost,
    IF(m.category='hub', m.extension, me.area) AS area,
    m.caption,
    m.extension AS ext,
    m.category AS ftype,
    m.category AS filetype,
    m.mimetype,
    m.metadata,
    m.download_count AS view_count,
    m.geometry,
    m.upload_time AS ctime,
    m.publish_time AS mtime,
    0 new_file,
    isalink,
     _page as page,
     m.rank,
    IF(m.category = 'hub' , null, user_permission(_uid, m.id )) privilege,
    IF(m.category = 'hub' , null, user_expiry(_uid, m.id )) expiry_time
  FROM media m
    INNER JOIN yp.entity me  ON me.db_name=database()
    LEFT JOIN yp.vhost v ON  v.id=me.id
    LEFT JOIN yp.vhost vv ON  vv.id=m.id
    LEFT JOIN yp.filecap ff ON m.extension=ff.extension
    LEFT JOIN yp.entity he ON m.id = he.id AND m.category='hub'
    LEFT JOIN yp.hub hh ON m.id = hh.id AND m.category='hub'
  WHERE m.parent_id=_node_id AND 
    m.file_path not REGEXP '^/__(chat|trash)__' AND 
    m.`status` != 'hidden' ;

  ALTER TABLE _temp_show_node ADD sys_id INT PRIMARY KEY AUTO_INCREMENT;


  SELECT sys_id, IF(ftype = 'hub', hub_db_name, null), IF(ftype = 'hub', nid, null) 
    FROM _temp_show_node WHERE sys_id > 0  AND  (hub_db_name is not null) ORDER BY sys_id ASC LIMIT 1 
    INTO _sys_id , _db, _nid;


  WHILE _sys_id <> 0 DO

    SET @perm = 0;
    SET @resexpiry = NULL;
    SET @s = CONCAT("SELECT ",
      _db,".user_permission (?, ?) INTO @perm"
    );
    PREPARE stmt FROM @s;
    EXECUTE stmt USING _uid, _nid;
    DEALLOCATE PREPARE stmt; 

    
    SET @resexpiry = null;    
    SET @s = CONCAT("SELECT ",
      _db,".user_expiry (?, ?) INTO @resexpiry"
    );
    PREPARE stmt FROM @s;
    EXECUTE stmt USING _uid, _nid;
    DEALLOCATE PREPARE stmt;

    
    UPDATE _temp_show_node s SET privilege = @perm, expiry_time = @resexpiry  
      WHERE sys_id = _sys_id;
    SELECT _sys_id INTO  _temp_sys_id ;  
    SELECT 0 , NULL INTO  _sys_id, _db ; 

    SELECT IFNULL(sys_id,0), IF(ftype = 'hub', hub_db_name, src_db_name), nid 
    FROM _temp_show_node WHERE sys_id >_temp_sys_id AND ftype = 'hub' AND hub_db_name IS NOT NULL ORDER BY sys_id ASC LIMIT 1 
    INTO _sys_id, _db, _nid;

  END WHILE;


  DROP TABLE IF EXISTS _show_node;
  CREATE TEMPORARY TABLE _show_node  AS 
  SELECT * FROM _temp_show_node WHERE 
    (expiry_time = 0 OR expiry_time > UNIX_TIMESTAMP()) AND 
    privilege > 0 ORDER BY 
    CASE WHEN LCASE(_sort_by) = 'date' and LCASE(_order) = 'asc' THEN ctime END ASC,
    CASE WHEN LCASE(_sort_by) = 'date' and LCASE(_order) = 'desc' THEN ctime END DESC,
    CASE WHEN LCASE(_sort_by) = 'name' and LCASE(_order) = 'asc' THEN filename END ASC,
    CASE WHEN LCASE(_sort_by) = 'name' and LCASE(_order) = 'desc' THEN filename END DESC,
    CASE WHEN LCASE(_sort_by) = 'rank' and LCASE(_order) = 'asc' THEN rank END ASC,
    CASE WHEN LCASE(_sort_by) = 'rank' and LCASE(_order) = 'desc' THEN rank END DESC,
    CASE WHEN LCASE(_sort_by) = 'size' and LCASE(_order) = 'asc' THEN filesize END ASC,
    CASE WHEN LCASE(_sort_by) = 'size' and LCASE(_order) = 'desc' THEN filesize END DESC
  LIMIT _offset ,_range;

  ALTER table _show_node ADD hubs MEDIUMTEXT ;
  ALTER table _show_node ADD nodes MEDIUMTEXT ;
  ALTER table _show_node ADD actual_home_id VARCHAR(16) ;

    DROP TABLE IF EXISTS _node_tree; 
    CREATE TEMPORARY TABLE _node_tree (
     `seq`  int NOT NULL AUTO_INCREMENT,
     `heritage_id` varchar(16) CHARACTER SET ascii,
     `id` varchar(16) CHARACTER SET ascii,
     `parent_id` varchar(16) CHARACTER SET ascii, 
     `category` varchar(16) ,
     `new_file` int default 0, 
    
      PRIMARY KEY `seq`(`seq`)
      );



    INSERT INTO _node_tree 
    (heritage_id, id, parent_id ,category)
    WITH RECURSIVE mytree AS 
    ( 
      SELECT id heritage_id , id, parent_id ,category
      FROM media WHERE id in  (select nid from _show_node)
        UNION ALL
      SELECT t.heritage_id,m.id,m.parent_id ,m.category
      FROM media AS m JOIN mytree AS t ON m.parent_id = t.id
    ) SELECT heritage_id, id, parent_id ,category  FROM mytree;



    SELECT MAX(seq) FROM _node_tree  INTO _lvl; 
    SELECT id,category FROM _node_tree WHERE seq = _lvl 
    INTO _tempid  ,_category;

    WHILE ( _lvl >= 1 AND  _tempid IS NOT NULL) DO

      IF (_category = 'hub') THEN
        SET @_temp_read_cnt = 0; 
        SELECT db_name FROM yp.entity WHERE id = _tempid  
        INTO _hub_db_name; 
        IF (_hub_db_name IS NOT NULL) THEN 
          SET @s = CONCAT(
            "SELECT IFNULL(SUM(is_new(metadata, owner_id, ?)), 0) FROM ", _hub_db_name ,
            ".media WHERE file_path not REGEXP '^/__(chat|trash)__' INTO @_temp_file_count"
          );
          PREPARE stmt FROM @s;
          EXECUTE stmt USING _uid;
          DEALLOCATE PREPARE stmt;
          UPDATE  _node_tree   SET new_file = @_temp_file_count WHERE id = _tempid;


          SET @s = CONCAT("SELECT id FROM ", 
              _hub_db_name ,".media WHERE parent_id='0' INTO @actual_home_id"
            );
          PREPARE stmt FROM @s;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
          UPDATE _show_node SET actual_home_id =@actual_home_id WHERE nid = _tempid;

        END IF;
      END IF;
      SELECT _lvl - 1  INTO _lvl; 
      SELECT NULL, NULL INTO _tempid,_category;
      SELECT id,category FROM _node_tree WHERE seq = _lvl 
      INTO _tempid,_category;
    END WHILE;

    UPDATE  _node_tree t 
    INNER JOIN media m USING(id) 
    SET t.new_file=is_new(m.metadata, owner_id, _uid)
    WHERE t.category <>  'hub';

    UPDATE _show_node t 
    INNER JOIN ( SELECT  heritage_id , 
      SUM(new_file) new_file ,
      
      GROUP_CONCAT( CASE WHEN id <> heritage_id THEN  id  ELSE NULL END ) nodes,
      GROUP_CONCAT(CASE WHEN category = 'hub' AND id <> heritage_id THEN  id  ELSE NULL END ) hubs
    FROM _node_tree GROUP by heritage_id ) h ON nid = heritage_id
    SET t.new_file =h.new_file, 
        
        
        t.nodes = h.nodes,
        t.hubs = h.hubs;

  SELECT
    nid,
    pid,
    parent_id,
    filepath,
    holder_id,
    home_id,
    capability,
    src_db_name,
    hub_db_name,
    accessibility,
    owner_id,
    status,
    filename,
    filetype,
    hub_id,
    area,
    filesize,
    vhost,
    isalink,
    caption,
    ext,
    ftype,
    mimetype,
    metadata,
    view_count,
    geometry,
    ctime,
    mtime,
    new_file,
    
    
    
    page,
    rank,
    privilege,
    expiry_time,
    sys_id,
    hubs,
    nodes,
    IFNULL(actual_home_id, _home_id) actual_home_id
  FROM _show_node  ORDER BY 
    CASE WHEN LCASE(_sort_by) = 'date' and LCASE(_order) = 'asc' THEN ctime END ASC,
    CASE WHEN LCASE(_sort_by) = 'date' and LCASE(_order) = 'desc' THEN ctime END DESC,
    CASE WHEN LCASE(_sort_by) = 'name' and LCASE(_order) = 'asc' THEN filename END ASC,
    CASE WHEN LCASE(_sort_by) = 'name' and LCASE(_order) = 'desc' THEN filename END DESC,
    CASE WHEN LCASE(_sort_by) = 'rank' and LCASE(_order) = 'asc' THEN rank END ASC,
    CASE WHEN LCASE(_sort_by) = 'rank' and LCASE(_order) = 'desc' THEN rank END DESC,
    CASE WHEN LCASE(_sort_by) = 'size' and LCASE(_order) = 'asc' THEN filesize END ASC,
    CASE WHEN LCASE(_sort_by) = 'size' and LCASE(_order) = 'desc' THEN filesize END DESC;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mfs_update_rank` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `mfs_update_rank`(
  IN _node_id VARBINARY(16),
  IN _rank TINYINT(4)
)
BEGIN
  UPDATE media SET rank=_rank WHERE id=_node_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mfs_wicket_home` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `mfs_wicket_home`(
  IN _uid VARCHAR(16)
)
BEGIN
  DECLARE _wicket_db_name VARCHAR(255);
  DECLARE _wicket_id VARCHAR(16);

    SELECT e.id  FROM yp.entity e INNER JOIN yp.hub h ON e.id = h.id  
    WHERE   e.area = 'dmz' AND e.type='hub' AND h.owner_id = _uid INTO _wicket_id ;

  
  
  

    SELECT db_name FROM yp.entity WHERE id=_wicket_id INTO _wicket_db_name;
    SET @st = CONCAT('CALL ', _wicket_db_name ,'.mfs_home()');
    PREPARE stamt FROM @st;
    EXECUTE stamt;
    DEALLOCATE PREPARE stamt;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `migrate_create_hub` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `migrate_create_hub`(
  
  
  
  
  
  IN _args JSON
)
BEGIN
  DECLARE _new_id VARCHAR(50);
  DECLARE _id VARCHAR(50);
  DECLARE _oid VARCHAR(50);
  DECLARE _ident VARCHAR(500);
  DECLARE _domain VARCHAR(500);
  DECLARE _odb VARCHAR(50);
  DECLARE _existing VARCHAR(50);
  DECLARE _fqdn VARCHAR(1024);  
  DECLARE _rollback BOOL DEFAULT 0;   
  

  SELECT utils.domain_name() INTO _domain;
  SELECT utils.read_json_object(_args, 'owner_id') INTO _oid;
  SELECT utils.read_json_object(_args, 'id') INTO _id;
  SELECT utils.read_json_object(_args, 'ident') INTO _ident;
  
  SELECT id FROM yp.entity WHERE id=_id INTO _existing;
  SELECT CONCAT(utils.read_json_object(_args, 'ident'), '.', _domain) INTO _fqdn;
  IF _existing IS NULL THEN 
    START TRANSACTION;
    SELECT id FROM yp.entity WHERE type='hub' AND area='pool' LIMIT 1 INTO _new_id;

    
    
    
    
    UPDATE yp.entity SET 
      id=_id, 
      status=utils.read_json_object(_args, 'status'), 
      area=utils.read_json_object(_args, 'area'), 
      
      home_dir=utils.read_json_object(_args, 'home_dir'), 
      ident=_ident,
      vhost=_fqdn 
    WHERE id = _new_id;

    REPLACE INTO yp.vhost VALUES (null, _fqdn, _id, _domain);
    REPLACE INTO yp.hub (
      `id`, 
      `owner_id`, 
      `origin_id`, 
      `name`, 
      `keywords`, 
      `dmail`
    )
    VALUES (
      _id, 
      _oid,
      _oid,
      utils.read_json_object(_args, 'user_filename'),
      "Key words", 
      yp.get_dmail(_ident)
    );
    IF _rollback THEN
      ROLLBACK;
      SELECT 1 as failed;
    ELSE
      COMMIT;
      SELECT id, db_name, ident, home_dir FROM yp.entity WHERE id=_id;
    END IF;
  ELSE
    SELECT id, db_name, ident, home_dir FROM yp.entity WHERE id=_id;
    SELECT concat(ident, '.', utils.domain_name()) FROM entity WHERE id=_id INTO _fqdn;
    REPLACE INTO yp.vhost VALUES (null, _fqdn, _id, _domain);

  END IF;
  SELECT db_name FROM entity WHERE id=_oid INTO _odb;
  SET @s = CONCAT("call ", _odb, ".join_hub(", quote(_id), ")");
  PREPARE stmt FROM @s;
  EXECUTE stmt;
  DEALLOCATE PREPARE stmt;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `migrate_drumates` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `migrate_drumates`(
  
  
  
  
  
  IN _args JSON
)
BEGIN
  DECLARE _tmp_id VARCHAR(50);
  DECLARE _id VARCHAR(50);
  DECLARE _oid VARCHAR(50);
  DECLARE _ident VARCHAR(500);
  DECLARE _domain VARCHAR(500);
  DECLARE _odb VARCHAR(50);
  DECLARE _existing VARCHAR(50);
  DECLARE _fqdn VARCHAR(1024);  
  DECLARE _rollback BOOL DEFAULT 0;   
  

  SELECT utils.domain_name() INTO _domain;
  SELECT utils.read_json_object(_args, 'owner_id') INTO _oid;
  SELECT utils.read_json_object(_args, 'id') INTO _id;
  SELECT utils.read_json_object(_args, 'ident') INTO _ident;
  
  
  SELECT id FROM yp.entity WHERE ident=_ident INTO _existing;
  
  IF _existing IS NULL THEN 
    START TRANSACTION;
    CALL drumate_create('', utils.read_json_object(_args, 'profile'));
    SELECT id FROM yp.entity WHERE id=_ident INTO _tmp_id;
    IF _tmp_id IS NOT NULL THEN 
      UPDATE drumate SET id=_id, fingerprint=utils.read_json_object(_args, 'fingerprint') WHERE id=_tmp_id;
      UPDATE yp.entity SET 
        id=_id, 
        status='active', 
        area='personal', 
        
        home_dir=utils.read_json_object(_args, 'home_dir'), 
        ident=_ident,
        vhost=_fqdn 
      WHERE id = _tmp_id;
      UPDATE share_box SET owner_id = _id WHERE owner_id = _tmp_id;
      UPDATE vhost SET id = _id WHERE id = _tmp_id;
    END IF;
    IF _rollback THEN
      ROLLBACK;
      SELECT 1 as failed;
    ELSE
      COMMIT;
      SELECT id, db_name, ident, home_dir FROM yp.entity WHERE id=_id;
    END IF;
  ELSE
    SELECT id, db_name, ident, home_dir FROM yp.entity WHERE id=_existing;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mimic_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `mimic_get`(
   IN _mimic_id VARCHAR(16)
 )
BEGIN

    SELECT 
      m.id mimic_id ,
      m.uid,
      m.mimicker,
      m.status,
      m.metadata,
      m.estimatetime,
      CASE WHEN  m.status = 'active' THEN 
      ( m.estimatetime  -  UNIX_TIMESTAMP())  ELSE NULL END remaining_time ,
      dm.firstname mimicker_firstname,
      dm.lastname  mimicker_lastname,
      dm.fullname  mimicker_fullname,
      du.firstname user_firstname,
      du.lastname  user_lastname,
      du.fullname  user_fullname
    FROM 
    mimic m 
    INNER JOIN yp.entity e    ON  m.uid=e.id 
    INNER JOIN yp.drumate dm  ON  m.mimicker=dm.id 
    INNER JOIN yp.drumate du  ON  m.uid=du.id 
    WHERE m.id = _mimic_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mimic_get_by_status` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `mimic_get_by_status`(
  IN _uid  VARCHAR(16),
  IN _status   VARCHAR(50)
 )
BEGIN
    SELECT * FROM mimic WHERE (uid = _uid or mimicker = _uid) AND  status = _status;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mimic_new` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `mimic_new`(
  IN _uid  VARCHAR(16) ,
  IN _mimcker  VARCHAR(16) 
 )
BEGIN
  DECLARE _mimic_id VARCHAR(16);

    SELECT yp.uniqueId()  INTO   _mimic_id;  
    INSERT INTO mimic(id,uid,mimicker,status) SELECT  _mimic_id ,  _uid, _mimcker, 'new';
    UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('new',  UNIX_TIMESTAMP()))
    WHERE id=_mimic_id;

    
    
    
    
    CALL mimic_get(_mimic_id );

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `mimic_set_by_status` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `mimic_set_by_status`(
  IN _mimic_id VARCHAR(16),
  IN _option  varchar(10)
 )
BEGIN
 

  IF _option != 'endbytime' THEN

    UPDATE mimic SET status = _option  WHERE id = _mimic_id;
    UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT(_option,  UNIX_TIMESTAMP()))
    WHERE id=_mimic_id;

    IF _option = 'active' THEN 
      UPDATE mimic SET estimatetime= (UNIX_TIMESTAMP() + (60*1)) WHERE id = _mimic_id;
    END IF ; 

  ELSE  
   
    UPDATE mimic SET status = _option  WHERE id = _mimic_id AND estimatetime<=UNIX_TIMESTAMP();
    UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT(_option,  UNIX_TIMESTAMP()))
    WHERE id=_mimic_id AND estimatetime<= UNIX_TIMESTAMP();
  END IF ;

  SELECT 
    id _mimic_id ,uid,mimicker,status,metadata,estimatetime 
  FROM 
   mimic 
  WHERE 
    id = _mimic_id;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `my_contact_sync` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `my_contact_sync`(
  IN _owner_id VARCHAR(16)
)
BEGIN

  DELETE FROM contact_phone WHERE contact_id IN(
  SELECT uid FROM yp.contact_sync WHERE status <>'ok' AND owner_id =_owner_id);
  
  DELETE FROM contact_address WHERE contact_id IN(
  SELECT uid FROM yp.contact_sync WHERE status <>'ok' AND owner_id =_owner_id);

  DELETE FROM contact_email WHERE contact_id IN(
  SELECT uid FROM yp.contact_sync WHERE status ='delete' AND owner_id =_owner_id);

  DELETE FROM contact WHERE id IN(
  SELECT uid FROM yp.contact_sync WHERE status ='delete' AND owner_id =_owner_id);
 
  DELETE FROM yp.contact_sync WHERE status ='delete' AND owner_id =_owner_id;



  INSERT INTO contact (id,firstname,lastname,category,entity,uid,status,metadata,ctime,mtime) 
  SELECT id, firstname,lastname,'drumate',id,id,'active',JSON_OBJECT("source",email), UNIX_TIMESTAMP(),UNIX_TIMESTAMP() FROM yp.drumate t
  WHERE id IN (SELECT uid FROM yp.contact_sync WHERE  status <>'ok' AND owner_id =_owner_id)
  ON DUPLICATE KEY UPDATE 
  firstname =t.firstname ,lastname=t.lastname,  metadata = JSON_OBJECT("source",t.email),
  surname = surname , comment=comment, message =message ,ctime=ctime,mtime =UNIX_TIMESTAMP();

  INSERT INTO contact_email (id,email,category,ctime,mtime ,contact_id ,is_default )
  SELECT id, email,'prof', UNIX_TIMESTAMP(),UNIX_TIMESTAMP(),id,1 FROM yp.drumate t
  WHERE id IN (SELECT uid FROM yp.contact_sync WHERE status <>'ok' AND owner_id =_owner_id)
  ON DUPLICATE KEY UPDATE email=t.email, ctime=ctime,mtime =UNIX_TIMESTAMP();


  INSERT INTO contact_phone (id,phone,category,ctime,mtime,contact_id)
  SELECT id, read_json_object(profile, "mobile"),'prof', UNIX_TIMESTAMP(),UNIX_TIMESTAMP(),id FROM yp.drumate 
  WHERE id IN (SELECT uid FROM yp.contact_sync WHERE status<>'ok' AND owner_id =_owner_id);
    
  INSERT INTO contact_address (id,address,category,ctime,mtime,contact_id)
  SELECT id, read_json_object(profile, "address"),'prof', UNIX_TIMESTAMP(),UNIX_TIMESTAMP(),id FROM yp.drumate 
  WHERE id IN (SELECT uid FROM yp.contact_sync WHERE status <>'ok' AND owner_id =_owner_id);
      
 
  UPDATE yp.contact_sync SET status='ok' WHERE status<>'ok' AND owner_id =_owner_id; 

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `my_disk` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `my_disk`(
IN _uid  VARCHAR(16)  CHARACTER SET ascii
)
BEGIN
  DECLARE _desk_disk  FLOAT default 0 ;
  DECLARE _hub_disk  FLOAT default 0 ;
  DECLARE _plan int default  0; 
  DECLARE _entity_id VARCHAR(16) CHARACTER SET ascii;

  SELECT 1 FROM entity WHERE id=_uid  AND dom_id > 1   INTO _plan;

  SELECT o.id
  FROM  yp.drumate d  
  INNER JOIN yp.organisation o ON o.domain_id= d.domain_id
  WHERE d.id =  _uid AND  d.domain_id > 1  INTO _entity_id; 


  IF _plan = 0 THEN

      SELECT 
        SUM(du.size) 
        FROM 
        disk_usage du
        INNER JOIN hub h ON du.hub_id = h.id
        WHERE h.owner_id=_uid INTO _hub_disk;
        
      SELECT 
        SUM(du.size) 
        FROM 
        disk_usage du
        INNER JOIN drumate d ON du.hub_id = d.id
        WHERE d.id=_uid  INTO _desk_disk;
ELSE

      SELECT 
        SUM(du.size) 
        FROM 
        disk_usage du
        INNER JOIN hub h ON du.hub_id = h.id
        INNER JOIN map_role m ON  h.owner_id = m.uid
        WHERE m.org_id=_entity_id INTO _hub_disk;
        
      SELECT 
        SUM(du.size) 
        FROM 
        disk_usage du
        INNER JOIN drumate d ON du.hub_id = d.id
        INNER JOIN map_role m ON  d.id = m.uid
        WHERE  m.org_id=_entity_id INTO _desk_disk;

  END IF;
SELECT  _desk_disk  desk_disk, _hub_disk hub_disk;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `my_disk_limit` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `my_disk_limit`(
  _uid  VARCHAR(16) CHARACTER SET ascii
)
BEGIN

 DECLARE _desk_disk  double  default 0.0 ;
 DECLARE _private_disk  double  default 0.0 ;
 DECLARE _chat_disk  double  default 0.0 ;
 DECLARE _share_disk  double  default 0.0 ;

 DECLARE _quota json ;
 DECLARE _q_desk_disk  double  default 0.0 ;
 DECLARE _q_hub_disk  double  default 0.0 ;
 DECLARE _q_disk  double  default 0.0 ;



  SELECT quota FROM yp.drumate WHERE id = _uid INTO _quota;
  SELECT get_json_object(_quota, "disk") INTO _q_disk;
  SELECT get_json_object(_quota, "desk_disk") INTO _q_desk_disk;
  SELECT get_json_object(_quota, "hub_disk") INTO _q_hub_disk;
  SELECT IFNULL(_q_desk_disk,_q_disk) INTO _q_desk_disk;
  SELECT IFNULL(_q_hub_disk,_q_disk) INTO _q_hub_disk;



  SELECT 
    SUM(CASE WHEN e.area = 'dmz' THEN du.size ELSE 0 END ) chat,
    SUM(CASE WHEN e.area = 'private' THEN du.size ELSE 0 END ) private,
    SUM(CASE WHEN e.area = 'share' THEN du.size ELSE 0 END) share
  FROM 
    yp.disk_usage du
    INNER JOIN yp.hub h ON du.hub_id = h.id
    INNER JOIN entity e ON e.id = du.hub_id
    WHERE h.owner_id=_uid 
    INTO _chat_disk, _private_disk, _share_disk;

  SELECT 
    SUM(du.size) 
  FROM 
    yp.disk_usage du
    INNER JOIN yp.drumate d ON du.hub_id = d.id
    WHERE d.id=_uid
    INTO _desk_disk;



  SELECT _q_disk quota_disk, _chat_disk chat, _private_disk private, _share_disk share, _desk_disk desk;


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `my_organisation` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `my_organisation`(
   IN _uid VARCHAR(16) CHARACTER SET ascii
)
BEGIN
  SELECT
    r.*,
    r.link `url`,
    p.privilege
  FROM 
    privilege p
  INNER JOIN organisation r ON r.domain_id = p.domain_id 
  WHERE (p.domain_id <> 1 OR JSON_VALUE(r.metadata, "$.isOrganization")=1) AND p.uid = _uid; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `my_organisationx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `my_organisationx`(
   IN _uid VARCHAR(16) 
)
BEGIN
 EXPLAIN  SELECT
    r.*,
    p.privilege
  FROM 
    privilege p
  INNER JOIN organisation r ON r.domain_id = p.domain_id 
  
  WHERE p.domain_id <> 1 AND p.uid = _uid; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `my_subscription` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `my_subscription`(
   IN _uid VARCHAR(16)
)
BEGIN
  SELECT * FROM subscription WHERE uid = _uid;   
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `news_flow` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `news_flow`(
  IN _category VARCHAR(50),
  IN _page TINYINT(4)
)
BEGIN
  DECLARE _offset BIGINT DEFAULT 0;
  DECLARE _range BIGINT DEFAULT 2;

  IF @rows_per_page IS NULL THEN
    SET @rows_per_page=15;
  END IF;

  SELECT (_page - 1)*@rows_per_page, (_page)*@rows_per_page INTO _offset,_range;

  SELECT _page as `page`, resource_id, source_id, summary, author_id FROM news_flow WHERE category=_category ORDER BY time_stamp DESC LIMIT _offset,_range;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `new_unified_room` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `new_unified_room`(
  IN _id VARCHAR(16),
  IN _metadata JSON 
)
BEGIN
   
    REPLACE INTO unified_room (id , metadata) SELECT _id, _metadata;
    SELECT sys_id, id, metadata FROM unified_room WHERE id  =_id;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `notification_center` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `notification_center`()
BEGIN

DECLARE _uid VARCHAR(16) CHARACTER SET ascii;
DECLARE _db_name VARCHAR(500);
DECLARE _nid VARCHAR(16) CHARACTER SET ascii;

  SELECT id FROM yp.entity WHERE db_name = DATABASE() INTO _uid;

  DROP TABLE IF EXISTS _show_node;
  CREATE TEMPORARY TABLE _show_node (
      resource_id  VARCHAR(16) CHARACTER SET ascii,
      entity_id VARCHAR(16) CHARACTER SET ascii,
      hub_id VARCHAR(16) CHARACTER SET ascii,
      ctime  INT(11) ,
      category VARCHAR(16)
   );


   INSERT INTO _show_node
   SELECT 
      ci.id  ,d.id ,_uid , mtime, 'contact'
   FROM 
   contact ci 
   INNER JOIN yp.drumate d ON d.id = ci.entity
   WHERE (ci.status="received") OR (ci.status="informed") OR (ci.status="invitation");


   INSERT INTO _show_node
   SELECT   
      ch.message_id, ch.author_id , _uid ,ch.ctime  , 'chat'   
   FROM    
      channel ch    
   INNER JOIN read_channel rc ON ch.entity_id= rc.entity_id    
   INNER JOIN contact c ON c.uid = ch.entity_id   
   WHERE ch.entity_id = ch.author_id  AND  rc.entity_id <> rc.uid  AND  ch.sys_id > rc.ref_sys_id;

   DROP TABLE IF EXISTS _my_hubs;
   CREATE TEMPORARY TABLE _my_hubs  AS 
   SELECT m.sys_id , he.id , db_name , he.area
   FROM
   media m
   INNER JOIN yp.entity he ON m.id = he.id
   INNER JOIN yp.hub h ON m.id = h.id
   WHERE category = 'hub' AND extension <> 'dmz' ;

   ALTER TABLE _my_hubs ADD `is_checked` boolean default 0 ;

   SELECT id, db_name FROM _my_hubs WHERE is_checked =0  LIMIT 1 
   INTO _nid, _db_name; 
  
   WHILE _nid IS NOT NULL DO

      SET @sql=  CONCAT(
         "INSERT INTO _show_node
         SELECT c.message_id,author_id ,'",_nid, "' As hub_id ,c.ctime,'teamchat'  FROM ", _db_name ,".channel c WHERE
         c.sys_id > (SELECT  ref_sys_id FROM ", _db_name ,".read_channel WHERE uid ='", _uid ,"')" ) ;
      EXECUTE IMMEDIATE @sql;   

      SET @s = CONCAT(
          " INSERT INTO _show_node
            SELECT id, m.owner_id, '" , _nid , "', m.upload_time,'media' FROM ", _db_name ,
          ".media m WHERE file_path not REGEXP '^/__(chat|trash)__'  AND 
            IFNULL((is_new(metadata, owner_id, ?)), 0) =1 "
        );
      PREPARE stmt FROM @s;
      EXECUTE stmt USING _uid;
      DEALLOCATE PREPARE stmt;

      UPDATE _my_hubs SET is_checked = 1 WHERE id = _nid ;
      SELECT  NULL INTO  _nid;
      SELECT id, db_name FROM _my_hubs WHERE is_checked =0  LIMIT 1 INTO _nid, _db_name; 
   END WHILE;

   SELECT  
      c.id contact_id,
      d.id drumate_id,
      dmu.id guest_id,
      coalesce(c.id,  d.id,dmu.id) key_id,
      
      
      IFNULL(c.surname,IF(coalesce(c.firstname, c.lastname) IS NULL,coalesce(ce.email,d.email,dmu.email),CONCAT( IFNULL(c.firstname, '') ,' ',  IFNULL(c.lastname, '')))) surname,
      coalesce(ce.email,d.email,dmu.email) email,
      c.status status,
      b.hub_id,
      b.ctime,
      b.category,
      b.cnt
   FROM 
   (SELECT 
      count(1) cnt ,entity_id,hub_id,category,max(ctime) ctime   
   FROM  _show_node 
   GROUP BY entity_id,hub_id,category ) b 
   LEFT JOIN yp.dmz_user dmu ON b.entity_id = dmu.id
   LEFT JOIN yp.drumate d ON b.entity_id = d.id 
   LEFT JOIN contact c ON  b.entity_id = c.uid  OR  b.entity_id = c.entity
   LEFT JOIN contact_email ce ON ce.contact_id = c.id   AND ce.is_default = 1
   ORDER BY b.ctime DESC;


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `online_status` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `online_status`(
  IN _key VARCHAR(255)
)
BEGIN

  SELECT * FROM drumate_view WHERE ident=_key OR id=_key OR email=_key;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `online_users` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `online_users`(
)
BEGIN
    select d.firstname, d.lastname, s.server, online_state(d.id)
    from socket s inner join drumate d on s.uid=d.id
    WHERE s.state='active';
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `organisation_add` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `organisation_add`(
  _owner_id VARCHAR(16),
  _name VARCHAR(512) ,
  _link VARCHAR(1024) ,
  _ident VARCHAR(80),
  _domain_id INT(11) , 
  _metadata JSON
)
BEGIN
  DECLARE _id VARCHAR(16);


  SELECT id  FROM yp.entity 
  WHERE type='hub' AND area='pool' LIMIT 1 
  INTO _id ; 

  IF _link IN ('') THEN 
    SELECT _id INTO  _link;
  END IF;

  INSERT INTO organisation(id,domain_id,name,link,ident,owner_id,metadata)
  VALUES(_id,_domain_id,_name,_link,_ident, _owner_id, _metadata);

  UPDATE  entity  SET  area ='public' ,dom_id =_domain_id, type = 'organization',status = 'active'
  WHERE id = _id;

INSERT INTO yp.hub (`id`, `owner_id`, `origin_id`, `name`, `serial`,`hubname`, `domain_id`, `profile`)
SELECT _id , _owner_id,_owner_id,_link,9999999, null,_domain_id,null ; 

  INSERT INTO vhost (`fqdn`,`id`,`dom_id`)
  SELECT link, id, domain_id
  FROM organisation WHERE id=_id;

  INSERT INTO subscription (payment_id, entity_id, stime,etime,ctime,mode)
  SELECT yp.uniqueId(),_id,  UNIX_TIMESTAMP(), UNIX_TIMESTAMP() +(30*24*3600),UNIX_TIMESTAMP(),'free' ;


  CALL  my_organisation(_owner_id);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `organisation_create` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `organisation_create`(
  IN _args JSON,
  IN _metadata JSON
)
BEGIN
  DECLARE _id VARCHAR(16) DEFAULT NULL;
  DECLARE _owner_id VARCHAR(16) DEFAULT NULL;
  DECLARE _name VARCHAR(512);
  DECLARE _master_domain VARCHAR(1024);
  DECLARE _user_domain VARCHAR(1024);
  DECLARE _ident VARCHAR(80);
  DECLARE _domain_id INT(11) DEFAULT 0;
  DECLARE _rollback BOOLEAN DEFAULT 0;

  DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
  BEGIN
    SET _rollback = 1;  
    GET DIAGNOSTICS CONDITION 1 
      @sqlstate = RETURNED_SQLSTATE, 
      @errno = MYSQL_ERRNO, 
      @message = MESSAGE_TEXT;
  END;

  START TRANSACTION;

  SELECT JSON_VALUE(_args, "$.owner_id") INTO _owner_id;
  SELECT JSON_VALUE(_args, "$.ident") INTO _ident;
  SELECT IFNULL(JSON_VALUE(_args, "$.name"), _ident) INTO _name;


  SELECT id  FROM yp.entity WHERE `type`='hub' AND area='pool' 
    AND JSON_VALUE(settings, "$.pool_state") = "clean" LIMIT 1 
  INTO _id ; 

  IF _id IS NULL THEN 
    SET _rollback = 1;
    SET @message = "POOL_EMPTY";
    SET @sqlstate = "0";
    SET @errno = 0;
  END IF;

  IF _ident IS NULL THEN 
    SELECT uniqueId() INTO _ident;
  END IF;

  SELECT domain_id FROM privilege WHERE `uid`=_owner_id INTO _domain_id;

  IF _domain_id = 0 THEN
    CALL domain_create(_ident);
    SELECT CONCAT(_ident,".", main_domain()) INTO _user_domain;
    SELECT id FROM domain WHERE `name` = _user_domain INTO _domain_id;
  ELSE 
    SELECT `name` FROM domain WHERE id = _domain_id INTO _user_domain;
    SELECT REGEXP_REPLACE(`name`, CONCAT("\.", main_domain(), "$") , "") 
      FROM domain WHERE id = _domain_id INTO _ident;
  END IF;

  INSERT INTO organisation(
    `id`,
    `domain_id`,
    `name`,
    `link`,
    `ident`,
    `owner_id`,
    `metadata`
  )
  VALUES(
    _id,
    _domain_id,
    _name,
    _user_domain,
    _ident, 
    _owner_id, 
    _metadata
  );

  UPDATE entity SET 
    `area` = 'public', 
    `dom_id` =_domain_id, 
    `type` = 'organization', 
    `status`='active', 
    `homepage` = "",
    ctime = UNIX_TIMESTAMP()
  WHERE id = _id;

	INSERT INTO yp.hub (
    `id`,
    `owner_id`, 
    `origin_id`, 
    `name`, 
    `serial`,
    `hubname`, 
    `domain_id`, 
    `profile`
  )
	SELECT _id,
    _owner_id,
    _owner_id,
    _user_domain,
    9999999, 
    null,
    _domain_id,
    null; 

  INSERT INTO vhost(`fqdn`,`id`,`dom_id`)
    SELECT `name`, _id, id
  FROM domain WHERE id=_domain_id;
  UPDATE entity SET `type`='organization' WHERE id=_id;
  CALL  my_organisation(_owner_id);
  IF _rollback THEN
    ROLLBACK;
    SELECT 1 failed, @sqlstate `sqlstate`, @errno `errno`, @message `error`;
  ELSE
    SELECT 0 failed, _domain_id domain_id, _id id, _user_domain user_domain;
    COMMIT;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `organisation_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `organisation_get`(
   IN _key VARCHAR(1000)
)
BEGIN
  SELECT *, link `url` FROM organisation WHERE id =_key  
    OR  domain_id = _key  OR link = _key OR name = _key;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `organisation_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `organisation_update`(
  _uid VARCHAR(16),
  _id VARCHAR(16),
  _name VARCHAR(512),
  _link VARCHAR(1024),
  _ident VARCHAR(80)
)
BEGIN

  IF _link IN ('') THEN 
    SELECT NULL INTO  _link;
  END IF;
  
  UPDATE organisation SET name=_name ,link=_link ,ident=_ident
  WHERE id = _id; 
  CALL  my_organisation(_uid);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `organisation_update_dir_info` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `organisation_update_dir_info`(
  _uid VARCHAR(16),
  _id VARCHAR(16),
  _option VARCHAR(15) 
)
BEGIN
  
  UPDATE organisation SET dir_info=_option WHERE id = _id; 

  CALL  my_organisation(_uid);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `organisation_update_dir_visiblity` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `organisation_update_dir_visiblity`(
  _uid VARCHAR(16),
  _id VARCHAR(16),
  _option VARCHAR(15) 
)
BEGIN
  
  UPDATE organisation SET dir_visibility=_option WHERE id = _id; 

  CALL  my_organisation(_uid);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `organisation_update_double_auth` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `organisation_update_double_auth`(
  _uid VARCHAR(16),
  _id VARCHAR(16),
  _option INT(4) 
)
BEGIN
  
  UPDATE organisation SET double_auth=_option WHERE id = _id; 

  CALL  my_organisation(_uid);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `organisation_update_owner` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `organisation_update_owner`(
  _owner_id VARCHAR(16),
  _id VARCHAR(16)
 
)
BEGIN

  UPDATE organisation SET owner_id=_owner_id
  WHERE id = _id; 
  CALL  organisation_get(_id);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `organisation_update_password_level` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `organisation_update_password_level`(
  _uid VARCHAR(16),
  _id VARCHAR(16),
  _option INT(4) 
)
BEGIN
  
  UPDATE organisation SET password_level=_option WHERE id = _id; 

  CALL  my_organisation(_uid);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `org_ident_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `org_ident_exists`(
  IN _key VARCHAR(128)
)
BEGIN
  
  SELECT * FROM 
  (SELECT d.id, d.username ident,'active' status FROM drumate d INNER JOIN privilege p ON p.uid =d.id AND p.domain_id =1  WHERE username=_key  LIMIT 1) a 
  UNION
  SELECT id ,ident, 'active' status FROM  organisation WHERE ident=_key LIMIT 1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `org_user_role` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `org_user_role`(
  IN _uid  VARCHAR(16),
  IN _org_id VARCHAR(16)
)
BEGIN
  SELECT
    r.id role_id,
    r.name role_name 
  FROM 
  map_role mr 
  INNER JOIN role r ON r.id = mr.role_id 
  WHERE  
  r.org_id =  _org_id  AND 
  mr.uid =_uid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `otp_authenticate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `otp_authenticate`(
  IN _cid VARCHAR(64),
  IN _secret VARCHAR(64), 
  IN _code INT(11)
)
BEGIN
  DECLARE _c INT(11);
  DECLARE _uid VARCHAR(64);
  DECLARE _domain VARCHAR(264);
  DECLARE _org_name VARCHAR(264);
  DECLARE _domain_id INTEGER;
  DELETE FROM otp WHERE UNIX_TIMESTAMP() - ctime > 60*10;
  SELECT `uid` FROM cookie WHERE id=_cid INTO _uid;
  SELECT o.link, o.domain_id, o.name
    FROM organisation o 
    INNER JOIN drumate d ON d.domain_id=o.domain_id 
    INNER JOIN sys_conf s ON s.conf_key= 'support_domain' 
    WHERE d.id=_uid
  INTO _domain, _domain_id, _org_name;
  SELECT IFNULL(code, 'failed') FROM otp WHERE `uid`=_uid 
    AND `secret`=_secret AND `code`=_code INTO _c;
  IF _c != "failed" THEN 
    UPDATE cookie SET failed=0, `status` = 'ok' WHERE id=_cid;
    DELETE FROM otp WHERE `uid`=_uid AND `secret`=_secret AND `code`=_code;
  END IF;
    SELECT
      c.id AS session_id,
      e.id,
      e.ident,
      e.id AS hub_id,
      e.ident as username,
      db_name,
      _domain AS domain,
      _domain_id AS domain_id,
      _org_name AS org_name,
      db_host,
      fs_host,
      vhost,
      home_dir,
      home_id,
      c.status,
      email,
      dmail,
      firstname,
      lastname,
      area,
      area_id as aid,
      e.status AS `condition`,
      e.mtime,
      e.ctime,
      concat(firstname, ' ', lastname) as fullname,
      `profile`  
    FROM entity e INNER JOIN (drumate d, cookie c) ON e.id=d.id AND e.id=c.uid 
      WHERE d.id=_uid AND c.id=_cid AND _c != "failed";

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `otp_check` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `otp_check`(
  IN _uid VARCHAR(16),
  IN _secret VARCHAR(64), 
  IN _code INT(10)
)
BEGIN
  DELETE FROM otp WHERE UNIX_TIMESTAMP() - ctime > 60*30;
  SELECT *, ctime + 60*30 expiry FROM otp WHERE `uid`=_uid 
    AND `secret`=_secret AND `code`=_code;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `otp_cleanup` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `otp_cleanup`(
)
BEGIN
  DELETE FROM otp WHERE UNIX_TIMESTAMP() - ctime > 5*60;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `otp_create` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `otp_create`(
  IN _uid VARCHAR(16),
  IN _secret VARCHAR(64)
)
BEGIN
  DECLARE _code INT(11);
  SELECT LPAD(ROUND(RAND()*1000000), 6, 0) INTO _code;
  INSERT IGNORE 
    INTO otp(`uid`, `secret`, `code`, `ctime`) 
    VALUE(_uid, _secret, _code, UNIX_TIMESTAMP());
  SELECT *, ctime + 60*10 expiry FROM otp WHERE `secret`=_secret;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `otp_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `otp_delete`(
  IN _uid VARCHAR(16),
  IN _secret VARCHAR(64), 
  IN _code INT(10)
)
BEGIN
  DELETE FROM otp WHERE `uid`=_uid AND `secret`=_secret AND `code`=_code;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `otp_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `otp_get`(
  IN _secret VARCHAR(64), 
  IN _code INT(10)
)
BEGIN
  SELECT `uid` FROM otp WHERE `secret`=_secret AND `code`=_code;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `pageToLimits` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `pageToLimits`(
  IN _page VARCHAR(32),
  OUT _offset BIGINT,
  OUT _range BIGINT
)
BEGIN
  IF @rows_per_page IS NULL THEN
    SET @rows_per_page=20;
  END IF;
  SELECT (_page - 1)*@rows_per_page, @rows_per_page INTO _offset,_range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `parseDateRange` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `parseDateRange`(
  IN _json json,
  OUT _format VARCHAR(120),
  OUT _start_time int(11) unsigned,
  OUT _end_time int(11) unsigned
)
BEGIN
  DECLARE _start VARCHAR(120);
  DECLARE _end VARCHAR(120);
  DECLARE _periode int(11) unsigned;
  DECLARE _epoch VARCHAR(120);

  SELECT IFNULL(json_value(_json, "$.time_format"), "%y-%m-%d") INTO _format;
  SELECT IFNULL(JSON_VALUE(_json, "$.periode"), 60*60*24) INTO _periode;

  SELECT json_value(_json, "$.start") INTO _start;

  SELECT IFNULL(JSON_VALUE(_json, "$.drumee_epoch"), '2021-01-01') INTO _epoch;

  IF _start IS NULL THEN 
    SELECT UNIX_TIMESTAMP() - _periode INTO _start_time;
  ELSE 
    SELECT UNIX_TIMESTAMP(STR_TO_DATE(_start, _format)) INTO _start_time;
  END IF;

  IF UNIX_TIMESTAMP(STR_TO_DATE(_epoch , "%Y-%m-%d")) > _start_time THEN
    SELECT UNIX_TIMESTAMP(STR_TO_DATE(_epoch , "%Y-%m-%d"))  INTO _start_time;
  END IF;

  SELECT json_value(_json, "$.end") INTO _end;
  IF _end IS NULL THEN 
    SELECT UNIX_TIMESTAMP() INTO _end_time;
  ELSE
    SELECT UNIX_TIMESTAMP(STR_TO_DATE(_end, _format)) INTO _end_time;
  END IF;

  
  IF _end_time < _start_time THEN 
    SELECT _start_time + _periode INTO _end_time;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `patch_home_id` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `patch_home_id`(
  IN _db_name VARCHAR(50),
  IN _id VARCHAR(16)
)
BEGIN
  select yp.uniqueId() INTO @new_pid;

  SET @s = CONCAT("update ", _db_name, ".media set parent_id=@new_pid where parent_id=", quote(_id));
  PREPARE stmt FROM @s;
  EXECUTE stmt;
  DEALLOCATE PREPARE stmt;

  update entity set home_id=@new_pid where db_name =_db_name;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `payment_status` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `payment_status`(
    IN _entity_id VARCHAR(16),
    IN _subscription_id VARCHAR(30)
    )
BEGIN
    DECLARE _status VARCHAR(30);

    SELECT 'unknown' INTO _status;

     SELECT  status  
      FROM 
      renewal_history s
     WHERE   entity_id =_entity_id AND 
      subscription_id = _subscription_id  
     ORDER BY ctime desc LIMIT 1 INTO _status;

    SELECT _status status, _entity_id entity_id , _subscription_id subscription_id;

  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `payment_update_intent_id_recurring` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `payment_update_intent_id_recurring`(
    IN _payment_id VARCHAR(16),
    IN _entity_id VARCHAR(16),
    IN _payment_intent_id  VARCHAR(30)
 
    )
BEGIN
    UPDATE payment 
    SET payment_intent_id = _payment_intent_id,
        subscription_id =IFNULL( subscription_id , 0)
    WHERE payment_id = _payment_id AND 
    entity_id  =_entity_id;

    SELECT *  FROM payment 
    WHERE 
    payment_id =_payment_id AND  
    payment_intent_id =_payment_intent_id AND 
    entity_id = _entity_id;
  
  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `pickupEntity` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `pickupEntity`(
  IN _type VARCHAR(32),
  OUT _out_id VARCHAR(16),
  OUT _out_db VARCHAR(80)
)
BEGIN

  SELECT 
    id, 
    db_name
  FROM entity  
    WHERE `type`=_type
    AND area='pool' AND JSON_VALUE(settings, "$.pool_state")='clean' 
    ORDER BY RAND() LIMIT 1 INTO _out_id, _out_db;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `plans_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `plans_get`(
    IN _entity_id VARCHAR(16)
    )
BEGIN

      SELECT 
        plan, 
        metadata,
        (
          SELECT 
           JSON_ARRAYAGG(
              JSON_OBJECT(
              'product_id' ,id,
              'period' ,  pck.period, 
              'product' , product,
              'plan', plan,
              'recurring', recurring,
              'price' , price,
              'offer_price', offer_price,
              'is_offer',   CASE WHEN pck.offer_price IS NULL THEN 0 ELSE 1 END ,
              'unit_price',IFNULL(pck.offer_price, pck.price) * CASE WHEN period = 'year' THEN 12.0 else 1.0 END *120/100) 
            )
        
        FROM
        yp.product pck 
        WHERE  pl.plan = pck.plan
        ) plan_detail
      FROM product pl WHERE is_active = 1  GROUP BY  plan;
  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `plf_fonts_list` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `plf_fonts_list`()
BEGIN
  SELECT family, GROUP_CONCAT(DISTINCT NAME ORDER BY NAME DESC SEPARATOR ':') AS `name` FROM font GROUP BY family;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `plf_icons_list` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `plf_icons_list`(
  
  IN _page TINYINT(4)
)
BEGIN
  DECLARE _range int(6);
  DECLARE _offset int(6);
  CALL pageToLimits(_page, _offset, _range);
  SELECT _page as `page`, `name` as iconName from icons ORDER BY `name` ASC LIMIT _offset, _range;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `plf_icons_search` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `plf_icons_search`(
  IN _str VARBINARY(16),
  IN _page TINYINT(4)
)
BEGIN
  DECLARE _range int(6);
  DECLARE _offset int(6);
  CALL pageToLimits(_page, _offset, _range);
  SELECT _page as `page`,`name` as iconName  from icons WHERE `name` LIKE concat("%", _str, "%") 
  ORDER BY `name` ASC LIMIT _offset, _range;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `plf_list_models` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `plf_list_models`(
  IN _page TINYINT(4)
)
BEGIN

  DECLARE _range int(6);
  DECLARE _offset int(6);
  CALL pageToLimits(_page, _offset, _range);

  SELECT * , _page as `page` FROM  2_4b40d5b94b40d5bd.block where status='online' ORDER BY mtime DESC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `plf_search_fonts` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `plf_search_fonts`(
  IN _pattern VARCHAR(84),
  IN _page TINYINT(4)
)
BEGIN

  DECLARE _range int(6);
  DECLARE _offset int(6);
  CALL pageToLimits(_page, _offset, _range);

  IF _pattern='' OR _pattern is NULL THEN
     SET _pattern = 'a';
  END IF;

  SELECT *,_page as `page`,
  MATCH(`family`, `local1`, `local2`, `url`) against(concat('*', _pattern, '*') IN BOOLEAN MODE) as relevance
  FROM font HAVING relevance > 1 OR family LIKE concat("%", _pattern, "%")
  ORDER BY relevance DESC, family ASC LIMIT _offset, _range;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `plf_search_lang` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `plf_search_lang`(
  IN _arg VARCHAR(128),
  IN _page TINYINT(4)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);
  SELECT * ,_page as `page`,  IF(lcid=_arg, 100, 0)
    + IF(locale_en=_arg, 100, 0)
    + IF(locale=_arg, 100, 0)
    + IF(code=_arg, 50, 0)
    + IF(locale_en LIKE concat(_arg, "%"), 25 ,0)
    + IF(locale_en LIKE concat("%", _arg, "%"), 13, 0)
    + IF(locale LIKE concat(_arg, "%"), 25,0)
    + IF(locale LIKE concat("%", _arg, "%"), 13, 0)
    + MATCH(locale_en, locale, comment)
      against(_arg IN NATURAL LANGUAGE MODE WITH QUERY EXPANSION) AS score
    FROM `language` HAVING score > 25
    ORDER BY score DESC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `pod_register` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `pod_register`(
  IN _domain VARCHAR(512),
  IN _key TEXT
)
BEGIN
  DECLARE _prev_hash VARCHAR(512) CHARACTER SET ascii;
  SELECT `hash` FROM pod ORDER BY id DESC LIMIT 1 INTO _prev_hash; 
  IF _prev_hash IS NULL THEN
    SELECT SHA2(concat(uniqueId(), uniqueId(), unix_timestamp()), 224)
      INTO _prev_hash;
  END IF;
  INSERT IGNORE INTO pod (`prev_hash`, `domain`, `key`)
    VALUES(_prev_hash, _domain, _key);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `presignon` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `presignon`(
  IN _email VARCHAR(500),
  IN _referer VARCHAR(500)
)
BEGIN
  INSERT INTO preregister VALUES(_email, _referer, UNIX_TIMESTAMP())
    ON DUPLICATE KEY UPDATE referer=_referer, ctime=UNIX_TIMESTAMP();
  SELECT * FROM preregister WHERE email=_email;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `product_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `product_get`(
    IN _plan  varchar(30) CHARACTER SET ascii,
    IN _period varchar(30) CHARACTER SET ascii,
    IN _recurring  int
    )
BEGIN

    SELECT 
    id, 
    product,
    plan,
    period,
    recurring,
    price,
    offer_price ,
    case WHEN period = 'year' THEN IFNULL(offer_price,price ) * 12.0  ELSE IFNULL(offer_price,price ) *1.0 END *120/100 unit_price,
    case WHEN period = 'year' THEN IFNULL(offer_price,price ) * 1200.0  ELSE IFNULL(offer_price,price ) *100.0 END *120/100 stripe_unit_price
    FROM yp.product 
    WHERE plan = _plan AND 
      period = _period AND 
      recurring = _recurring AND 
      is_active=1;
  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `product_get_stripe` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `product_get_stripe`()
BEGIN
      SELECT 
      id, 
      product,
      plan,
      period,
      recurring,
      price,
      offer_price ,
      ROUND(CASE WHEN period = 'year' THEN IFNULL(offer_price,price ) * 12.0  ELSE IFNULL(offer_price,price ) *1.0 END *120/100, 2)  unit_price,
      (CASE WHEN period = 'year' THEN IFNULL(offer_price,price ) * 1200.0  ELSE IFNULL(offer_price,price ) *100.0 END*120/100)  stripe_unit_price
    FROM yp.product 
    WHERE plan = 'Pro' AND 
      recurring = 1 AND 
      is_active=1;   
  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `redirect` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `redirect`(
  IN _fn VARCHAR(250),
  IN _key VARCHAR(250)
)
BEGIN
  DECLARE _db VARCHAR(255);

  SELECT CONCAT('`', db_name, '`') FROM entity WHERE vhost=_key or id=_key or ident=_key INTO _db;

  IF _db != '' OR _db IS NOT NULL THEN
    SET @s1 = CONCAT("CALL ",_db, ".", _fn, "()");

    PREPARE stmt FROM @s1;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `redirect_proc` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `redirect_proc`(
  IN _id VARCHAR(250),
  IN _fn VARCHAR(250),
  IN _arg JSON
)
BEGIN
  DECLARE _db VARCHAR(255);
  DECLARE _list VARCHAR(1000);
  DECLARE _i TINYINT(6) unsigned DEFAULT 0;

  SELECT CONCAT('`', db_name, '`') FROM entity 
    WHERE vhost=_id or id=_id or ident=_id INTO _db;
  IF JSON_TYPE(_arg) = 'ARRAY' THEN 
    SELECT _arg INTO _list;
  ELSE 
    SELECT JSON_ARRAY(_arg) INTO _list;
  END IF;

      
  IF _db != '' OR _db IS NOT NULL THEN
    SET @sx = CONCAT("CALL ",_db, ".", _fn, "(");
    WHILE _i < JSON_LENGTH(_list) DO 
      IF _i = JSON_LENGTH(_list) - 1 THEN 
        SET @ending = ")";
      ELSE
        SET @ending = ", ";
      END IF;
      SELECT CONCAT(@sx, QUOTE(get_json_array(_list, _i)), @ending) INTO @sx;
      SELECT _i + 1 INTO _i;
    END WHILE;

    PREPARE stmtx FROM @sx;
    EXECUTE stmtx;
    DEALLOCATE PREPARE stmtx;
  END IF;
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `register_touch_request` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `register_touch_request`(
  IN _firstname VARCHAR(255),
  IN _lastname VARCHAR(255),
  IN _email VARCHAR(255),
  IN _message TEXT,
  IN _reason VARCHAR(16)
)
BEGIN

  DECLARE _now INT(11) DEFAULT 0;
  DECLARE _cksum VARCHAR(255);

  SELECT UNIX_TIMESTAMP() into _now;
  SELECT sha2(uuid(),224) INTO _cksum;

  INSERT INTO
    request (`firstname`,`lastname`,`email`, `id`, `message`,`reason`,`tstamp`)
    VALUES (_firstname, _lastname, _email, sha2(uuid(),224), _message,_reason,_now);
  SELECT _cksum AS id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `reminder_create` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `reminder_create`(
  IN _uid VARCHAR(16),
  IN _task JSON
)
BEGIN
  DECLARE _db_name VARCHAR(116) DEFAULT NULL;
  DECLARE _id VARCHAR(16) DEFAULT NULL;
  DECLARE _st INT(11) UNSIGNED DEFAULT 0;
  SELECT UNIX_TIMESTAMP() INTO _st;
  IF _task IS NULL THEN 
    SELECT '{}' INTO _task;
  END IF;
  SELECT JSON_SET(_task, "$.ctime", _st, "$.mtime", _st) INTO _task;
  SELECT uniqueId() INTO _id;
  SELECT id FROM reminder WHERE 
    `uid`=_uid AND nid = JSON_VALUE(_task, "$.nid") AND hub_id = JSON_VALUE(_task, "$.hub_id") INTO _id;
  REPLACE INTO reminder (`id`, `uid`, `task`) VALUES (_id, _uid, _task);
  SELECT *, id reminder_id FROM reminder WHERE id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `reminder_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `reminder_get`(
  IN _args JSON
)
BEGIN
  SELECT *, id reminder_id FROM reminder WHERE id=JSON_VALUE(_args, "$.id")  OR 
  (`uid` = JSON_VALUE(_args, "$.uid") AND 
   `nid` = JSON_VALUE(_args, "$.nid") AND 
   `hub_id` = JSON_VALUE(_args, "$.hub_id") 
  ) LIMIT 1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `reminder_list` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `reminder_list`(
  IN _uid VARCHAR(16)
)
BEGIN
  DECLARE _db_name VARCHAR(160) DEFAULT NULL;
  DECLARE _nid VARCHAR(160) DEFAULT NULL;
  DECLARE _parent_id VARCHAR(160) DEFAULT NULL;
  DECLARE _hub_id VARCHAR(160) DEFAULT NULL;
  DECLARE _finished INTEGER DEFAULT 0;
  DECLARE dbcursor CURSOR FOR 
    SELECT db_name, nid, hub_id FROM reminder r INNER JOIN entity e ON hub_id=e.id WHERE `uid`=_uid;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET _finished = 1; 
  DROP TABLE IF EXISTS __tmp_media;
  CREATE TEMPORARY TABLE __tmp_media (
    `media_id` VARCHAR(16) DEFAULT NULL,
    `parent_id` VARCHAR(16) DEFAULT NULL,
    `filename` VARCHAR(1024) DEFAULT NULL,
    `hub_id` VARCHAR(16) DEFAULT NULL,
    PRIMARY KEY id(hub_id, media_id)
  );
  OPEN dbcursor;
    STARTLOOP: LOOP
      FETCH dbcursor INTO _db_name, _nid, _hub_id;
        IF _finished = 1 THEN 
          LEAVE STARTLOOP;
        END IF;  
        SET @s = CONCAT("REPLACE INTO __tmp_media SELECT id, parent_id, CONCAT(user_filename, '.', extension), ", 
          quote(_hub_id), " FROM ", _db_name, ".media WHERE id=", quote(_nid));
        
        IF @s IS NOT NULL THEN 
          PREPARE stmt FROM @s;
          EXECUTE stmt;
          DEALLOCATE PREPARE stmt;
        END IF;
    END LOOP STARTLOOP;
  CLOSE dbcursor;
  SELECT r.*, t.parent_id pid, r.id reminder_id, t.filename FROM 
    reminder r INNER JOIN __tmp_media t ON t.hub_id=r.hub_id AND t.media_id=nid;
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `reminder_remove` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `reminder_remove`(
  IN _args JSON
)
BEGIN
  DELETE FROM reminder WHERE id=JSON_VALUE(_args, "$.id")  OR 
  (`uid` = JSON_VALUE(_args, "$.uid") AND 
   `nid` = JSON_VALUE(_args, "$.nid") AND 
   `hub_id` = JSON_VALUE(_args, "$.hub_id") 
  );
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `reminder_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `reminder_update`(
  IN _id VARCHAR(16),
  IN _task JSON
)
BEGIN
  UPDATE reminder SET task=JSON_MERGE_PATCH(task, _task, JSON_OBJECT('mtime', UNIX_TIMESTAMP())) WHERE id=_id;
  SELECT * FROM reminder WHERE id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `remove_unified_room` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `remove_unified_room`(
  IN _id VARCHAR(64)
)
BEGIN

    SELECT 
    u.id, u.uid, is_mic_enabled, is_video_enabled, is_share_enabled, is_write_enabled, metadata,
    coalesce(guest_name, firstname) username FROM unified_room u 
      INNER JOIN socket s ON u.uid=s.id 
      INNER JOIN cookie c ON s.cookie=c.id
      LEFT JOIN drumate d on c.uid=d.id
    WHERE u.uid =_id AND s.state='active';
    DELETE FROM  unified_room  WHERE `uid`  =_id;
 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `renewal_active` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `renewal_active`(
    IN _entity_id VARCHAR(16) CHARACTER SET ascii
    )
BEGIN
    UPDATE renewal SET cancel_time = null
    WHERE entity_id = _entity_id;

    SELECT * from renewal WHERE entity_id = _entity_id;
  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `renewal_cancel` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `renewal_cancel`(
    IN _entity_id VARCHAR(16) CHARACTER SET ascii
    )
BEGIN
    UPDATE renewal SET cancel_time = UNIX_TIMESTAMP()
    WHERE entity_id = _entity_id;
  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `renewal_cancel_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `renewal_cancel_next`(
    IN _entity_id VARCHAR(16) CHARACTER SET ascii,
    IN _cancel_at INT
    )
BEGIN


        SELECT 
          JSON_OBJECT(
          '5'  , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_cancel_at), INTERVAL  0 DAY)), 'on', 1 ),
          '6'  , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_cancel_at), INTERVAL 31 DAY)), 'on', 1 ),
          '7'  , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_cancel_at), INTERVAL 61 DAY)), 'on', 1 ),
          '8'  , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_cancel_at), INTERVAL 91 DAY)), 'on', 1 ),
          '9'  , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_cancel_at), INTERVAL 121 DAY)), 'on', 1 ),
          '10' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_cancel_at), INTERVAL 151 DAY)), 'on', 1 ),
          '11' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_cancel_at), INTERVAL 158 DAY)), 'on', 1 ),
          '12 ', JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_cancel_at), INTERVAL 165 DAY)), 'on', 1 ),
          '13' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_cancel_at), INTERVAL 172 DAY)), 'on', 1 ),
          '14' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_cancel_at), INTERVAL 176 DAY)), 'on', 1 ),
          '15' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_cancel_at), INTERVAL 177 DAY)), 'on', 1 ),
          '16' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_cancel_at), INTERVAL 178 DAY)), 'on', 1 ),
          '17' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_cancel_at), INTERVAL 179 DAY)), 'on', 1 ),
          '18' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_cancel_at), INTERVAL 180 DAY)), 'on', 1 ),
          '19' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_cancel_at), INTERVAL 181 DAY)), 'on', 1 )
         
          

          ) INTO @json;



    UPDATE renewal SET cancel_time = _cancel_at, metadata = @json
    WHERE entity_id = _entity_id;
  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `renewal_expiry` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `renewal_expiry`()
BEGIN
  
    SELECT  
      r.next_renewal_time,
      r.next_action,
      r.subscription_id,
      r.entity_id,
      d.id ,
      d.fullname,
      d.email,
      r.next_action_time,
     JSON_VALUE(d.profile, '$.lang' ) lang,
     TIMESTAMPDIFF (DAY , FROM_UNIXTIME(r.next_renewal_time), FROM_UNIXTIME(r.next_action_time)) days_since,
     UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(r.next_renewal_time), INTERVAL 181 DAY)) last_time
    FROM 
      renewal  r 
    INNER JOIN drumate d ON d.id = r.entity_id 
    WHERE next_action_time <= UNIX_TIMESTAMP();

  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `renewal_expiry_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `renewal_expiry_update`(
    _entity_id VARCHAR(16),
    _subscription_id VARCHAR(30), 
    _next_action VARCHAR(16)
    )
BEGIN
  
    UPDATE renewal SET  metadata = JSON_SET(`metadata`, CONCAT("$.",_next_action, '.on'), 0)
    WHERE entity_id  = _entity_id AND 
    subscription_id = _subscription_id AND 
    next_action = _next_action; 

  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `renewal_failed_remove` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `renewal_failed_remove`(
    IN _entity_id VARCHAR(16),
    IN _subscription_id VARCHAR(30)
    )
BEGIN
  
     DELETE  FROM renewal_failed 
     WHERE   entity_id =_entity_id AND 
     subscription_id = _subscription_id;

  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `renewal_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `renewal_get`(
    IN _entity_id VARCHAR(16) CHARACTER SET ascii
    )
BEGIN

    DECLARE  _plan varchar(30) ;
    DECLARE _period varchar(30) ;
    DECLARE _recurring  INT(11) ; 
    DECLARE _start_time int(11) ;
    DECLARE _next_renewal_time int(11) ;
    DECLARE _expired int(11) default 0  ;
    DECLARE _canceled int(11) default  0 ;
    DECLARE _url VARCHAR(2000)  ;

    SELECT 'advanced' INTO _plan; 
    SELECT 'company' FROM entity WHERE id=_entity_id AND dom_id > 1 INTO _plan;

    SELECT 
        plan , period,recurring ,next_renewal_time, 
        CASE WHEN next_renewal_time <  UNIX_TIMESTAMP() THEN 1 ELSE 0 END,
        CASE WHEN cancel_time IS NULL THEN 0 ELSE 1 END
    FROM renewal 
    WHERE entity_id = _entity_id 
       
    INTO
      _plan , _period,_recurring ,_next_renewal_time , _expired ,_canceled;




    SELECT  
        url  
    FROM 
      renewal_failed rf 
      INNER JOIN subscription_new s ON s.subscription_id = rf.subscription_id AND s.entity_id = rf.entity_id
      INNER JOIN renewal r ON r.subscription_id = rf.subscription_id AND r.entity_id = rf.entity_id
    WHERE 
        rf.entity_id = _entity_id  
        
    INTO _url;


    SELECT  
    _plan plan, 
    _period period,
    _recurring recurring ,
    _next_renewal_time next_renewal_time , 
    _expired is_expired , 
    _canceled is_canceled,
    CASE WHEN _url IS NULL THEN 0 ELSE 1 END is_payment_failed,
    _url   payment_link;


  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `renewal_get_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `renewal_get_next`(
    IN _entity_id VARCHAR(16) CHARACTER SET ascii,
    IN _ctime INT(11)
    )
BEGIN

    DECLARE  _plan varchar(30) ;
    DECLARE _period varchar(30) ;
    DECLARE _recurring  INT(11) ; 
    DECLARE _start_time int(11) ;
    DECLARE _next_renewal_time int(11) ;
    DECLARE _expired int(11) default 0  ;
    DECLARE _canceled int(11) default  0 ;
    DECLARE _url VARCHAR(2000)  ;




    IF _ctime IN (0,'') THEN 
    SELECT UNIX_TIMESTAMP() INTO  _ctime;
    END IF;
    

    SELECT 'advanced' INTO _plan; 
    SELECT 'company' FROM entity WHERE id=_entity_id AND dom_id > 1 INTO _plan;

    SELECT 
       CASE WHEN
          ( CASE WHEN   cancel_time IS NULL 
            THEN UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(next_renewal_time), INTERVAL 7 DAY))  
            ELSE next_renewal_time END )
         <=  _ctime  THEN _plan ELSE plan END,
        period,recurring ,next_renewal_time, 
        CASE WHEN
          ( CASE WHEN   cancel_time IS NULL 
            THEN UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(next_renewal_time), INTERVAL 7 DAY))  
            ELSE next_renewal_time END )
         <=  _ctime  THEN 1 ELSE 0 END,
        CASE WHEN cancel_time IS NOT NULL AND  next_renewal_time > _ctime THEN 1 ELSE 0 END
    FROM renewal 
    WHERE entity_id = _entity_id 
       
    INTO
      _plan , _period,_recurring ,_next_renewal_time , _expired ,_canceled;




    SELECT  
        url  
    FROM 
      renewal_failed rf 
      INNER JOIN subscription_new s ON s.subscription_id = rf.subscription_id AND s.entity_id = rf.entity_id
      INNER JOIN renewal r ON r.subscription_id = rf.subscription_id AND r.entity_id = rf.entity_id
    WHERE 
        rf.entity_id = _entity_id  
        
    INTO _url;


    SELECT  
    _plan plan, 
    _period period,
    _recurring recurring ,
    _next_renewal_time next_renewal_time , 
    _expired is_expired , 
    _canceled is_canceled,
    CASE WHEN _url IS NULL THEN 0 ELSE 1 END is_payment_failed,
    _url   payment_link;


  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `renewal_history_failed_remove` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `renewal_history_failed_remove`(
    IN _entity_id VARCHAR(16),
    IN _subscription_id VARCHAR(30)
    )
BEGIN
  
     DELETE  FROM renewal_history 
     WHERE   entity_id =_entity_id AND 
     subscription_id = _subscription_id AND status = 'open';

  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `renewal_history_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `renewal_history_get`(
    IN _entity_id VARCHAR(16) ,
    IN _page INT(6)

    )
BEGIN
     DECLARE _range bigint;
     DECLARE _offset bigint;
     DECLARE _payment_intent_id VARCHAR(30); 
     CALL pageToLimits(_page, _offset, _range);
   
    SELECT payment_intent_id FROM renewal WHERE entity_id =_entity_id INTO _payment_intent_id;

    SELECT 
      _page as `page`,
      entity_id,
      invoice_id,
      status,
      
      plan,
      period,   
      recurring, 
      ctime paidtime, 
      price,offer_price,
      renewal_amount,stime,etime,
      FROM_UNIXTIME(stime)  sdate, 
      FROM_UNIXTIME(etime)  edate, 
      
      CASE WHEN _payment_intent_id = payment_intent_id THEN 'current' else 'old' END flag,
      pdf,url

    FROM 
      renewal_history r WHERE entity_id =_entity_id 
    ORDER BY stime DESC  LIMIT _offset, _range;
  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `renewal_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `renewal_update`(
    IN _status   VARCHAR(16),
    IN _entity_id VARCHAR(16),
    IN _invoice_id varchar(30) ,
    IN _payment_intent_id  VARCHAR(30),
    IN _subscription_id VARCHAR(30),
    IN _plan varchar(30) ,
    IN _period varchar(30) ,
    IN _recurring  INT(11) , 
    IN _start_time int(11), 
    IN _next_renewal_time int(11) ,
    IN _price float,
    IN _offer_price  float,
    IN _renewal_amount float,
    IN _pdf varchar(300) ,
    IN _url varchar(300) ,
    IN _res json
    )
BEGIN

    DECLARE  _flag  INT;
    SELECT 0 INTO _flag; 

   IF _status <> 'paid' THEN 

      SELECT 
         1 
      FROM 
        renewal_history
      WHERE 
        subscription_id =  _subscription_id AND 
        payment_intent_id = _payment_intent_id AND
        entity_id = entity_id 
      INTO _flag; 

      INSERT INTO renewal_history
          ( entity_id,invoice_id,subscription_id,payment_intent_id,
            plan ,period,recurring, ctime, 
            price,offer_price,renewal_amount,stime,etime,status,metadata,pdf,url
          )
      SELECT 
          _entity_id,_invoice_id,_subscription_id,_payment_intent_id,
          _plan,_period,_recurring,UNIX_TIMESTAMP(),
          _price,_offer_price,_renewal_amount,_start_time,_next_renewal_time,_status,_res ,_pdf,_url
          WHERE _flag = 0 ;

      INSERT INTO renewal_failed
          ( entity_id,invoice_id,subscription_id,payment_intent_id,
            plan ,period,recurring, ctime, 
            price,offer_price,renewal_amount,url
          )
      SELECT 
          _entity_id,_invoice_id,_subscription_id,_payment_intent_id,
          _plan,_period,_recurring,UNIX_TIMESTAMP(),
          _price,_offer_price,_renewal_amount,_url
          WHERE _flag = 0 ;


    END IF ;



    IF _status = 'paid' THEN 


      INSERT INTO renewal_history
            ( entity_id,invoice_id,subscription_id,payment_intent_id,
              plan ,period,recurring, ctime, 
              price,offer_price,renewal_amount,stime,etime,status,metadata,pdf,url
            )
        SELECT 
            _entity_id,_invoice_id,_subscription_id,_payment_intent_id,
            _plan,_period,_recurring,UNIX_TIMESTAMP(),
            _price,_offer_price,_renewal_amount,_start_time,_next_renewal_time,_status,_res ,_pdf,_url
        ON DUPLICATE KEY UPDATE
            status = _status;

        SELECT 1 INTO _flag; 
        SELECT 0 FROM renewal WHERE entity_id = _entity_id AND stime > _start_time INTO _flag;


        IF _flag = 1 THEN 

          SELECT 
          JSON_OBJECT(
          '5'  , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_next_renewal_time), INTERVAL  8 DAY)), 'on', 1 ),
          '6'  , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_next_renewal_time), INTERVAL 31 DAY)), 'on', 1 ),
          '7'  , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_next_renewal_time), INTERVAL 61 DAY)), 'on', 1 ),
          '8'  , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_next_renewal_time), INTERVAL 91 DAY)), 'on', 1 ),
          '9'  , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_next_renewal_time), INTERVAL 121 DAY)), 'on', 1 ),
          '10' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_next_renewal_time), INTERVAL 151 DAY)), 'on', 1 ),
          '11' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_next_renewal_time), INTERVAL 158 DAY)), 'on', 1 ),
          '12 ', JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_next_renewal_time), INTERVAL 165 DAY)), 'on', 1 ),
          '13' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_next_renewal_time), INTERVAL 172 DAY)), 'on', 1 ),
          '14' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_next_renewal_time), INTERVAL 176 DAY)), 'on', 1 ),
          '15' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_next_renewal_time), INTERVAL 177 DAY)), 'on', 1 ),
          '16' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_next_renewal_time), INTERVAL 178 DAY)), 'on', 1 ),
          '17' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_next_renewal_time), INTERVAL 179 DAY)), 'on', 1 ),
          '18' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_next_renewal_time), INTERVAL 180 DAY)), 'on', 1 ),
          '19' , JSON_OBJECT( 'date', UNIX_TIMESTAMP(DATE_ADD(FROM_UNIXTIME(_next_renewal_time), INTERVAL 181 DAY)), 'on', 1 )
         
          

          ) INTO @json;


          INSERT INTO renewal 
            (entity_id,subscription_id,payment_intent_id,
            plan ,period,recurring, stime , next_renewal_time,ctime,metadata)
          SELECT 
            _entity_id,_subscription_id,_payment_intent_id,
            _plan,_period,_recurring,_start_time, _next_renewal_time,UNIX_TIMESTAMP(),@json
          ON DUPLICATE KEY UPDATE
              subscription_id =_subscription_id,
              payment_intent_id =_payment_intent_id,
              plan =_plan,
              period =_period,
              recurring =_recurring ,
              stime = _start_time,
              next_renewal_time = _next_renewal_time,
              ctime =  UNIX_TIMESTAMP(), 
              cancel_time = NULL,
              metadata = @json;

        END IF;

      DELETE FROM renewal_failed WHERE 
        subscription_id =  _subscription_id AND 
        payment_intent_id = _payment_intent_id AND
        entity_id = entity_id ;

    END IF ;


    SELECT * from renewal WHERE entity_id = _entity_id;

  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `reset_password` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `reset_password`(
  IN _vhost VARCHAR(255),
  IN _key VARCHAR(255),
  IN _actime INT(11),
  IN _pw VARCHAR(160)
)
BEGIN
  DECLARE _check VARCHAR(160);
  DECLARE _id VARCHAR(16);
  START TRANSACTION;
    SELECT id FROM entity WHERE vhost=_vhost INTO _id;
    UPDATE drumate SET fingerprint=sha2(_pw, 512) WHERE id=_id AND activation_key=_key AND activation_time=_actime;
    SELECT fingerprint FROM drumate WHERE id=_id AND activation_key=_key AND activation_time=_actime INTO _check;
    IF _check = '' OR _check is NULL THEN
      SELECT NULL;
    ELSE
      UPDATE drumate SET activation_key='', activation_time=NULL WHERE id=_id;
      SELECT _id AS id, _vhost AS vhost;
    END IF;
  COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `retrieve_entity` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `retrieve_entity`(
   IN _key VARBINARY(80)
)
BEGIN
  DECLARE _id VARBINARY(16);
  DECLARE _ident VARCHAR(255);
  DECLARE _type VARCHAR(255);

  SELECT id, ident, `type` FROM entity WHERE ident=_key OR id=_key INTO _id, _ident, _type;

  START TRANSACTION;
    UPDATE entity SET status = 'active' WHERE  id=_id;
    UPDATE postfix.mailbox SET active = 1 WHERE  local_part=_ident;
    UPDATE postfix.alias SET active = 1 WHERE  address=concat(_ident, '@', utils.domain_name());
  COMMIT;

  SELECT id, ident,`type` FROM entity WHERE ident=_key OR id=_key INTO _id, _ident, _type;
  IF _type = 'drumate' THEN
    SELECT * FROM user_csv WHERE id=_id;
  ELSE
    SELECT * FROM site_csv WHERE id=_id;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `role_add` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `role_add`(
  IN _name VARCHAR(500),
  IN _org_id VARCHAR(16)
)
BEGIN
  DECLARE _position int(11) unsigned;
  SELECT MAX(position) FROM role WHERE org_id =_org_id INTO _position;
  SELECT IFNULL(_position,0) +1 INTO _position;

  SELECT unique_role(_name,NULL,_org_id) INTO _name;
  INSERT INTO role (name,org_id, position)  SELECT _name, _org_id,_position;
  
  SELECT id role_id, name,org_id,position FROM role WHERE name = _name AND  org_id = _org_id  ; 

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `role_assigned` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `role_assigned`(
  IN _uid  VARCHAR(16),
  IN _org_id VARCHAR(16)
)
BEGIN
  SELECT
    r.id role_id,
    r.name role_name 
  FROM 
  map_role mr 
  INNER JOIN role r ON r.id = mr.role_id 
  WHERE  
  r.org_id =  _org_id  AND 
  mr.uid =_uid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `role_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `role_delete`(
  IN _role_id INT(10) ,
  IN _org_id VARCHAR(16)
)
BEGIN

  DELETE FROM map_role WHERE role_id = _role_id AND  org_id = _org_id;
  DELETE FROM role WHERE id = _role_id AND  org_id = _org_id; 
  SELECT _role_id role_id, _org_id org_id;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `role_detail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `role_detail`(
  IN _role_id INT,
  IN _org_id VARCHAR(16),
  IN _page INT(6)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  
  CALL pageToLimits(_page, _offset, _range);

  
   IF _role_id IN (0) THEN 
   SELECT NULL INTO  _role_id;
  END IF;

  IF  _role_id IS NOT NULL THEN 
    SELECT 
      _page as `page`,
      dm.id  domain_id,
      dm.name domain_name,
      d.id drumate_id,
      d.firstname,
      d.lastname,
      d.fullname,
      d.email,
      e.ident,
      read_json_object(d.profile, "address")  `address`,
      read_json_object(d.profile, "personaldata")  personaldata,
      read_json_object(d.profile, "mobile")  mobile 
    FROM 
      privilege p 
      INNER JOIN organisation o ON p.domain_id=o.domain_id  
      INNER JOIN domain dm ON  dm.id = p.domain_id  
      INNER JOIN drumate d ON p.uid = d.id 
      INNER JOIN entity e  ON d.id = e.id 
      INNER JOIN map_role m ON p.uid= m.uid AND  o.id= m.org_id
    WHERE 
     o.id =_org_id  AND  m.role_id =_role_id  
    ORDER BY fullname ASC
    LIMIT _offset, _range; 


  ELSE 
    SELECT 
      _page as `page`,
      dm.id  domain_id,
      dm.name domain_name,
      d.id drumate_id,
      d.firstname,
      d.lastname,
      d.fullname,
      d.email,
      e.ident,
      read_json_object(d.profile, "address")  `address`,
      read_json_object(d.profile, "personaldata")  personaldata,
      read_json_object(d.profile, "mobile")  mobile 
    FROM 
      privilege p 
      INNER JOIN organisation o ON p.domain_id=o.domain_id  
      INNER JOIN domain dm ON  dm.id = p.domain_id  
      INNER JOIN drumate d ON p.uid = d.id 
      INNER JOIN entity e  ON d.id = e.id 
    WHERE 
     o.id =_org_id 
    ORDER BY fullname ASC
    LIMIT _offset, _range;    
   END IF; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `role_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `role_exists`(
  IN _key VARCHAR(1000),
  IN _org_id VARCHAR(16)
)
BEGIN
    SELECT *  FROM role WHERE (name = _key  OR id = _key) AND org_id = _org_id; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `role_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `role_get`(
  IN _org_id VARCHAR(16),
  IN _page INT(6)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
    
  CALL pageToLimits(_page, _offset, _range);

  SELECT 
     _page as `page`,
     id role_id, name ,org_id  ,position 
  FROM 
    role 
  WHERE org_id =  _org_id 
  ORDER BY position ASC
  LIMIT _offset, _range;  

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `role_map` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `role_map`(
  IN _uid VARCHAR(16), 
  IN _roles  MEDIUMTEXT,
  IN _org_id VARCHAR(16)
)
BEGIN
 DECLARE _idx INTEGER DEFAULT 0;
 DECLARE _id VARCHAR(16);
 DECLARE _length INTEGER DEFAULT 0;
 

 SELECT  JSON_LENGTH(_roles)  INTO _length;

 DELETE FROM map_role WHERE uid=_uid AND org_id =_org_id ;

 WHILE _idx < _length  DO 
    SELECT JSON_UNQUOTE(JSON_EXTRACT(_roles, CONCAT("$[", _idx, "]"))) INTO _id;
    INSERT INTO map_role(uid,role_id, org_id) 
    SELECT _uid,_id,_org_id ON DUPLICATE KEY UPDATE uid =_uid;
    SELECT _idx + 1 INTO _idx;
  END WHILE;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `role_rename` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `role_rename`(
    IN _role_id INT(10) ,
    _org_id VARCHAR(50),
    _name VARCHAR(255)   
)
BEGIN
    
  SELECT unique_role(_name,NULL,_org_id) INTO _name;
  UPDATE role SET name = _name WHERE id = _role_id;
  SELECT * FROM role WHERE id = _role_id  ; 

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `role_reposition` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `role_reposition`(
  IN _roles MEDIUMTEXT
)
BEGIN
  DECLARE _i INTEGER DEFAULT 0;
  DROP TABLE IF EXISTS __tmp_position;
  CREATE TEMPORARY TABLE __tmp_position(
    `position` INTEGER,
    `id` varchar(16) DEFAULT NULL
  ); 

  WHILE _i < JSON_LENGTH(_roles) DO 
    
    
    INSERT INTO __tmp_position 
      SELECT _i, JSON_UNQUOTE(JSON_EXTRACT(_roles, CONCAT("$[", _i, "]")));
    SELECT _i + 1 INTO _i;
  END WHILE;
  UPDATE role m INNER JOIN __tmp_position t ON m.id=t.id SET m.position = t.position ;
  SELECT * FROM __tmp_position;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `room_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `room_get`(
  IN _device_id VARCHAR(64),
  IN _socket_id VARCHAR(64),
  IN _user_id VARCHAR(64),
  IN _room_id VARCHAR(16),
  IN _type VARCHAR(32)
)
BEGIN
  DECLARE _privilege TINYINT(2) DEFAULT 0;
  DECLARE _presenter TINYINT(4) DEFAULT 0;
  DECLARE _orphaned TINYINT(4) DEFAULT 0;
  DECLARE _hub_id VARCHAR(16) DEFAULT NULL;
  DECLARE _avatar_id VARCHAR(16) DEFAULT NULL;
  DECLARE _drumate_db VARCHAR(32) DEFAULT NULL;
  DECLARE _location VARCHAR(128) DEFAULT NULL;
  DECLARE _server VARCHAR(128) DEFAULT NULL;
  DECLARE _guest_name VARCHAR(128);
  DECLARE _email VARCHAR(128);
  DECLARE _redirect BOOLEAN;
  DECLARE _count INTEGER DEFAULT 0;
  DECLARE _org_perm TINYINT(4) DEFAULT 0b0100000;
  DECLARE _status VARCHAR(128) DEFAULT 'waiting';  
  DECLARE _role VARCHAR(128) DEFAULT 'listener';  
  DECLARE _area VARCHAR(128) DEFAULT NULL;  

  SELECT area, id FROM yp.entity WHERE db_name = DATABASE() INTO _area, _hub_id;

  IF _type = 'screen' OR _area = 'private' THEN 
    SET _org_perm = 0b0000010;
  END IF; 


  
  DELETE FROM room_attendee 
    WHERE socket_id NOT IN (SELECT id FROM yp.socket where state='acive');

  DELETE FROM yp.room WHERE hub_id=_hub_id AND 
    (presenter_id NOT IN (SELECT id FROM yp.socket ) OR presenter_id IS NULL);

  DELETE FROM yp.room_endpoint WHERE room_id NOT IN (SELECT id FROM yp.room);


  IF (_room_id IN('', '0')) THEN 
    SELECT NULL INTO _room_id;
  END IF;
  
  SELECT id, `status` FROM yp.room WHERE `type`=_type AND hub_id=_hub_id 
    INTO _room_id, _status;

  IF (_room_id IS NULL) THEN 
    SELECT room_id FROM room_attendee 
      WHERE `type`=_type
      LIMIT 1 INTO _room_id;
    SELECT IFNULL(_room_id, uniqueId()) INTO _room_id;
  END IF;

  SELECT user_permission(_user_id, _room_id) INTO _privilege; 

  SELECT `server`, `location` FROM yp.room_endpoint WHERE room_id=_room_id
    INTO _server, _location;

  
  
  IF(_privilege&0b0000010) THEN 
    SELECT count(*) FROM yp.room WHERE id = _room_id INTO _count;

    
    IF(_count = 0) THEN 
      IF _server IS NULL OR _location IS NULL THEN 
        SELECT s.server, s.location FROM yp.socket s WHERE s.id=_socket_id AND s.uid=_user_id
          INTO _server, _location; 
        REPLACE INTO yp.room_endpoint (`room_id`, `ctime`, `server`, `location`)
          VALUES(_room_id, UNIX_TIMESTAMP(), _server, _location);
      END IF; 
      IF (_privilege&_org_perm) THEN 
        REPLACE INTO yp.room (`hub_id`, `id`, `ctime`, `presenter_id`, `type`, `status`)
        VALUES(_hub_id, _room_id, UNIX_TIMESTAMP(), _socket_id, _type, 'started');
      ELSE 
        REPLACE INTO yp.room (`hub_id`, `id`, `ctime`, `type`, `status`)
        VALUES(_hub_id, _room_id, UNIX_TIMESTAMP(), _type, 'waiting');
      END IF;      
    END IF;
    IF(_privilege&_org_perm) THEN 
      
      SELECT count(*) FROM yp.room r 
        INNER JOIN yp.socket s ON r.presenter_id=s.id 
        INNER JOIN yp.drumate d ON s.uid=d.id 
        WHERE r.type = _type AND hub_id=_hub_id 
        
        INTO _count; 
      
      
      IF(_count = 0) THEN 
        
        DELETE FROM yp.room WHERE ctime < UNIX_TIMESTAMP() 
          AND `type` = 'screen' AND hub_id =  _hub_id;
        UPDATE yp.drumate SET `profile`=JSON_SET(`profile`, "$.connected", 2) WHERE id=_user_id;
        
        IF _type = 'screen' THEN 
          SELECT e.server, e.location FROM yp.room_endpoint e 
            INNER JOIN yp.room r ON e.room_id = r.id 
            WHERE hub_id = _hub_id AND `type` != 'screen' ORDER BY e.ctime ASC LIMIT 1
            INTO _server, _location;
          REPLACE INTO yp.room_endpoint (`room_id`, `ctime`, `server`, `location`)
            VALUES(_room_id, UNIX_TIMESTAMP(), _server, _location);
        END IF;
      END IF;

    END IF;

    
    SET @_role = 'listener';
    SELECT IF(presenter_id = _socket_id, 'presenter', 'listener')
      FROM yp.room WHERE hub_id =  _hub_id AND `type` = _type
      INTO @_role;
    REPLACE INTO room_attendee (
      id, 
      privilege,
      device_id, 
      socket_id, 
      room_id, 
      `type`,
      ctime, 
      `role`
    )
    VALUES(
      _user_id, 
      _privilege,
      _device_id, 
      _socket_id, 
      _room_id,
      _type,
      UNIX_TIMESTAMP(), 
      @_role
    );
  END IF;
  CALL room_access_next(_socket_id, _user_id, _room_id);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `room_get_presenter` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `room_get_presenter`(
  IN _hub_id VARCHAR(16) CHARACTER SET ascii
)
BEGIN

  SELECT 
    r.hub_id, 
    d.id avatar_id,
    "presenter" role,
    r.id room_id,
    s.id ssid,
    d.id uid, 
    r.presenter_id,
    r.status,
    CONCAT(IFNULL(d.firstname, ''), ' ', IFNULL(d.lastname, '')) username
    FROM room r 
    INNER JOIN socket s ON r.presenter_id=s.id 
    INNER JOIN drumate d ON d.id=s.uid WHERE r.hub_id=_hub_id AND s.state='active';
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `room_shutdown` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `room_shutdown`(
  IN _room_id VARCHAR(16) CHARACTER SET ascii,
  IN _presenter_id VARCHAR(16) CHARACTER SET ascii
)
BEGIN
  DECLARE _uid VARCHAR(16) DEFAULT NULL;
  SELECT presenter_id FROM room 
    WHERE presenter_id=_presenter_id AND id=_room_id INTO _uid;

  IF _uid IS NOT NULL THEN 
    DELETE FROM room WHERE id=_room_id;
    DELETE FROM unified_room WHERE id=_room_id;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `seen_by` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `seen_by`(
  IN _org_id VARCHAR(16),
  IN _uid VARCHAR(16),
  IN _option VARCHAR(16),
  IN _page INT(6)

)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  
  CALL pageToLimits(_page, _offset, _range);
  IF _option = 'member' THEN
    SELECT 
      _page as `page`,
      o.id ogrid,
      o.name org_name,
      dm.id  domain_id,
      dm.name domain_name,
      d.id drumate_id,
      d.firstname,
      d.lastname,
      d.fullname,
      d.email,
      e.ident,
      read_json_object(d.profile, "address")  `address`,
      read_json_object(d.profile, "personaldata")  personaldata,
      read_json_object(d.profile, "mobile")  mobile,
      p.privilege, 
      CASE WHEN IFNULL(read_json_object(d.profile, "mobile_verified"),'no') <> 'yes' THEN 'no' ELSE 'yes' END  mobile_verified,
      CASE WHEN IFNULL(read_json_object(d.profile, "email_verified"),'no') <> 'yes' THEN 'no' ELSE 'yes' END  email_verified,  
      e.status,
      IFNULL(JSON_UNQUOTE(JSON_EXTRACT(e.settings, '$.status_date')),null) status_date,
      d.otp
    FROM 
      privilege p 
      INNER JOIN organisation o ON p.domain_id=o.domain_id  
      INNER JOIN domain dm ON  dm.id = p.domain_id  
      INNER JOIN drumate d ON p.uid = d.id 
      INNER JOIN entity e  ON d.id = e.id 
      INNER JOIN contact_sync cs ON hub_id = p.uid 
      WHERE  o.id =_org_id  AND   p.privilege <> 1  AND cs.uid = _uid 
      ORDER BY fullname ASC, d.id ASC
      LIMIT _offset, _range;
  ELSE 
    SELECT
      _page as `page`,
      r.id role_id,
      r.name role_name 
    FROM 
    map_role mr 
    INNER JOIN role r ON r.id = mr.role_id 
    WHERE  
      r.org_id =  _org_id  AND 
      mr.uid IN (SELECT hub_id FROM contact_sync WHERE uid = _uid)
      ORDER BY position ASC
      LIMIT _offset, _range;
  END IF;
      
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `seen_by_add` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `seen_by_add`(
  IN _uid VARCHAR(16),
  IN _hubs JSON,
  IN _roles JSON
)
BEGIN
 DECLARE _idx INTEGER DEFAULT 0;
 DECLARE _hub_id VARCHAR(16);
 DECLARE _role_id  INTEGER;
 DECLARE _length INTEGER DEFAULT 0;
 

 SELECT  JSON_LENGTH(_hubs)  INTO _length;

  WHILE _idx < _length  DO 
    SELECT JSON_UNQUOTE(JSON_EXTRACT(_hubs, CONCAT("$[", _idx, "]"))) INTO _hub_id;
    INSERT INTO contact_sync(hub_id,uid,status) 
    SELECT _hub_id,_uid,'new' ON DUPLICATE KEY UPDATE status =status;
    SELECT _idx + 1 INTO _idx;
  END WHILE;

  SELECT 0 INTO _length;

  SELECT  JSON_LENGTH(_roles)  INTO _length;

  WHILE _idx < _length  DO 
    SELECT JSON_UNQUOTE(JSON_EXTRACT(_roles, CONCAT("$[", _idx, "]"))) INTO _role_id;
    INSERT INTO contact_sync(hub_id,uid,status) 
    SELECT uid,_uid,'new' map_role  WHERE  role_id = _role_id ON DUPLICATE KEY UPDATE status =status;
    SELECT _idx + 1 INTO _idx;
  END WHILE;


  SELECT * FROM contact_sync;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `seo_factory` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `seo_factory`()
BEGIN
  DECLARE _tempid VARCHAR(16) CHARACTER SET ascii;
  DECLARE _db_name VARCHAR(255) CHARACTER SET ascii;
 
  DROP TABLE IF EXISTS _seo_check; 
  CREATE  TEMPORARY TABLE _seo_check (
    id varchar(16)  CHARACTER SET ascii DEFAULT NULL,
    db_name VARCHAR(40),
    is_checked boolean default 0 
    );
 
  TRUNCATE  table  seo_factory_check;


  INSERT INTO _seo_check
  SELECT e.id,db_name,0 
  FROM yp.entity e
  LEFT JOIN  yp.hub h on h.id = e.id
  LEFT JOIN yp.drumate d on d.id = e.id
  WHERE  (h.id IS NOT NULL OR e.id IS NOT NULL)
  AND e.type in ('hub','drumate') AND e.id <> 'ffffffffffffffff' ;
 
  SELECT  id ,db_name INTO _tempid ,_db_name FROM _seo_check WHERE is_checked = 0 LIMIT  1  ; 
  WHILE _tempid IS NOT NULL DO
    


      SET @st = CONCAT("CALL ", _db_name, ".seo_media_check()");
      PREPARE stmt2 FROM @st;
      EXECUTE stmt2 ;           
      DEALLOCATE PREPARE stmt2;



    UPDATE _seo_check SET is_checked = 1 WHERE id =_tempid;
    SELECT NULL INTO _tempid;
    SELECT  id ,db_name INTO _tempid ,_db_name FROM _seo_check WHERE is_checked = 0 LIMIT  1  ; 
  END WHILE; 

 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `seo_media_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `seo_media_get`()
BEGIN

  SELECT  sys_id,hub_id , nid ,db_name ,extension, mimetype,category,mfs_root,file_path 
  FROM  seo_factory_check 
  WHERE isprocessed = 0  ;

  

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `seo_media_remove` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `seo_media_remove`(
  IN _hub_id       VARCHAR(16) CHARACTER SET ascii,
  IN _nid        VARCHAR(16) CHARACTER SET ascii

)
BEGIN

  DELETE 
  FROM seo_factory_check
  WHERE hub_id =_hub_id AND 
        nid = _nid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `seo_media_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `seo_media_update`(
  IN _hub_id       VARCHAR(16) CHARACTER SET ascii,
  IN _nid        VARCHAR(16) CHARACTER SET ascii,
  IN _status    INT

)
BEGIN

  UPDATE  seo_factory_check
  SET isprocessed = -_status
  WHERE hub_id =_hub_id AND 
        nid = _nid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_check_cookie` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_check_cookie`(
  IN _args JSON
)
BEGIN
  DECLARE _sid VARCHAR(256);
  DECLARE _device_id VARCHAR(128) CHARACTER SET ascii  DEFAULT NULL;
  DECLARE _uid VARCHAR(16) CHARACTER SET ascii;
  DECLARE _domain VARCHAR(256);
  DECLARE _org_name VARCHAR(256);
  DECLARE _domain_id INTEGER;
  DECLARE _is_support INT DEFAULT 0 ;
  DECLARE _dmz_hub_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _dmz_token VARCHAR(100);
  DECLARE _ntime INT(11); 
  DECLARE _guest_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _nobody_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _failed BOOLEAN DEFAULT 0;
  DECLARE _expired BOOLEAN DEFAULT 0;
  DECLARE _connection VARCHAR(16) CHARACTER SET ascii  DEFAULT 'new';
  DECLARE _secret VARCHAR(128) CHARACTER SET ascii DEFAULT NULL;

  SELECT JSON_VALUE(_args, "$.sid") INTO _sid;
  SELECT JSON_VALUE(_args, "$.device_id") INTO _device_id;

  START TRANSACTION;

  SELECT get_sysconf('guest_id') INTO _guest_id;
  SELECT get_sysconf('nobody_id') INTO _nobody_id;

  SELECT UNIX_TIMESTAMP() INTO _ntime;

  SELECT  `uid` FROM cookie WHERE id=_sid INTO  _uid; 
  IF _uid IS NULL THEN 
    SELECT _nobody_id INTO _uid;
    INSERT IGNORE INTO cookie (`id`,`uid`,`ctime`,`mtime`,`ua`, `status`)
    VALUES(_sid, _uid, _ntime, _ntime, _device_id, _connection);
  ELSE 
    SELECT o.secret, IF(unix_timestamp() < (o.ctime + 600), 0, 1) expired 
      FROM otp o INNER JOIN cookie c ON c.uid=o.uid 
      WHERE c.id=_sid ORDER BY o.ctime DESC LIMIT 1 INTO _secret, _expired;

    IF _secret IS NULL THEN
      SELECT 'ok' INTO _connection;
    ELSE
      IF _expired THEN
        SELECT 'new' INTO _connection;
        UPDATE cookie SET ctime=_ntime, `uid`=_nobody_id, mtime=_ntime, `status`=_connection WHERE id=_sid;
      ELSE
        SELECT 'otp' INTO _connection;
      END IF;
    END IF;
    
  END IF;

  SELECT o.link, o.domain_id,  o.name
    FROM organisation o 
    INNER JOIN drumate d ON d.domain_id=o.domain_id 
    INNER JOIN sys_conf s ON s.conf_key= 'support_domain' 
    WHERE d.id=_uid
  INTO _domain, _domain_id, _org_name;



  SELECT map.hub_id, map.id
  FROM drumate d 
  INNER JOIN dmz_user ms ON ms.email = d.email
  INNER JOIN dmz_token map on map.guest_id =  ms.id   
  WHERE d.id =_uid AND map.is_sync = 1   LIMIT 1
  INTO  _dmz_hub_id, _dmz_token ;  

  SELECT 
    c.id AS session_id,
    e.id,
    e.id AS hub_id,
    IF(e.id NOT IN (_guest_id, _nobody_id) AND _connection !='otp', 1, 0) as signed_in,
    d.username AS ident,
    d.username as username,
    db_name,
    _dmz_hub_id dmz_hub_id,
    _dmz_token  dmz_token,
    IF(_dmz_hub_id IS NOT NULL , 'yes', 'no') is_dmz_hub_copy,
    _domain AS domain,
    _domain_id AS domain_id,
    _org_name AS org_name,
    home_dir,
    home_id,
    remit,
    lang,
    avatar,
    _connection AS `connection`,
    e.status,
    d.profile,
    e.mtime,
    e.settings,
    disk_usage(e.id) AS disk_usage,
    quota,
    _secret otp_key,
    COALESCE(c.guest_name, d.firstname) firstname,
    lastname,
    NULL mimicker,
    NULL mimic_id,
    'normal' mimic_type,
    NULL mimic_end_at, 
    IFNULL(JSON_value(d.profile, "$.profile_type"),'normal')  profile_type, 
    IF(JSON_VALUE(`profile`, "$.intro") IS NULL, 'yes', 'no')  intro,
    fullname,
    0 is_support
    FROM entity e INNER JOIN drumate d ON e.id=d.id 
      INNER JOIN cookie c ON d.id=c.uid 
      WHERE d.id=_uid AND c.id=_sid LIMIT 1;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_check_cookie_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_check_cookie_next`(
  IN _sid VARCHAR(90)  CHARACTER SET ascii,
  IN _ua MEDIUMTEXT
)
BEGIN
  DECLARE _syd_id int(11) unsigned DEFAULT NULL;
  DECLARE _new_sid VARCHAR(64) CHARACTER SET ascii  DEFAULT NULL;
  DECLARE _uid VARCHAR(16) CHARACTER SET ascii;



  DECLARE _domain VARCHAR(256);
  DECLARE _org_name VARCHAR(256);
  DECLARE _domain_id INTEGER;
  DECLARE _mimicker VARCHAR(64);
  DECLARE _mimic_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _mimic_type VARCHAR(30) default  'normal';
  DECLARE _mimic_entity JSON;
  DECLARE _subscription VARCHAR(30) default  'b2c';
  DECLARE _estimatetime INT(11);
  DECLARE _is_support INT DEFAULT 0 ;
  DECLARE _dmz_hub_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _dmz_token VARCHAR(100);

  DECLARE _entity_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _ntime INT(11); 
  DECLARE _etime INT(11); 
  DECLARE _is_active_subscription INT DEFAULT 0 ;
  DECLARE _is_free_subscription INT DEFAULT 0 ;
  DECLARE _plan VARCHAR(256) default  'hub'; 

  DECLARE _nobody VARCHAR(16)  CHARACTER SET ascii;
  SELECT utils.nobody_id() INTO _nobody;
  SELECT UNIX_TIMESTAMP() INTO _ntime;

  
  

  SELECT  `uid` FROM cookie WHERE id=_sid INTO  _uid; 
  IF _uid IS NULL THEN 
    SELECT SHA2(utils.uniqueId(), 256) INTO _new_sid;
    INSERT IGNORE INTO cookie (`id`,`uid`,`ctime`,`mtime`,`ua`, `status`)
    VALUES(_new_sid, _nobody, _ntime, _ntime, _ua, 'new');
  ELSE 
    UPDATE cookie SET ctime=_ntime, mtime=_ntime WHERE id=_sid;
  END IF;

  SELECT IFNULL(`uid`, _nobody) FROM cookie 
    WHERE id=IFNULL(_new_sid, _sid) INTO _uid;

  SELECT 'victim', mimicker, id,estimatetime 
    FROM mimic WHERE status = 'active' AND uid = _uid 
    INTO  _mimic_type , _mimicker, _mimic_id ,_estimatetime ;
  SELECT 'old', mimicker, id ,estimatetime 
    FROM mimic WHERE status = 'active' AND mimicker = _uid  
    INTO  _mimic_type , _mimicker, _mimic_id , _estimatetime;
  SELECT 'mimic', m.mimicker, m.id ,estimatetime 
    FROM mimic m
    INNER JOIN cookie c ON  m.uid = c.uid AND m.mimicker = c.mimicker 
    WHERE m.status ='active' AND  c.id = _sid AND c.uid = _uid 
    INTO _mimic_type ,_mimicker, _mimic_id, _estimatetime;

  
  IF _mimic_type = 'old' AND  _estimatetime + 10  <= _ntime  THEN  
    UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
    UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  _ntime)) WHERE id=_mimic_id;
    UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
    SELECT 'normal',NULL,NULL,NULL INTO _mimic_type, _mimicker, _mimic_id , _estimatetime ; 
  END IF;

    
  IF _mimic_type = 'victim'  AND  _estimatetime +10 <= _ntime  THEN  
    UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
    UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  _ntime)) WHERE id=_mimic_id;
    UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
    SELECT 'normal',NULL,NULL,NULL INTO _mimic_type, _mimicker, _mimic_id , _estimatetime ; 
  END IF;


  SELECT 'b2b','pro' FROM entity WHERE id=_uid  AND dom_id > 1   INTO _subscription,_plan;

  SELECT _uid INTO _entity_id;

  SELECT o.id
  FROM  yp.drumate d  
  INNER JOIN yp.organisation o ON o.domain_id= d.domain_id
  WHERE d.id =  _uid AND  d.domain_id > 1  INTO _entity_id; 
  
  

  SELECT o.link, o.domain_id, IF(s.conf_value=o.domain_id, 1, 0), o.name
    FROM organisation o 
    INNER JOIN drumate d ON d.domain_id=o.domain_id 
    INNER JOIN sys_conf s ON s.conf_key= 'support_domain' 
    WHERE d.id=_uid
  INTO _domain, _domain_id, _is_support, _org_name;




  SELECT 
    map.hub_id,map.id
  FROM drumate d 
  INNER JOIN dmz_user ms ON ms.email = d.email
  INNER JOIN dmz_token map on map.guest_id =  ms.id   
  WHERE d.id =_uid AND map.is_sync = 1   LIMIT 1
  INTO  _dmz_hub_id, _dmz_token ;  

  
  SELECT 
    c.id AS session_id,

    e.id,
    e.id AS hub_id,
    IF(e.id != _nobody AND c.status !='otp', 1, 0) as signed_in,
    d.username AS ident,
    d.username as username,
    
    
    
    db_name,
    _dmz_hub_id dmz_hub_id,
    _dmz_token  dmz_token,
    IF(_dmz_hub_id IS NOT NULL , 'yes', 'no') is_dmz_hub_copy,
    _domain AS domain,
    _domain_id AS domain_id,
    _org_name AS org_name,
    home_dir,
    home_id,
    remit,
    lang,
    avatar,
    c.status AS connection,
    e.status,
    d.profile,
    e.mtime,
    e.settings,
    disk_usage(e.id) AS disk_usage,
    quota,
    firstname,
    lastname,
    _subscription subscription,
    
    
    
    _mimicker mimicker,
    _mimic_id mimic_id,
    _mimic_type mimic_type,
    _estimatetime mimic_end_at, 
    IFNULL(JSON_value(d.profile, "$.profile_type"),'normal')  profile_type, 
    IF(JSON_VALUE(`profile`, "$.intro") IS NULL, 'yes', 'no')  intro,
    fullname,
    
    _is_support is_support
    FROM entity e INNER JOIN (drumate d, cookie c) ON e.id=d.id AND e.id=c.uid 
      WHERE d.id=_uid AND c.id=IFNULL(_new_sid, _sid) LIMIT 1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_check_cookie_next1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_check_cookie_next1`(
  IN _sid VARCHAR(90)  CHARACTER SET ascii,
  IN _ua MEDIUMTEXT
)
BEGIN
  DECLARE _syd_id int(11) unsigned DEFAULT NULL;
  DECLARE _new_sid VARCHAR(64) CHARACTER SET ascii  DEFAULT NULL  ;
  DECLARE _uid VARCHAR(16) CHARACTER SET ascii;



  DECLARE _domain VARCHAR(256);
  DECLARE _org_name VARCHAR(256);
  DECLARE _domain_id INTEGER;
  DECLARE _mimicker VARCHAR(64);
  DECLARE _mimic_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _mimic_type VARCHAR(30) default  'normal';
  DECLARE _mimic_entity JSON;
  DECLARE _subscription VARCHAR(30) default  'b2c';
  DECLARE _estimatetime INT(11);
  DECLARE _is_support INT DEFAULT 0 ;
  DECLARE _dmz_hub_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _dmz_token VARCHAR(100);

  DECLARE _entity_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _ntime INT(11); 
  DECLARE _etime INT(11); 
  DECLARE _is_active_subscription INT DEFAULT 0 ;
  DECLARE _is_free_subscription INT DEFAULT 0 ;
  DECLARE _plan VARCHAR(256) default  'hub'; 

  DECLARE _nobody VARCHAR(16)  CHARACTER SET ascii;
  SELECT utils.nobody_id() INTO _nobody;
  SELECT UNIX_TIMESTAMP() INTO _ntime;

  
  

  SELECT sys_id, `uid` FROM cookie WHERE id=_sid INTO _syd_id, _uid; 
  IF _syd_id IS NULL THEN 
    SELECT SHA2(utils.uniqueId(), 256) INTO _new_sid;
    INSERT IGNORE INTO cookie (`id`,`uid`,`ctime`,`mtime`,`ua`, `status`)
    VALUES(_new_sid, _nobody, _ntime, _ntime, _ua, 'new');
  ELSE 
    UPDATE cookie SET ctime=_ntime, mtime=_ntime WHERE sys_id=_syd_id;
  END IF;

  SELECT IFNULL(`uid`, _nobody) FROM cookie 
    WHERE id=IFNULL(_new_sid, _sid) INTO _uid;







  
  

  SELECT 'victim', mimicker, id,estimatetime 
    FROM mimic WHERE status = 'active' AND uid = _uid 
    INTO  _mimic_type , _mimicker, _mimic_id ,_estimatetime ;
  SELECT 'old', mimicker, id ,estimatetime 
    FROM mimic WHERE status = 'active' AND mimicker = _uid  
    INTO  _mimic_type , _mimicker, _mimic_id , _estimatetime;
  SELECT 'mimic', m.mimicker, m.id ,estimatetime 
    FROM mimic m
    INNER JOIN cookie c ON  m.uid = c.uid AND m.mimicker = c.mimicker 
    WHERE m.status ='active' AND  c.id = _sid AND c.uid = _uid 
    INTO _mimic_type ,_mimicker, _mimic_id, _estimatetime;

  
  IF _mimic_type = 'old' AND  _estimatetime + 10  <= _ntime  THEN  
    UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
    UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  _ntime)) WHERE id=_mimic_id;
    UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
    SELECT 'normal',NULL,NULL,NULL INTO _mimic_type, _mimicker, _mimic_id , _estimatetime ; 
  END IF;

    
  IF _mimic_type = 'victim'  AND  _estimatetime +10 <= _ntime  THEN  
    UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
    UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  _ntime)) WHERE id=_mimic_id;
    UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
    SELECT 'normal',NULL,NULL,NULL INTO _mimic_type, _mimicker, _mimic_id , _estimatetime ; 
  END IF;


  SELECT 'b2b','pro' FROM entity WHERE id=_uid  AND dom_id > 1   INTO _subscription,_plan;

  SELECT _uid INTO _entity_id;

  SELECT o.id
  FROM  yp.drumate d  
  INNER JOIN yp.organisation o ON o.domain_id= d.domain_id
  WHERE d.id =  _uid AND  d.domain_id > 1  INTO _entity_id; 
  
  SELECT max(etime) FROM  subscription WHERE entity_id = _entity_id INTO _etime; 

  SELECT  1   , CASE WHEN mode = 'free' THEN 1 ELSE 0 END 
    FROM subscription 
    WHERE   entity_id = _entity_id
    AND  _ntime >= stime AND etime >= _ntime
    INTO   _is_active_subscription ,_is_free_subscription;


  

  SELECT o.link, o.domain_id, IF(s.conf_value=o.domain_id, 1, 0), o.name
    FROM organisation o 
    INNER JOIN drumate d ON d.domain_id=o.domain_id 
    INNER JOIN sys_conf s ON s.conf_key= 'support_domain' 
    WHERE d.id=_uid
  INTO _domain, _domain_id, _is_support, _org_name;




  SELECT 
    map.hub_id,map.id
  FROM drumate d 
  INNER JOIN dmz_user ms ON ms.email = d.email
  INNER JOIN dmz_token map on map.guest_id =  ms.id   
  WHERE d.id =_uid AND map.is_sync = 1   LIMIT 1
  INTO  _dmz_hub_id, _dmz_token ;  

  
  SELECT DISTINCT
    c.id AS session_id,

    e.id,
    e.id AS hub_id,
    IF(e.id != _nobody AND c.status !='otp', 1, 0) as signed_in,
    d.username AS ident,
    d.username as username,
    
    
    
    db_name,
    _dmz_hub_id dmz_hub_id,
    _dmz_token  dmz_token,
    IF(_dmz_hub_id IS NOT NULL , 'yes', 'no') is_dmz_hub_copy,
    _domain AS domain,
    _domain_id AS domain_id,
    _org_name AS org_name,
    home_dir,
    home_id,
    remit,
    lang,
    avatar,
    c.status AS connection,
    e.status,
    d.profile,
    e.mtime,
    e.settings,
    disk_usage(e.id) AS disk_usage,
    quota,
    firstname,
    lastname,
    _subscription subscription,
    _is_active_subscription is_active_subscription, 
    _plan plan,
    _etime  subscription_etime,
    _mimicker mimicker,
    _mimic_id mimic_id,
    _mimic_type mimic_type,
    _estimatetime mimic_end_at, 
    IFNULL(JSON_value(d.profile, "$.profile_type"),'normal')  profile_type, 
    IF(JSON_VALUE(`profile`, "$.intro") IS NULL, 'yes', 'no')  intro,
    fullname,
    
    _is_support is_support
    FROM entity e INNER JOIN (drumate d, cookie c) ON e.id=d.id AND e.id=c.uid 
      WHERE d.id=_uid AND c.id=IFNULL(_new_sid, _sid) LIMIT 1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_check_cookie_nextx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_check_cookie_nextx`(
  IN _sid VARCHAR(90)  CHARACTER SET ascii,
  IN _ua MEDIUMTEXT
)
BEGIN
  DECLARE _syd_id int(11) unsigned DEFAULT NULL;
  DECLARE _new_sid VARCHAR(64) CHARACTER SET ascii  DEFAULT NULL;
  DECLARE _uid VARCHAR(16) CHARACTER SET ascii;



  DECLARE _domain VARCHAR(256);
  DECLARE _org_name VARCHAR(256);
  DECLARE _domain_id INTEGER;
  DECLARE _mimicker VARCHAR(64);
  DECLARE _mimic_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _mimic_type VARCHAR(30) default  'normal';
  DECLARE _mimic_entity JSON;
  DECLARE _subscription VARCHAR(30) default  'b2c';
  DECLARE _estimatetime INT(11);
  DECLARE _is_support INT DEFAULT 0 ;
  DECLARE _dmz_hub_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _dmz_token VARCHAR(100);

  DECLARE _entity_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _ntime INT(11); 
  DECLARE _etime INT(11); 
  DECLARE _is_active_subscription INT DEFAULT 0 ;
  DECLARE _is_free_subscription INT DEFAULT 0 ;
  DECLARE _plan VARCHAR(256) default  'hub'; 

  DECLARE _nobody VARCHAR(16)  CHARACTER SET ascii;
  SELECT utils.nobody_id() INTO _nobody;
  SELECT UNIX_TIMESTAMP() INTO _ntime;

  
  

  SELECT sys_id, `uid` FROM cookie WHERE id=_sid INTO _syd_id, _uid; 
  IF _syd_id IS NULL THEN 
    SELECT SHA2(utils.uniqueId(), 256) INTO _new_sid;
    INSERT IGNORE INTO cookie (`id`,`uid`,`ctime`,`mtime`,`ua`, `status`)
    VALUES(_new_sid, _nobody, _ntime, _ntime, _ua, 'new');
  ELSE 
    UPDATE cookie SET ctime=_ntime, mtime=_ntime WHERE sys_id=_syd_id;
  END IF;

  SELECT IFNULL(`uid`, _nobody) FROM cookie 
    WHERE id=IFNULL(_new_sid, _sid) INTO _uid;







  
  

  SELECT 'victim', mimicker, id,estimatetime 
    FROM mimic WHERE status = 'active' AND uid = _uid 
    INTO  _mimic_type , _mimicker, _mimic_id ,_estimatetime ;
  SELECT 'old', mimicker, id ,estimatetime 
    FROM mimic WHERE status = 'active' AND mimicker = _uid  
    INTO  _mimic_type , _mimicker, _mimic_id , _estimatetime;
  SELECT 'mimic', m.mimicker, m.id ,estimatetime 
    FROM mimic m
    INNER JOIN cookie c ON  m.uid = c.uid AND m.mimicker = c.mimicker 
    WHERE m.status ='active' AND  c.id = _sid AND c.uid = _uid 
    INTO _mimic_type ,_mimicker, _mimic_id, _estimatetime;

  
  IF _mimic_type = 'old' AND  _estimatetime + 10  <= _ntime  THEN  
    UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
    UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  _ntime)) WHERE id=_mimic_id;
    UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
    SELECT 'normal',NULL,NULL,NULL INTO _mimic_type, _mimicker, _mimic_id , _estimatetime ; 
  END IF;

    
  IF _mimic_type = 'victim'  AND  _estimatetime +10 <= _ntime  THEN  
    UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
    UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  _ntime)) WHERE id=_mimic_id;
    UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
    SELECT 'normal',NULL,NULL,NULL INTO _mimic_type, _mimicker, _mimic_id , _estimatetime ; 
  END IF;


  SELECT 'b2b','pro' FROM entity WHERE id=_uid  AND dom_id > 1   INTO _subscription,_plan;

  SELECT _uid INTO _entity_id;

  SELECT o.id
  FROM  yp.drumate d  
  INNER JOIN yp.organisation o ON o.domain_id= d.domain_id
  WHERE d.id =  _uid AND  d.domain_id > 1  INTO _entity_id; 
  
  SELECT max(etime) FROM  subscription WHERE entity_id = _entity_id INTO _etime; 

  SELECT  1   , CASE WHEN mode = 'free' THEN 1 ELSE 0 END 
    FROM subscription 
    WHERE   entity_id = _entity_id
    AND  _ntime >= stime AND etime >= _ntime limit 1
    INTO   _is_active_subscription ,_is_free_subscription;


  

  SELECT o.link, o.domain_id, IF(s.conf_value=o.domain_id, 1, 0), o.name
    FROM organisation o 
    INNER JOIN drumate d ON d.domain_id=o.domain_id 
    INNER JOIN sys_conf s ON s.conf_key= 'support_domain' 
    WHERE d.id=_uid
  INTO _domain, _domain_id, _is_support, _org_name;




  SELECT 
    map.hub_id,map.id
  FROM drumate d 
  INNER JOIN dmz_user ms ON ms.email = d.email
  INNER JOIN dmz_token map on map.guest_id =  ms.id   
  WHERE d.id =_uid AND map.is_sync = 1   LIMIT 1
  INTO  _dmz_hub_id, _dmz_token ;  

  
  SELECT 
    c.id AS session_id,

    e.id,
    e.id AS hub_id,
    IF(e.id != _nobody AND c.status !='otp', 1, 0) as signed_in,
    d.username AS ident,
    d.username as username,
    
    
    
    db_name,
    _dmz_hub_id dmz_hub_id,
    _dmz_token  dmz_token,
    IF(_dmz_hub_id IS NOT NULL , 'yes', 'no') is_dmz_hub_copy,
    _domain AS domain,
    _domain_id AS domain_id,
    _org_name AS org_name,
    home_dir,
    home_id,
    remit,
    lang,
    avatar,
    c.status AS connection,
    e.status,
    d.profile,
    e.mtime,
    e.settings,
    disk_usage(e.id) AS disk_usage,
    quota,
    firstname,
    lastname,
    _subscription subscription,
    _is_active_subscription is_active_subscription, 
    _plan plan,
    _etime  subscription_etime,
    _mimicker mimicker,
    _mimic_id mimic_id,
    _mimic_type mimic_type,
    _estimatetime mimic_end_at, 
    IFNULL(JSON_value(d.profile, "$.profile_type"),'normal')  profile_type, 
    IF(JSON_VALUE(`profile`, "$.intro") IS NULL, 'yes', 'no')  intro,
    fullname,
    
    _is_support is_support
    FROM entity e INNER JOIN (drumate d, cookie c) ON e.id=d.id AND e.id=c.uid 
      WHERE d.id=_uid AND c.id=IFNULL(_new_sid, _sid) LIMIT 1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_check_cookie_nextxxx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_check_cookie_nextxxx`(
  IN _sid VARCHAR(90)  CHARACTER SET ascii,
  IN _ua MEDIUMTEXT
)
BEGIN
  DECLARE _syd_id int(11) unsigned DEFAULT NULL;
  DECLARE _new_sid VARCHAR(64) CHARACTER SET ascii  DEFAULT NULL;
  DECLARE _uid VARCHAR(16) CHARACTER SET ascii;



  DECLARE _domain VARCHAR(256);
  DECLARE _org_name VARCHAR(256);
  DECLARE _domain_id INTEGER;
  DECLARE _mimicker VARCHAR(64);
  DECLARE _mimic_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _mimic_type VARCHAR(30) default  'normal';
  DECLARE _mimic_entity JSON;
  DECLARE _subscription VARCHAR(30) default  'b2c';
  DECLARE _estimatetime INT(11);
  DECLARE _is_support INT DEFAULT 0 ;
  DECLARE _dmz_hub_id VARCHAR(16)  CHARACTER SET ascii;
  DECLARE _dmz_token VARCHAR(100);

  DECLARE _entity_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _ntime INT(11); 
  DECLARE _etime INT(11); 
  DECLARE _is_active_subscription INT DEFAULT 0 ;
  DECLARE _is_free_subscription INT DEFAULT 0 ;
  DECLARE _plan VARCHAR(256) default  'hub'; 

  DECLARE _nobody VARCHAR(16)  CHARACTER SET ascii;
  SELECT utils.nobody_id() INTO _nobody;
  SELECT UNIX_TIMESTAMP() INTO _ntime;

  
  

  SELECT sys_id, `uid` FROM cookie WHERE id=_sid INTO _syd_id, _uid; 
  IF _syd_id IS NULL THEN 
    SELECT SHA2(utils.uniqueId(), 256) INTO _new_sid;
    INSERT IGNORE INTO cookie (`id`,`uid`,`ctime`,`mtime`,`ua`, `status`)
    VALUES(_new_sid, _nobody, _ntime, _ntime, _ua, 'new');
  ELSE 
    UPDATE cookie SET ctime=_ntime, mtime=_ntime WHERE sys_id=_syd_id;
  END IF;

  SELECT IFNULL(`uid`, _nobody) FROM cookie 
    WHERE id=IFNULL(_new_sid, _sid) INTO _uid;







  
  

  SELECT 'victim', mimicker, id,estimatetime 
    FROM mimic WHERE status = 'active' AND uid = _uid 
    INTO  _mimic_type , _mimicker, _mimic_id ,_estimatetime ;
  SELECT 'old', mimicker, id ,estimatetime 
    FROM mimic WHERE status = 'active' AND mimicker = _uid  
    INTO  _mimic_type , _mimicker, _mimic_id , _estimatetime;
  SELECT 'mimic', m.mimicker, m.id ,estimatetime 
    FROM mimic m
    INNER JOIN cookie c ON  m.uid = c.uid AND m.mimicker = c.mimicker 
    WHERE m.status ='active' AND  c.id = _sid AND c.uid = _uid 
    INTO _mimic_type ,_mimicker, _mimic_id, _estimatetime;

  
  IF _mimic_type = 'old' AND  _estimatetime + 10  <= _ntime  THEN  
    UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
    UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  _ntime)) WHERE id=_mimic_id;
    UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
    SELECT 'normal',NULL,NULL,NULL INTO _mimic_type, _mimicker, _mimic_id , _estimatetime ; 
  END IF;

    
  IF _mimic_type = 'victim'  AND  _estimatetime +10 <= _ntime  THEN  
    UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
    UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  _ntime)) WHERE id=_mimic_id;
    UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
    SELECT 'normal',NULL,NULL,NULL INTO _mimic_type, _mimicker, _mimic_id , _estimatetime ; 
  END IF;


  SELECT 'b2b','pro' FROM entity WHERE id=_uid  AND dom_id > 1   INTO _subscription,_plan;

  SELECT _uid INTO _entity_id;

  SELECT o.id
  FROM  yp.drumate d  
  INNER JOIN yp.organisation o ON o.domain_id= d.domain_id
  WHERE d.id =  _uid AND  d.domain_id > 1  INTO _entity_id; 
  
  SELECT max(etime) FROM  subscription WHERE entity_id = _entity_id INTO _etime; 

  SELECT  1   , CASE WHEN mode = 'free' THEN 1 ELSE 0 END 
    FROM subscription 
    WHERE   entity_id = _entity_id
    AND  _ntime >= stime AND etime >= _ntime
    INTO   _is_active_subscription ,_is_free_subscription;


  

  SELECT o.link, o.domain_id, IF(s.conf_value=o.domain_id, 1, 0), o.name
    FROM organisation o 
    INNER JOIN drumate d ON d.domain_id=o.domain_id 
    INNER JOIN sys_conf s ON s.conf_key= 'support_domain' 
    WHERE d.id=_uid
  INTO _domain, _domain_id, _is_support, _org_name;




  SELECT 
    map.hub_id,map.id
  FROM drumate d 
  INNER JOIN dmz_user ms ON ms.email = d.email
  INNER JOIN dmz_token map on map.guest_id =  ms.id   
  WHERE d.id =_uid AND map.is_sync = 1   LIMIT 1
  INTO  _dmz_hub_id, _dmz_token ;  

  
  SELECT 
    c.id AS session_id,

    e.id,
    e.id AS hub_id,
    IF(e.id != _nobody AND c.status !='otp', 1, 0) as signed_in,
    d.username AS ident,
    d.username as username,
    
    
    
    db_name,
    _dmz_hub_id dmz_hub_id,
    _dmz_token  dmz_token,
    IF(_dmz_hub_id IS NOT NULL , 'yes', 'no') is_dmz_hub_copy,
    _domain AS domain,
    _domain_id AS domain_id,
    _org_name AS org_name,
    home_dir,
    home_id,
    remit,
    lang,
    avatar,
    c.status AS connection,
    e.status,
    d.profile,
    e.mtime,
    e.settings,
    disk_usage(e.id) AS disk_usage,
    quota,
d.quota drumateq,
    firstname,
    lastname,
    _subscription subscription,
    _is_active_subscription is_active_subscription, 
    _plan plan,
    _etime  subscription_etime,
    _mimicker mimicker,
    _mimic_id mimic_id,
    _mimic_type mimic_type,
    _estimatetime mimic_end_at, 
    IFNULL(JSON_value(d.profile, "$.profile_type"),'normal')  profile_type, 
    IF(JSON_VALUE(`profile`, "$.intro") IS NULL, 'yes', 'no')  intro,
    fullname,
    
    _is_support is_support
    FROM entity e INNER JOIN (drumate d, cookie c) ON e.id=d.id AND e.id=c.uid 
      WHERE d.id=_uid AND c.id=IFNULL(_new_sid, _sid) LIMIT 1;

select _uid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_check_cookie_next_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_check_cookie_next_next`(
  IN _sid VARCHAR(64),
  IN _host VARCHAR(512),
  IN _ua VARCHAR(255)
)
BEGIN
  DECLARE _syd_id int(11) unsigned DEFAULT NULL;
  DECLARE _new_sid VARCHAR(64) DEFAULT NULL;
  DECLARE _uid VARCHAR(16);
  DECLARE _sb_id VARCHAR(16);
  DECLARE _sb_db VARCHAR(50);
  DECLARE _sb_root VARCHAR(16);
  DECLARE _domain VARCHAR(256);
  DECLARE _mimicker VARCHAR(64);
  DECLARE _mimic_id VARCHAR(16);
  DECLARE _mimic_type VARCHAR(30) default  'normal';
  DECLARE _mimic_entity JSON;

  SELECT sys_id, `uid` FROM cookie WHERE id=_sid INTO _syd_id, _uid; 
  IF _syd_id IS NULL THEN 
    SELECT CONCAT(utils.uniqueId(), 
      utils.uniqueId(), 
      utils.uniqueId(), 
      utils.uniqueId()
    ) INTO _new_sid;
    INSERT INTO cookie (`id`,`uid`,`ctime`,`mtime`,`ua`, `status`)
    VALUES(_new_sid, utils.nobody_id(), UNIX_TIMESTAMP(), UNIX_TIMESTAMP(), _ua, 'new');
  ELSE 
    UPDATE cookie SET ctime=UNIX_TIMESTAMP(), mtime=UNIX_TIMESTAMP() WHERE sys_id=_syd_id;
  END IF;
  SELECT IFNULL(`uid`, utils.nobody_id()) FROM cookie WHERE id=IFNULL(_new_sid, _sid) INTO _uid;
  SELECT s.id, e.db_name, root_id FROM share_box s LEFT JOIN(entity e) ON e.id=s.id 
    WHERE owner_id=_uid INTO _sb_id, _sb_db, _sb_root;
  SELECT d.name FROM vhost INNER JOIN domain d ON d.id=vhost.dom_id WHERE fqdn=_host INTO _domain;

  SELECT 'victim' ,mimicker, id FROM mimic WHERE status = 'active' AND uid = _uid INTO  _mimic_type , _mimicker, _mimic_id ;
  SELECT 'old', mimicker, id  FROM mimic WHERE status = 'active' AND mimicker = _uid  INTO  _mimic_type , _mimicker, _mimic_id;
  SELECT 'mimc', m.mimicker, m.id  FROM mimic m
  INNER JOIN cookie c ON  m.uid = c.uid AND m.mimicker = c.mimicker 
  WHERE   m.status ='active' AND  c.id = _sid AND c.uid = _uid   INTO _mimic_type ,_mimicker, _mimic_id;

  
    IF _mimic_type = 'old' THEN 
      UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
      UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT(_option,  UNIX_TIMESTAMP())) WHERE id=_mimic_id;
      UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
      SELECT 'normal' INTO _mimic_type ; 
    END IF;


  SELECT 
    c.id AS session_id,
    e.id,
    e.ident,
    e.ident as username,
    _sb_id AS sb_id,
    _sb_db AS sb_db,
    _sb_root AS sb_root,
    db_name,
    home_dir,
    remit,
    IFNULL(_domain, utils.domain_name()) as domain,
    lang,
    avatar,
    c.status AS connection,
    e.status,
    d.profile,
    e.mtime,
    e.settings,
    disk_usage(e.id) AS disk_usage,
    quota,
    firstname,
    lastname,
    mimicker,
    _mimic_id mimic_id,
    _mimic_type mimc_type,
    fullname
    FROM entity e INNER JOIN (drumate d, cookie c) ON e.id=d.id AND e.id=c.uid 
      WHERE d.id=_uid AND c.id=IFNULL(_new_sid, _sid);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_dmz_check_cookie_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_dmz_check_cookie_next`(
 IN _share_id VARCHAR(50),
 IN _sid varchar(64),
 IN _hub_id varchar(16),
 IN _recipient_id  varchar(16)
)
BEGIN
  DECLARE _is_verified INT(4) DEFAULT 0;
  DECLARE _is_valid INT(4) DEFAULT 0;


  SELECT 1,hub_id FROM share WHERE id = _share_id  
    INTO _is_valid, _hub_id ;
  IF _is_valid = 1 THEN  
    SELECT  is_verified FROM cookie_share WHERE id = _sid AND share_id=_share_id AND recipient_id = _recipient_id
    
    INTO  _is_verified;
    INSERT INTO cookie_share(sys_id, id,share_id,hub_id,recipient_id)
    SELECT NULL, _sid,_share_id,_hub_id,_recipient_id
    ON DUPLICATE KEY UPDATE is_verified =_is_verified ; 
    SELECT * FROM cookie_share WHERE id = _sid  AND hub_id = _hub_id;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_dmz_get_cookie` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_dmz_get_cookie`(
 IN _sid varchar(64),
 IN _hub_id varchar(16)  
)
BEGIN
 
  DECLARE _share_id VARCHAR(50);
  DECLARE _db VARCHAR(500);

   SELECT 
       share_id,s.hub_id
    FROM 
    cookie_share cs
    INNER JOIN share s  ON s.id = cs.share_id AND cs.hub_id = s.hub_id
    WHERE cs.id = _sid AND  cs.hub_id = _hub_id INTO _share_id,_hub_id ;


    SELECT db_name FROM entity WHERE id = _hub_id INTO _db;

    SET @st = CONCAT('CALL ', _db ,'.dmz_show_link_content(?,?)');
    PREPARE stamt FROM @st;
    EXECUTE stamt USING _share_id, _sid;
    DEALLOCATE PREPARE stamt; 
   

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_dmz_login` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_dmz_login`(
  IN _token      VARCHAR(64),
  IN _pw         VARCHAR(128),
  IN _socket_id varchar(64)
)
BEGIN
  DECLARE _drumate_name VARCHAR(120) DEFAULT NULL;
  DECLARE _guest_name VARCHAR(120) DEFAULT NULL;
  SELECT firstname FROM socket s INNER JOIN 
    drumate d ON d.id=s.uid where s.id=_socket_id and d.id!='ffffffffffffffff' LIMIT 1
  INTO _drumate_name; 
  SELECT c.guest_name FROM cookie c INNER JOIN 
    socket s ON s.cookie = c.id WHERE s.id=_socket_id 
  ORDER BY LENGTH(c.id) ASC LIMIT 1 INTO _guest_name;
  SELECT 
    u.id id,
    u.id guest_id,
    u.email,
    COALESCE(_drumate_name, _guest_name) AS guest_name,
    t.id token,
    t.is_sync,
    t.notify_at
    FROM dmz_user u 
    INNER JOIN dmz_token t ON t.guest_id = u.id
    WHERE t.id = _token AND
    (fingerprint=sha2(_pw, 512) OR fingerprint IS NULL)

    UNION 
  SELECT 
    u.id id,
    u.id guest_id,
    u.id email,
    COALESCE(_drumate_name, _guest_name) AS guest_name,
    t.id token,
    t.is_sync,
    t.notify_at
    FROM dmz_media u 
    INNER JOIN dmz_token t ON t.guest_id = u.id
    WHERE t.id = _token AND
    (fingerprint=sha2(_pw, 512) OR fingerprint IS NULL);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_dmz_loginx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_dmz_loginx`(
  IN _hub_id     VARCHAR(16), 
  IN _guest_id     VARCHAR(16), 
  IN _token      VARCHAR(64),
  IN _pw         VARCHAR(128) 
)
BEGIN
  SELECT * FROM dmz_userx WHERE 
    token = _token AND id = _guest_id AND hub_id=_hub_id AND
    (fingerprint=sha2(_pw, 512) OR fingerprint IS NULL);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_dmz_login_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_dmz_login_next`(
  IN _token      VARCHAR(64),
  IN _pw         VARCHAR(128) 
)
BEGIN
  SELECT 
    u.id id,
    u.id guest_id,
    u.email,
    u.name,
    t.id token,
    t.is_sync,
    t.notify_at
    FROM dmz_user u 
    INNER JOIN dmz_token t ON t.guest_id = u.id
    WHERE t.id = _token AND
    (fingerprint=sha2(_pw, 512) OR fingerprint IS NULL)

    UNION 
  SELECT 
    u.id id,
    u.id guest_id,
    u.id email,
    u.name,
    t.id token,
    t.is_sync,
    t.notify_at
    FROM dmz_media u 
    INNER JOIN dmz_token t ON t.guest_id = u.id
    WHERE t.id = _token AND
    (fingerprint=sha2(_pw, 512) OR fingerprint IS NULL);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_login` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_login`(
  IN _key VARCHAR(128),
  IN _pw VARCHAR(128),
  IN _cid VARCHAR(64),
  IN _domain_name VARCHAR(1000)
)
BEGIN
  DECLARE _uid VARCHAR(16) DEFAULT NULL;
  DECLARE _profile JSON DEFAULT "{}";
  DECLARE _sid VARCHAR(64);
  DECLARE _otp VARCHAR(64);
  DECLARE _db_name VARCHAR(52) DEFAULT '0';


  DECLARE _mimicker VARCHAR(64);
  DECLARE _mimic_id VARCHAR(16);
  DECLARE _mimic_type VARCHAR(30) default  'normal';
  DECLARE _mimic_entity JSON;

  DECLARE _secret VARCHAR(500);
  DECLARE _email VARCHAR(500);
  DECLARE _dom_id INT(8);

  SELECT IFNULL(domain_id,1) FROM `organisation` 
    WHERE link = _domain_name OR domain_id = _domain_name
    INTO _dom_id;

  
  
  
  
  
  
  

  SELECT e.id, `profile`, db_name, d.email, o.link FROM drumate d 
    INNER JOIN entity e ON e.id=d.id  
    LEFT JOIN organisation o on o.domain_id=e.dom_id
    WHERE fingerprint=sha2(_pw, 512) AND (d.username=_key OR e.id=_key OR email=_key)
      AND o.link = _domain_name
      INTO _uid, _profile, _db_name, _email, _domain_name;

  SELECT secret FROM token WHERE email = _email AND method = 'signup' INTO _secret;

  IF _uid IS NULL THEN 
    UPDATE cookie SET failed=failed+1, `status`='wrong_credentials' WHERE id=_cid;
    SELECT failed, `status` FROM cookie WHERE id=_cid;
  ELSE
    SELECT id FROM cookie WHERE id=_cid INTO _sid;
    IF _sid IS NULL THEN 
      SELECT 'no_cookie' AS status;
    ELSE
    
      SELECT 'victim' ,mimicker, id FROM mimic WHERE status = 'active' AND uid = _uid INTO  _mimic_type , _mimicker, _mimic_id ;
      SELECT 'old', mimicker, id  FROM mimic WHERE status = 'active' AND mimicker = _uid  INTO  _mimic_type , _mimicker, _mimic_id;
      SELECT 'mimc', m.mimicker, m.id  FROM mimic m
      INNER JOIN cookie c ON  m.uid = c.uid AND m.mimicker = c.mimicker 
      WHERE   m.status ='active' AND  c.id = _sid AND c.uid = _uid   INTO _mimic_type ,_mimicker, _mimic_id;

  
      IF _mimic_type = 'old' THEN 
        UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
        UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  UNIX_TIMESTAMP())) WHERE id=_mimic_id;
        UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
        SELECT 'normal' INTO _mimic_type; 
      END IF;
 
      SELECT JSON_VALUE(_profile, "$.otp") INTO _otp;
      UPDATE cookie SET 
        failed=0, 
        mtime=UNIX_TIMESTAMP(), 
        
        `uid` = _uid, 
        status = CASE WHEN IFNULL(_otp, 'ok') = 'sms' THEN 'otp' ELSE 'ok' END, 
        ttl = IFNULL(JSON_VALUE(_profile, "$.session_ttl"), 86400)
      WHERE id=_cid;
      SELECT
        c.id AS session_id,
        e.id,
        d.username AS ident,
        d.username,
        _domain_name AS domain,
        _dom_id AS domain_id,
        db_name,
        db_host,
        fs_host,
        vhost,
        home_dir,
        home_id,
        c.status,
        email,
        dmail,
        firstname,
        lastname,
         mimicker,
        _mimic_id mimic_id,
        _mimic_type mimc_type,
        area,
        area_id as aid,
        e.status AS `condition`,
        e.mtime,
        e.ctime,
        concat(firstname, ' ', lastname) as fullname,
        `profile`  ,
        _secret `secret`
      FROM entity e INNER JOIN (drumate d, cookie c) ON e.id=d.id AND e.id=c.uid 
        WHERE d.id=_uid AND c.id=_cid;
    END IF;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_login1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_login1`(
  IN _key VARCHAR(128),
  IN _pw VARCHAR(128),
  IN _cid VARCHAR(64),
  IN _domain_name VARCHAR(1000)
)
BEGIN
  DECLARE _uid VARCHAR(16) DEFAULT NULL;
  DECLARE _profile JSON DEFAULT "{}";
  DECLARE _sid VARCHAR(64);
  DECLARE _otp VARCHAR(64);
  DECLARE _db_name VARCHAR(52) DEFAULT '0';


  DECLARE _mimicker VARCHAR(64);
  DECLARE _mimic_id VARCHAR(16);
  DECLARE _mimic_type VARCHAR(30) default  'normal';
  DECLARE _mimic_entity JSON;

  DECLARE _secret VARCHAR(500);
  DECLARE _email VARCHAR(500);
  DECLARE _dom_id INT(8);

  SELECT IFNULL(domain_id,1) FROM `organisation` 
    WHERE link = _domain_name OR domain_id = _domain_name
    INTO _dom_id;

  
  
  
  
  
  
  

  SELECT e.id, `profile`, db_name, d.email, o.link FROM drumate d 
    INNER JOIN entity e ON e.id=d.id  
    LEFT JOIN organisation o on o.domain_id=e.dom_id
    WHERE fingerprint=sha2(_pw, 512) AND (d.username=_key OR e.id=_key OR email=_key)
      AND o.link = _domain_name
      INTO _uid, _profile, _db_name, _email, _domain_name;

  SELECT secret FROM token WHERE email = _email AND method = 'signup' INTO _secret;

  IF _uid IS NULL THEN 
    UPDATE cookie SET failed=failed+1, `status`='wrong_credentials' WHERE id=_cid;
    SELECT failed, `status` FROM cookie WHERE id=_cid;
  ELSE
    SELECT id FROM cookie WHERE id=_cid INTO _sid;
    IF _sid IS NULL THEN 
      SELECT 'no_cookie' AS status;
    ELSE
    
      SELECT 'victim' ,mimicker, id FROM mimic WHERE status = 'active' AND uid = _uid INTO  _mimic_type , _mimicker, _mimic_id ;
      SELECT 'old', mimicker, id  FROM mimic WHERE status = 'active' AND mimicker = _uid  INTO  _mimic_type , _mimicker, _mimic_id;
      SELECT 'mimc', m.mimicker, m.id  FROM mimic m
      INNER JOIN cookie c ON  m.uid = c.uid AND m.mimicker = c.mimicker 
      WHERE   m.status ='active' AND  c.id = _sid AND c.uid = _uid   INTO _mimic_type ,_mimicker, _mimic_id;

  
      IF _mimic_type = 'old' THEN 
        UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
        UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  UNIX_TIMESTAMP())) WHERE id=_mimic_id;
        UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
        SELECT 'normal' INTO _mimic_type; 
      END IF;
 
      SELECT JSON_VALUE(_profile, "$.otp") INTO _otp;
      UPDATE cookie SET 
        failed=0, 
        mtime=UNIX_TIMESTAMP(), 
        
        `uid` = _uid, 
        status = CASE WHEN IFNULL(_otp, 'ok') = 'sms' THEN 'otp' ELSE 'ok' END, 
        ttl = IFNULL(JSON_VALUE(_profile, "$.session_ttl"), 86400)
      WHERE id=_cid;
      SELECT
        c.id AS session_id,
        e.id,
        d.username AS ident,
        d.username,
        _domain_name AS domain,
        _dom_id AS domain_id,
        db_name,
        db_host,
        fs_host,
        vhost,
        home_dir,
        home_id,
        c.status,
        email,
        dmail,
        firstname,
        lastname,
         mimicker,
        _mimic_id mimic_id,
        _mimic_type mimc_type,
        area,
        area_id as aid,
        e.status AS `condition`,
        e.mtime,
        e.ctime,
        concat(firstname, ' ', lastname) as fullname,
        `profile`  ,
        _secret `secret`
      FROM entity e INNER JOIN (drumate d, cookie c) ON e.id=d.id AND e.id=c.uid 
        WHERE d.id=_uid AND c.id=_cid;
    END IF;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_loginxxx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_loginxxx`(
  IN _key VARCHAR(128),
  IN _pw VARCHAR(128),
  IN _cid VARCHAR(64),
  IN _domain_name VARCHAR(1000)
)
BEGIN
  DECLARE _uid VARCHAR(16) DEFAULT NULL;
  DECLARE _profile JSON DEFAULT "{}";
  DECLARE _sid VARCHAR(64);
  DECLARE _otp VARCHAR(64);
  DECLARE _db_name VARCHAR(52) DEFAULT '0';


  DECLARE _mimicker VARCHAR(64);
  DECLARE _mimic_id VARCHAR(16);
  DECLARE _mimic_type VARCHAR(30) default  'normal';
  DECLARE _mimic_entity JSON;

  DECLARE _secret VARCHAR(500);
  DECLARE _email VARCHAR(500);
  DECLARE _dom_id INT(8);

  SELECT IFNULL(domain_id,1) FROM `organisation` 
    WHERE link = _domain_name OR domain_id = _domain_name
    INTO _dom_id;


select _dom_id;
  
  
  
  
  
  
  

  SELECT e.id, `profile`, db_name, d.email, o.link FROM drumate d 
    INNER JOIN entity e ON e.id=d.id  
    LEFT JOIN organisation o on o.domain_id=e.dom_id
    WHERE fingerprint=sha2(_pw, 512) AND (d.username=_key OR e.id=_key OR email=_key)
      AND o.link = _domain_name
      INTO _uid, _profile, _db_name, _email, _domain_name;

select _uid, _profile, _db_name, _email, _domain_name;
  SELECT secret FROM token WHERE email = _email AND method = 'signup' INTO _secret;

  IF _uid IS NULL THEN 
    UPDATE cookie SET failed=failed+1, `status`='wrong_credentials' WHERE id=_cid;
    SELECT failed, `status` FROM cookie WHERE id=_cid;
  ELSE
    SELECT id FROM cookie WHERE id=_cid INTO _sid;
    IF _sid IS NULL THEN 
      SELECT 'no_cookie' AS status;
    ELSE
    
      SELECT 'victim' ,mimicker, id FROM mimic WHERE status = 'active' AND uid = _uid INTO  _mimic_type , _mimicker, _mimic_id ;
      SELECT 'old', mimicker, id  FROM mimic WHERE status = 'active' AND mimicker = _uid  INTO  _mimic_type , _mimicker, _mimic_id;
      SELECT 'mimc', m.mimicker, m.id  FROM mimic m
      INNER JOIN cookie c ON  m.uid = c.uid AND m.mimicker = c.mimicker 
      WHERE   m.status ='active' AND  c.id = _sid AND c.uid = _uid   INTO _mimic_type ,_mimicker, _mimic_id;

  
      IF _mimic_type = 'old' THEN 
        UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
        UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  UNIX_TIMESTAMP())) WHERE id=_mimic_id;
        UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
        SELECT 'normal' INTO _mimic_type; 
      END IF;
 
      SELECT JSON_VALUE(_profile, "$.otp") INTO _otp;
      UPDATE cookie SET 
        failed=0, 
        mtime=UNIX_TIMESTAMP(), 
        
        `uid` = _uid, 
        status = CASE WHEN IFNULL(_otp, 'ok') = 'sms' THEN 'otp' ELSE 'ok' END, 
        ttl = IFNULL(JSON_VALUE(_profile, "$.session_ttl"), 86400)
      WHERE id=_cid;
      SELECT
        c.id AS session_id,
        e.id,
        d.username AS ident,
        d.username,
        _domain_name AS domain,
        _dom_id AS domain_id,
        db_name,
        db_host,
        fs_host,
        vhost,
        home_dir,
        home_id,
        c.status,
        email,
        dmail,
        firstname,
        lastname,
         mimicker,
        _mimic_id mimic_id,
        _mimic_type mimc_type,
        area,
        area_id as aid,
        e.status AS `condition`,
        e.mtime,
        e.ctime,
        concat(firstname, ' ', lastname) as fullname,
        `profile`  ,
        _secret `secret`
      FROM entity e INNER JOIN (drumate d, cookie c) ON e.id=d.id AND e.id=c.uid 
        WHERE d.id=_uid AND c.id=_cid;
    END IF;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_login_b2b` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_login_b2b`(
  IN _key VARCHAR(128),
  IN _secret varchar(255),
  IN _cid VARCHAR(64)
)
BEGIN
  DECLARE _uid VARCHAR(16) DEFAULT NULL;
  DECLARE _profile JSON DEFAULT "{}";
  DECLARE _sid VARCHAR(64);
  DECLARE _otp VARCHAR(64);
  DECLARE _db_name VARCHAR(52) DEFAULT '0';
  DECLARE _c VARCHAR(11);
  DECLARE _status VARCHAR(64) DEFAULT 'missed';

   DELETE FROM otp WHERE UNIX_TIMESTAMP() - ctime > 60*10;

   SELECT entity.id, `profile`, db_name FROM entity JOIN drumate USING(id)
   WHERE (id=_key OR email=_key)
   INTO _uid, _profile, _db_name;

    SELECT 'failed' INTO  _c;
    SELECT  '9999'  from  yp.token WHERE   
    secret = _secret AND JSON_VALUE(metadata, '$.uid') = _key  INTO  _c;
  

    
    
  
    SELECT id FROM cookie WHERE  id=_cid INTO _sid;

    IF _c != "failed" AND _sid IS NOT NULL THEN
      UPDATE cookie SET  uid = _uid ,  failed=0, `status` = 'ok' WHERE id=_cid;
      SELECT 'success' INTO _status; 
    END IF ;     

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_login_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_login_next`(
  IN _key VARCHAR(128),
  IN _pw VARCHAR(128),
  IN _cid VARCHAR(64),
  IN _domain_name VARCHAR(1000)
)
BEGIN
  DECLARE _uid VARCHAR(16) DEFAULT NULL;
  DECLARE _profile JSON DEFAULT "{}";
  DECLARE _sid VARCHAR(64);
  
  DECLARE _db_name VARCHAR(52) DEFAULT '0';
  DECLARE _ctime INT(11); 


  DECLARE _mimicker VARCHAR(64);
  DECLARE _mimic_id VARCHAR(16);
  DECLARE _mimic_type VARCHAR(30) default  'normal';
  DECLARE _mimic_entity JSON;

  DECLARE _secret VARCHAR(500);
  DECLARE _email VARCHAR(500);
  DECLARE _dom_id INT(8);

  SELECT IFNULL(domain_id,1) FROM `organisation` 
    WHERE link = _domain_name OR domain_id = _domain_name
    INTO _dom_id;

  
  
  
  
  
  
  

  SELECT e.id, `profile`, db_name, d.email, o.link FROM drumate d 
    INNER JOIN entity e ON e.id=d.id  
    LEFT JOIN organisation o on o.domain_id=e.dom_id
    WHERE fingerprint=sha2(_pw, 512) AND (d.username=_key OR e.id=_key OR email=_key)
      AND o.link = _domain_name
      INTO _uid, _profile, _db_name, _email, _domain_name;

  SELECT secret FROM token WHERE email = _email AND method = 'signup' ORDER BY 
    ctime DESC LIMIT 1 INTO _secret;

  IF _uid IS NULL THEN 
    UPDATE cookie SET failed=failed+1, `status`='wrong_credentials' WHERE id=_cid;
    SELECT failed, `status` FROM cookie WHERE id=_cid;
  ELSE
    SELECT id FROM cookie WHERE id=_cid INTO _sid;
    IF _sid IS NULL THEN 
      SELECT _cid INTO _sid;
      SELECT UNIX_TIMESTAMP() INTO _ctime;
      INSERT INTO cookie (`id`,`uid`,`ctime`,`mtime`,`ua`, `status`)
        VALUES(_sid, _uid, _ctime, _ctime, 'no_cookie', 'new');
    END IF;
    
    SELECT 'victim' ,mimicker, id FROM mimic WHERE status = 'active' AND uid = _uid INTO  _mimic_type , _mimicker, _mimic_id ;
    SELECT 'old', mimicker, id  FROM mimic WHERE status = 'active' AND mimicker = _uid  INTO  _mimic_type , _mimicker, _mimic_id;
    SELECT 'mimc', m.mimicker, m.id  FROM mimic m
    INNER JOIN cookie c ON  m.uid = c.uid AND m.mimicker = c.mimicker 
    WHERE   m.status ='active' AND  c.id = _sid AND c.uid = _uid   INTO _mimic_type ,_mimicker, _mimic_id;


    IF _mimic_type = 'old' THEN 
      UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
      UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  UNIX_TIMESTAMP())) WHERE id=_mimic_id;
      UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
      SELECT 'normal' INTO _mimic_type; 
    END IF;

    SELECT IFNULL(JSON_VALUE(_profile, "$.otp"), "") INTO @_otp;
    
    UPDATE cookie SET 
      failed=0, 
      mtime=UNIX_TIMESTAMP(), 
      
      `uid` = _uid, 
      status = IF(@_otp IN ("0", ""), 'ok', 'otp'),
      ttl = IFNULL(JSON_VALUE(_profile, "$.session_ttl"), 2592000)
    WHERE id=_cid;
    SELECT
      c.id AS session_id,
      e.id,
      e.id AS hub_id,
      d.username AS ident,
      d.username,
      d.fullname,
      _domain_name AS domain,
      _dom_id AS domain_id,
      db_name,
      db_host,
      fs_host,
      vhost,
      home_dir,
      home_id,
      c.status,
      email,
      dmail,
      firstname,
      lastname,
      mimicker,
      _mimic_id mimic_id,
      _mimic_type mimc_type,
      area,
      area_id as aid,
      e.status AS `condition`,
      e.mtime,
      e.ctime,
      _profile AS `profile`,
      _secret `secret`
    FROM entity e INNER JOIN (drumate d, cookie c) ON e.id=d.id AND e.id=c.uid 
      WHERE d.id=_uid AND c.id=_cid;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_login_next1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_login_next1`(
  IN _key VARCHAR(128),
  IN _pw VARCHAR(128),
  IN _cid VARCHAR(64)
)
BEGIN
  DECLARE _uid VARCHAR(16) DEFAULT NULL;
  DECLARE _profile JSON DEFAULT "{}";
  DECLARE _sid VARCHAR(64);
  DECLARE _otp VARCHAR(64);
  DECLARE _db_name VARCHAR(52) DEFAULT '0';


  DECLARE _mimicker VARCHAR(64);
  DECLARE _mimic_id VARCHAR(16);
  DECLARE _mimic_type VARCHAR(30) default  'normal';
  DECLARE _mimic_entity JSON;
    

  SELECT entity.id, `profile`, db_name FROM entity JOIN drumate USING(id)
    WHERE fingerprint=sha2(_pw, 512) AND (ident=_key OR id=_key OR email=_key)
  INTO _uid, _profile, _db_name;
  
  IF _uid IS NULL THEN 
    UPDATE cookie SET failed=failed+1, `status`='wrong_credentials' WHERE id=_cid;
    SELECT failed, `status` FROM cookie WHERE id=_cid;
  ELSE
    SELECT id FROM cookie WHERE id=_cid INTO _sid;
    IF _sid IS NULL THEN 
      SELECT 'no_cookie' AS status;
    ELSE
    
      
      
      
      


      SELECT 'victim' ,mimicker, id FROM mimic WHERE status = 'active' AND uid = _uid INTO  _mimic_type , _mimicker, _mimic_id ;
      SELECT 'old', mimicker, id  FROM mimic WHERE status = 'active' AND mimicker = _uid  INTO  _mimic_type , _mimicker, _mimic_id;
      SELECT 'mimc', m.mimicker, m.id  FROM mimic m
      INNER JOIN cookie c ON  m.uid = c.uid AND m.mimicker = c.mimicker 
      WHERE   m.status ='active' AND  c.id = _sid AND c.uid = _uid   INTO _mimic_type ,_mimicker, _mimic_id;

  
      IF _mimic_type = 'old' THEN 
        UPDATE mimic SET status = 'endbytime'  WHERE id = _mimic_id;
        UPDATE mimic SET metadata=JSON_MERGE(IFNULL(metadata, '{}'), JSON_OBJECT('endbytime',  UNIX_TIMESTAMP())) WHERE id=_mimic_id;
        UPDATE cookie SET uid=_mimicker , mimicker=null WHERE mimicker=_mimicker ;
        SELECT 'normal' INTO _mimic_type ; 
      END IF;
 
     SELECT JSON_VALUE(_profile, "$.otp") INTO _otp;
      UPDATE cookie SET 
        failed=0, 
        mtime=UNIX_TIMESTAMP(), 
        `uid` = _uid, 
        status = IF(_otp IS NULL, 'ok', 'otp'),
        ttl = IFNULL(JSON_VALUE(_profile, "$.session_ttl"), 86400)
      WHERE id=_cid;
      SELECT
        c.id AS session_id,
        e.id,
        e.ident,
        e.ident as username,
        db_name,
        db_host,
        fs_host,
        vhost,
        home_dir,
        home_id,
        c.status,
        email,
        dmail,
        firstname,
        lastname,
         mimicker,
        _mimic_id mimic_id,
        _mimic_type mimc_type,
        area,
        area_id as aid,
        e.status AS `condition`,
        e.mtime,
        e.ctime,
        concat(firstname, ' ', lastname) as fullname,
        `profile`  
      FROM entity e INNER JOIN (drumate d, cookie c) ON e.id=d.id AND e.id=c.uid 
        WHERE d.id=_uid AND c.id=_cid;
    END IF;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_login_otp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_login_otp`(
  IN _key VARCHAR(128),
  IN _code VARCHAR(128),
  IN _secret VARCHAR(64),
  IN _cid VARCHAR(64)
)
BEGIN
  DECLARE _uid VARCHAR(16) DEFAULT NULL;
  DECLARE _profile JSON DEFAULT "{}";
  DECLARE _sid VARCHAR(64);
  DECLARE _otp VARCHAR(64);
  DECLARE _db_name VARCHAR(52) DEFAULT '0';
  DECLARE _c INT(11);
  DECLARE _status VARCHAR(64) DEFAULT 'missed';

   DELETE FROM otp WHERE UNIX_TIMESTAMP() - ctime > 60*10;

   SELECT entity.id, `profile`, db_name FROM entity JOIN drumate USING(id)
   WHERE (id=_key OR email=_key)
   INTO _uid, _profile, _db_name;
  
    SELECT IFNULL(code, 'failed') FROM otp WHERE `uid`=_uid
    AND `secret`=_secret AND `code`=_code INTO _c;

    SELECT id FROM cookie WHERE  id=_cid INTO _sid;

    IF _c != "failed" AND _sid IS NOT NULL THEN
      UPDATE cookie SET  uid = _uid ,  failed=0, `status` = 'ok' WHERE id=_cid;
      SELECT 'success' INTO _status; 
    END IF ;     

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_login_tmp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_login_tmp`(
  IN _key VARCHAR(128),
  IN _pw VARCHAR(128),
  IN _cid VARCHAR(64)
)
BEGIN
  DECLARE _uid VARCHAR(16) DEFAULT NULL;
  DECLARE _profile JSON DEFAULT "{}";
  DECLARE _sid VARCHAR(64);
  DECLARE _otp VARCHAR(64);
  DECLARE _db_name VARCHAR(52) DEFAULT '0';

  SELECT entity.id, `profile`, db_name FROM entity JOIN drumate USING(id)
    WHERE fingerprint=sha2(_pw, 512) AND (ident=_key OR id=_key OR email=_key)
  INTO _uid, _profile, _db_name;
  
  IF _uid IS NULL THEN 
    UPDATE cookie SET failed=failed+1, `status`='wrong_credentials' WHERE id=_cid;
    SELECT failed, `status` FROM cookie WHERE id=_cid;
  ELSE
    SELECT id FROM cookie WHERE id=_cid INTO _sid;
    IF _sid IS NULL THEN 
      SELECT 'no_cookie' AS status;
    ELSE
    
      
      
      
      

      SELECT JSON_VALUE(_profile, "$.otp") INTO _otp;
      UPDATE cookie SET 
        failed=0, 
        mtime=UNIX_TIMESTAMP(), 
        `uid` = _uid, 
        status = IF(_otp IS NULL, 'ok', 'otp'),
        ttl = IFNULL(JSON_VALUE(_profile, "$.session_ttl"), 86400)
      WHERE id=_cid;
      SELECT
        c.id AS session_id,
        e.id,
        e.ident,
        e.ident as username,
        db_name,
        db_host,
        fs_host,
        vhost,
        home_dir,
        home_id,
        c.status,
        email,
        dmail,
        firstname,
        lastname,
        area,
        area_id as aid,
        e.status AS `condition`,
        e.mtime,
        e.ctime,
        concat(firstname, ' ', lastname) as fullname,
        `profile`  
      FROM entity e INNER JOIN (drumate d, cookie c) ON e.id=d.id AND e.id=c.uid 
        WHERE d.id=_uid AND c.id=_cid;
    END IF;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_logout` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_logout`(
  IN _key VARCHAR(128),
  IN _uid VARCHAR(16)
)
BEGIN
  DELETE FROM cookie  WHERE id=_key AND `uid`=_uid;
  DELETE FROM socket  WHERE cookie=_key AND `uid`=_uid;
  DELETE FROM cookie WHERE UNIX_TIMESTAMP() - mtime > 7*24*60*60;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_logout_by_admin` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_logout_by_admin`(
  IN _uid VARCHAR(16)
 )
BEGIN
  DELETE FROM cookie  WHERE `uid`=_uid;
  DELETE FROM socket  WHERE `uid`=_uid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_mimic_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_mimic_get`(
  IN _sid VARCHAR(64)
 )
BEGIN
  DECLARE _mimicker VARCHAR(64);
  DECLARE _mimic_id VARCHAR(16);
  SELECT mimicker FROM cookie WHERE id=_sid INTO _mimicker;
  SELECT m.* ,  estimatetime  FROM mimic m WHERE mimicker = _mimicker INTO _mimic_id; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `session_reset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `session_reset`(
  IN _cid VARCHAR(128),
  IN _uid VARCHAR(128),
  IN _socket_id VARCHAR(64)
)
BEGIN
  DECLARE _sid VARCHAR(64);
  SELECT cookie FROM socket WHERE id=_socket_id AND cookie=_cid INTO _sid;
  IF(_sid IS NOT NULL) THEN 
    UPDATE socket SET `state`='idle' WHERE id=_socket_id;
    DELETE FROM cookie WHERE id=_sid AND id=_cid;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `setup_complete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `setup_complete`()
BEGIN
  UPDATE  setup  SET status = 'complete';
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `setup_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `setup_get`()
BEGIN
  INSERT INTO setup 
  SELECT 'start' WHERE NOT EXISTS (SELECT 1 FROM  setup);
 
 SELECT status FROM setup;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `set_activation_key` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `set_activation_key`(
  IN _uid VARBINARY(16)
)
BEGIN
  DECLARE _key VARCHAR(60);

  SELECT sha2(uuid(),224) INTO _KEY;
  UPDATE drumate SET activation_key=_key, activation_time=UNIX_TIMESTAMP() WHERE id=_uid;
  SELECT _key AS `key`;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `set_default_homepage` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `set_default_homepage`(
   IN _key VARBINARY(80)
)
BEGIN
  DECLARE _id VARBINARY(16);
  DECLARE _db_name VARCHAR(512);
  DECLARE _homepage VARCHAR(512);
  
  SELECT id, db_name, homepage FROM entity WHERE ident=_key OR id=_key INTO
    _id,_db_name, _homepage;
  
  IF _homepage = '{}' OR _homepage IS NULL THEN
    SET @sql = CONCAT(    
      'SELECT hashtag FROM ' ,
      _db_name ,'.block  ORDER BY ctime ASC LIMIT 1 INTO @hashtag'            
    );
    PREPARE stmt FROM @sql ;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;

    UPDATE entity SET homepage = @hashtag  WHERE id=_id;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `set_finger_print` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `set_finger_print`(
  IN _ident VARCHAR(100),
  IN _fp VARCHAR(128)
)
BEGIN
  DECLARE _id VARBINARY(16);
  SELECT id FROM entity WHERE ident=_ident INTO _id;
  UPDATE drumate SET fingerprint=_fp where id=_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `set_homepage` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `set_homepage`(
   IN _key VARBINARY(80),
   IN _homepage VARBINARY(80)
)
BEGIN
  DECLARE _id VARBINARY(16);
  UPDATE entity SET homepage = _homepage  WHERE id=_key;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `set_home_layout` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `set_home_layout`(
  IN _vhost     VARCHAR(512),
  IN _hash_tag  VARCHAR(512)
)
BEGIN

  DECLARE _hid VARBINARY(16);
  SELECT id FROM vhost WHERE fqdn=_vhost INTO _hid;
  UPDATE entity set home_layout=_hash_tag where id=_hid;
  SELECT * FROM entity_csv WHERE id=_hid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `set_mailbox` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `set_mailbox`(
   IN dmail VARCHAR(255),
   IN act INT
)
BEGIN
  START TRANSACTION;
    UPDATE postfix.mailbox SET active = act WHERE  username=dmail;
    UPDATE postfix.alias SET active = act WHERE  address=dmail;
  COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `set_password` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `set_password`(
  IN _uid VARCHAR(160),
  IN _pw VARCHAR(128)
)
BEGIN
  DECLARE _id VARCHAR(40);
  SELECT id FROM drumate WHERE id=_uid or email=_uid INTO _id;
  UPDATE drumate SET fingerprint=sha2(_pw, 512) WHERE id=_id;
  SELECT 
    e.id,
    link AS domain,
    o.domain_id,
    username,
    username as ident,
    db_name,
    db_host,
    fs_host,
    vhost,
    home_dir,
    type,
    status,
    email,
    JSON_VALUE(profile, "$.mobile")  mobile,
    JSON_VALUE(profile, "$.areacode")  areacode,
    firstname as nickname,
    lastname,
    area,
    mtime,
    ctime,
    fingerprint,
    otp
  FROM entity e 
    INNER JOIN drumate d on e.id=d.id 
    INNER JOIN organisation o ON o.domain_id=e.dom_id
  WHERE d.id=_uid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `set_redirect_state` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `set_redirect_state`(
  IN _id VARCHAR(16),
  _metadata  JSON
)
BEGIN
  REPLACE INTO yp.redirect_state(id,metadata) SELECT _id , _metadata;
  SELECT * FROM  redirect_state WHERE id = _id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sharebox-accept-issue` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `sharebox-accept-issue`()
BEGIN
 DECLARE _sys_id INT;
 DECLARE _temp_sys_id INT;
  SELECT 0 INTO _sys_id; 
  SELECT sys_id  FROM share_box WHERE sys_id > 0  ORDER BY sys_id ASC LIMIT 1 INTO _sys_id;
 
  WHILE _sys_id <> 0 DO
     SELECT sys_id; 
    SELECT _sys_id INTO  _temp_sys_id ;  
    SELECT 0 INTO  _sys_id ; 
    SELECT IFNULL(sys_id,0)  FROM drumate WHERE sys_id >_temp_sys_id ORDER BY sys_id ASC  LIMIT 1 INTO _sys_id;
  END WHILE;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sharebox_accept_issue` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `sharebox_accept_issue`()
BEGIN
 DECLARE _sys_id INT;
 DECLARE _temp_sys_id INT;
 DECLARE _sb_db VARCHAR(1000) ;
  SELECT 0 INTO _sys_id; 
  SELECT sys_id  FROM share_box WHERE sys_id > 0  ORDER BY sys_id ASC LIMIT 1 INTO _sys_id;
 
  WHILE _sys_id <> 0 DO
    SELECT db_name FROM entity WHERE id = (SELECT id FROM share_box WHERE sys_id = _sys_id ) INTO _sb_db;

      SET @st = CONCAT('SELECT ', _sb_db ,'. node_id_from_path("/__Outbound__") INTO @nid');
      PREPARE stamt FROM @st;
      EXECUTE stamt ;
      DEALLOCATE PREPARE stamt; 
      SELECT @nid;    

     SET @st = CONCAT('CALL  ', _sb_db ,'. permission_grant(?,"*",0,1,"system","")');
      PREPARE stamt FROM @st;
      EXECUTE stamt USING @nid ;
      DEALLOCATE PREPARE stamt; 
      SELECT @nid;  


    SELECT _sys_id INTO  _temp_sys_id ;  
    SELECT 0 INTO  _sys_id ; 
    SELECT IFNULL(sys_id,0)  FROM share_box WHERE sys_id >_temp_sys_id ORDER BY sys_id ASC  LIMIT 1 INTO _sys_id;
  END WHILE;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `show_b2c_users` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `show_b2c_users`(
)
BEGIN
  SELECT username, firstname, lastname, email 
    FROM drumate INNER JOIN entity e USING(id) WHERE domain_id=1 AND 
    JSON_VALUE(profile, "$.email_verified")='yes' AND 
    status='active' AND remit=0 AND email NOT LIKE "%xialia.fr";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `show_hubers` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `show_hubers`(
  IN _cid VARBINARY(16),
  IN _uid VARBINARY(16),
  IN _page TINYINT(4)
)
BEGIN
  DECLARE _remit TINYINT(4);
  DECLARE _area VARCHAR(20);
  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);

  SELECT remit FROM drumate WHERE id=_uid INTO _remit;

  IF _remit >= 7 THEN
    SELECT * FROM  hubers_csv WHERE cid=_cid ORDER BY lastname, firstname ASC LIMIT _offset, _range;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `show_login_log` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `show_login_log`(
  IN _uid VARCHAR(16),
  IN _page INT(6)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);

  
  SELECT 
    _page as `page`,
    JSON_UNQUOTE(JSON_EXTRACT(args, "$.geodata.city")) city,
    JSON_UNQUOTE(JSON_EXTRACT(args, "$.geodata.timezone")) timezone,
    JSON_UNQUOTE(JSON_EXTRACT(args, "$.geodata.ip")) ip,
    JSON_UNQUOTE(JSON_EXTRACT(headers, "$.user-agent")) ua,
    IF(`name`='yp.logout', ctime, null) outtime,
    IF(`name`='yp.login', ctime, null) intime
  FROM services_log WHERE 
    `uid`=_uid AND (`name`='yp.login' OR `name`='yp.logout') 
  ORDER BY sys_id DESC LIMIT _offset, _range; 

  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `show_member_detail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `show_member_detail`(
  IN _drumate_id  VARCHAR(16) CHARACTER SET ascii,
  IN _org_id VARCHAR(16) CHARACTER SET ascii
 )
BEGIN
    SELECT 
      dm.id  domain_id,
      dm.name domain_name,
      read_json_object(d.profile, "surname")  `surname`,
      d.id drumate_id,
      d.firstname,
      d.lastname,
      d.fullname,
      d.email,
      d.connected,
      d.username  ident,
      p.privilege ,
      
      
      e.status,
      IFNULL(JSON_UNQUOTE(JSON_EXTRACT(e.settings, '$.status_date')),null) status_date,
      CASE WHEN e.status = 'archived' AND  (IFNULL(JSON_UNQUOTE(JSON_EXTRACT(e.settings, '$.status_date')),UNIX_TIMESTAMP())  + (60*60*24*15) ) >= UNIX_TIMESTAMP() 
      THEN 'yes'  ELSE 'no'  END  is_able_delete,
      d.otp,
      read_json_object(d.profile, "address")  `address`,
      read_json_object(d.profile, "personaldata")  personaldata,
      read_json_object(d.profile, "mobile")  mobile, 
      read_json_object(d.profile, "areacode")  areacode, 
      CASE WHEN IFNULL(read_json_object(d.profile, "mobile_verified"),'no') <> 'yes' THEN 'no' ELSE 'yes' END  mobile_verified,
      CASE WHEN IFNULL(read_json_object(d.profile, "email_verified"),'no') <> 'yes' THEN 'no' ELSE 'yes' END  email_verified
     
    FROM 
      privilege p 
      INNER JOIN organisation o ON p.domain_id=o.domain_id  
      INNER JOIN domain dm ON  dm.id = p.domain_id  
      INNER JOIN drumate d ON p.uid = d.id 
      INNER JOIN entity e  ON d.id = e.id 
    WHERE  
      o.id =_org_id  AND  d.id =_drumate_id ; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `show_member_detailx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `show_member_detailx`(
  IN _drumate_id  VARCHAR(16) CHARACTER SET ascii,
  IN _org_id VARCHAR(16) CHARACTER SET ascii
 )
BEGIN
    EXPLAIN SELECT 
      dm.id  domain_id,
      dm.name domain_name,
      read_json_object(d.profile, "surname")  `surname`,
      d.id drumate_id,
      d.firstname,
      d.lastname,
      d.fullname,
      d.email,
      d.connected,
      d.username  ident,
      p.privilege ,
      
      
      e.status,
      IFNULL(JSON_UNQUOTE(JSON_EXTRACT(e.settings, '$.status_date')),null) status_date,
      CASE WHEN e.status = 'archived' AND  (IFNULL(JSON_UNQUOTE(JSON_EXTRACT(e.settings, '$.status_date')),UNIX_TIMESTAMP())  + (60*60*24*30) ) >= UNIX_TIMESTAMP() 
      THEN 'yes'  ELSE 'no'  END  is_able_delete,
      d.otp,
      read_json_object(d.profile, "address")  `address`,
      read_json_object(d.profile, "personaldata")  personaldata,
      read_json_object(d.profile, "mobile")  mobile, 
      read_json_object(d.profile, "areacode")  areacode, 
      CASE WHEN IFNULL(read_json_object(d.profile, "mobile_verified"),'no') <> 'yes' THEN 'no' ELSE 'yes' END  mobile_verified,
      CASE WHEN IFNULL(read_json_object(d.profile, "email_verified"),'no') <> 'yes' THEN 'no' ELSE 'yes' END  email_verified
     
    FROM 
      privilege p 
      INNER JOIN organisation o ON p.domain_id=o.domain_id  
      INNER JOIN domain dm ON  dm.id = p.domain_id  
      INNER JOIN drumate d ON p.uid = d.id 
      INNER JOIN entity e  ON d.id = e.id 
    WHERE  
      o.id =_org_id  AND  d.id =_drumate_id ; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `signup_login` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `signup_login`(
  IN _key VARCHAR(128),
  IN _secret VARCHAR(64),
  IN _cid VARCHAR(64)
)
BEGIN
  DECLARE _uid VARCHAR(16) DEFAULT NULL;
  DECLARE _email VARCHAR(1000);
  DECLARE _sid VARCHAR(64);
  DECLARE _otp VARCHAR(64);
  

  SELECT t.email FROM token t  WHERE t.secret = _secret INTO _email;
  SELECT id FROM drumate WHERE (id=_key OR email=_key) AND email = _email INTO _uid;  
  
  UPDATE cookie SET  uid = _uid ,  failed=0, `status` = 'ok' WHERE id=_cid;
 END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_active` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_active`(
  IN _id VARCHAR(80) CHARACTER SET ascii,
  IN _server VARCHAR(80) CHARACTER SET ascii
)
BEGIN
  INSERT IGNORE INTO socket_active VALUES(_id, _server);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_bind` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_bind`(
  IN _args JSON
)
BEGIN

  DECLARE _id VARCHAR(32) CHARACTER SET ascii;
  DECLARE _sid VARCHAR(64) CHARACTER SET ascii;
  DECLARE _endpoint VARCHAR(256) CHARACTER SET ascii;
  DECLARE _path VARCHAR(256);
  DECLARE _token VARCHAR(256) CHARACTER SET ascii;
  DECLARE _uid VARCHAR(16) CHARACTER SET ascii DEFAULT NULL;
  DECLARE _type VARCHAR(16) CHARACTER SET ascii DEFAULT NULL;
  DECLARE _cookie_id VARCHAR(64) CHARACTER SET ascii DEFAULT NULL;
  DECLARE _status VARCHAR(64) CHARACTER SET ascii DEFAULT NULL;
  DECLARE _state VARCHAR(64) CHARACTER SET ascii DEFAULT NULL;
  DECLARE _ts   INT(11) DEFAULT 0;

  SELECT JSON_VALUE(_args, "$.id") INTO _id;
  SELECT JSON_VALUE(_args, "$.sid") INTO _sid;
  SELECT JSON_VALUE(_args, "$.endpoint") INTO _endpoint;
  SELECT JSON_VALUE(_args, "$.token") INTO _token;

  SELECT UNIX_TIMESTAMP() INTO _ts;

  IF _token IS NOT NULL THEN
    SELECT `type`, id FROM authn  WHERE `token`=_token 
      INTO _type, _sid;
    IF _sid IS NOT NULL THEN
      SELECT id, `status`, `uid` FROM cookie WHERE id = _sid 
        INTO _cookie_id, _status, _uid;
    END IF;
    IF _type='guest' THEN
      SELECT get_sysconf('guest_id') INTO _uid;
    END IF;
    DELETE FROM authn WHERE `token`=_token;
  ELSE 
    SELECT id, `status`, `uid` FROM cookie WHERE id = _sid 
      INTO _cookie_id, _status, _uid;
  END IF;

  IF _cookie_id IS NULL THEN
    SELECT nobody_id() INTO _uid;
    INSERT INTO cookie (`id`, `uid`, `ctime`, `mtime`, `status`) 
    VALUES(_sid, _uid, _ts, _ts, 'socket');
    SELECT _sid INTO _cookie_id;
  END IF;

  SELECT `state` FROM socket WHERE cookie=_cookie_id AND id=_id 
    AND `uid`=_uid INTO _state;
  IF _state IS NULL THEN 
    REPLACE INTO socket (`id`, `uid`, `cookie`, `ctime`, `server`, `location`, `state`) 
    VALUES( _id, _uid, _cookie_id, _ts,  _endpoint, _path, 'active');
    REPLACE INTO socket_active (`id`, `timestamp`) VALUES( _id, _ts);
  ELSE 
    UPDATE socket 
    SET id = _id,
      cookie=_cookie_id, 
      ctime=_ts, 
      `server`= _endpoint,
      `location`= _path,
      `state`= 'active'
    WHERE  id = _id;
  END IF;

  SELECT 
    _cookie_id AS session_id,
    COALESCE(d.id, u.id) as user_id,
    COALESCE(d.id, u.id) as uid,
    COALESCE(d.username, u.email) as username,
    COALESCE(d.username, u.email) as ident,
    COALESCE(e.db_name, yp.get_sysconf('nobody_db')) as db_name,
    COALESCE(e.home_dir, yp.get_sysconf('nobody_home_dir')) AS home_dir,
    _status as `connection`,
    s.id as socket_id
    FROM socket s 
      LEFT JOIN entity e ON e.id=s.uid
      LEFT JOIN drumate d ON d.id=s.uid
      LEFT JOIN dmz_user u ON u.id=s.uid
  WHERE s.id=_id AND s.state='active' ;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_bind1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_bind1`(
  IN _id VARCHAR(32) CHARACTER SET ascii,
  IN _cid VARCHAR(64) CHARACTER SET ascii,
  IN _server VARCHAR(258),
  IN _location VARCHAR(258)
)
BEGIN
  DECLARE _hub_id VARCHAR(16) CHARACTER SET ascii;
  DECLARE _db_name VARCHAR(64);
  DECLARE _home_dir VARCHAR(512);
  DECLARE _domain VARCHAR(512);
  DECLARE _uid VARCHAR(16)  CHARACTER SET ascii ;
  DECLARE _cookie_id VARCHAR(64);
  DECLARE _status VARCHAR(64);

  SELECT id, `status`, `uid` FROM cookie WHERE id = _cid 
    INTO _cookie_id, _status, _uid;

  IF _uid IS NOT NULL AND _uid != '' THEN
    
    
    
    INSERT INTO socket (`id`, `uid`, `cookie`, `ctime`, `mtime`, `server`, `location`) 
    VALUES( _id, _uid, _cookie_id, UNIX_TIMESTAMP(), UNIX_TIMESTAMP(), _server, _location)
    ON DUPLICATE KEY UPDATE 
    cookie=_cookie_id, ctime=UNIX_TIMESTAMP(), mtime=UNIX_TIMESTAMP() , server= _server,location= _location; 
    SELECT 
      _cookie_id AS session_id,
      COALESCE(d.id, u.id) as user_id,
      COALESCE(d.id, u.id) as uid,
      COALESCE(d.username, u.email) as username,
      COALESCE(d.username, u.email) as ident,
      COALESCE(e.db_name, _db_name, utils.get('nobody_db')) as db_name,
      COALESCE(e.home_dir, _home_dir, utils.get('nobody_home_dir')) AS home_dir,
      _status as connection,
      s.id as socket_id
      FROM socket s 
        LEFT JOIN entity e ON e.id=s.uid
        LEFT JOIN drumate d ON d.id=s.uid
        LEFT JOIN dmz_user u ON u.id=s.uid
      WHERE s.id=_id;
  ELSE 
    SELECT 1 failed, 'COOKIE_NOT_FOUND' reason, _cid cookie;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_bindx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_bindx`(
  IN _id VARCHAR(32) CHARACTER SET ascii,
  IN _cid VARCHAR(64) CHARACTER SET ascii,
  IN _server VARCHAR(256),
  IN _location VARCHAR(256)
)
BEGIN

  DECLARE _db_name VARCHAR(64);
  DECLARE _home_dir VARCHAR(512);

  DECLARE _uid VARCHAR(16)  CHARACTER SET ascii ;
  DECLARE _cookie_id VARCHAR(64);
  DECLARE _status VARCHAR(64);
  DECLARE _ts   INT(11) DEFAULT 0;
  

 DECLARE _sys_id  int(11) unsigned; 

  SELECT id, `status`, `uid` FROM cookie WHERE id = _cid 
    INTO _cookie_id, _status, _uid;

  IF _uid IS NOT NULL AND _uid != '' THEN

    SELECT NULL   INTO  _sys_id;

    SELECT sys_id FROM  socket WHERE  `id` =_id  AND  `uid`  = _uid INTO  _sys_id;

    SELECT sys_id FROM  socket WHERE  `id` =_id  AND  `uid`  = _uid  AND state = 'idle'  AND  _sys_id IS NULL  LIMIT 1 INTO _sys_id ;

    SELECT sys_id FROM  socket WHERE  state = 'idle' AND  _sys_id IS NULL  LIMIT 1 INTO _sys_id ;

    IF _sys_id  IS NULL THEN
      
      SELECT UNIX_TIMESTAMP() INTO _ts;
      INSERT INTO socket (`id`, `uid`, `cookie`, `ctime`, `mtime`, `server`, `location`) 
      VALUES( _id, _uid, _cookie_id, _ts, _ts, _server, _location);
  
    ELSE 
      SELECT UNIX_TIMESTAMP() INTO _ts;
      UPDATE socket 
      SET  id = _id , uid = _uid, cookie=_cookie_id, ctime=_ts, mtime=_ts , server= _server,location= _location
      WHERE  sys_id = _sys_id;

    END IF;

    SELECT 
      _cookie_id AS session_id,
      COALESCE(d.id, u.id) as user_id,
      COALESCE(d.id, u.id) as uid,
      COALESCE(d.username, u.email) as username,
      COALESCE(d.username, u.email) as ident,
      COALESCE(e.db_name, _db_name, utils.get('nobody_db')) as db_name,
      COALESCE(e.home_dir, _home_dir, utils.get('nobody_home_dir')) AS home_dir,
      _status as connection,
      s.id as socket_id
      FROM socket s 
        LEFT JOIN entity e ON e.id=s.uid
        LEFT JOIN drumate d ON d.id=s.uid
        LEFT JOIN dmz_user u ON u.id=s.uid
      WHERE s.id=_id;
  ELSE 
    SELECT 1 failed, 'COOKIE_NOT_FOUND' reason, _cid cookie;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_bind_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_bind_next`(
  IN _id VARCHAR(32) CHARACTER SET ascii,
  IN _cid VARCHAR(64) CHARACTER SET ascii,
  IN _server VARCHAR(256)
)
BEGIN

  DECLARE _uid VARCHAR(16) CHARACTER SET ascii DEFAULT NULL;
  DECLARE _cookie_id VARCHAR(64) CHARACTER SET ascii DEFAULT NULL;
  DECLARE _status VARCHAR(64) CHARACTER SET ascii DEFAULT NULL;
  DECLARE _state VARCHAR(64) CHARACTER SET ascii DEFAULT NULL;
  DECLARE _ts   INT(11) DEFAULT 0;
  

  SELECT id, `status`, `uid` FROM cookie WHERE id = _cid 
    INTO _cookie_id, _status, _uid;

  IF _cookie_id IS NULL OR _status != 'ok' THEN
    SELECT 1 failed, 'COOKIE_NOT_FOUND' reason, _cid cookie;
  ELSE 
    SELECT `state` FROM socket WHERE cookie=_cookie_id AND id=_id 
      AND `uid`=_uid INTO _state;
    IF _state IS NULL THEN 
      SELECT UNIX_TIMESTAMP() INTO _ts;
      INSERT INTO socket (`id`, `uid`, `cookie`, `ctime`, `server`, `state`) 
      VALUES( _id, _uid, _cookie_id, _ts,  _server, 'active');

    ELSE 
      SELECT UNIX_TIMESTAMP() INTO _ts;
      UPDATE socket 
      SET cookie=_cookie_id, 
        ctime=_ts, 
        `server`= _server,
        `state`= 'active'
      WHERE  id = _id;
    END IF;

    SELECT 
      _cookie_id AS session_id,
      COALESCE(d.id, u.id) as user_id,
      COALESCE(d.id, u.id) as uid,
      COALESCE(d.username, u.email) as username,
      COALESCE(d.username, u.email) as ident,
      COALESCE(e.db_name, utils.get('nobody_db')) as db_name,
      COALESCE(e.home_dir, utils.get('nobody_home_dir')) AS home_dir,
      _status as connection,
      s.id as socket_id
      FROM socket s 
        LEFT JOIN entity e ON e.id=s.uid
        LEFT JOIN drumate d ON d.id=s.uid
        LEFT JOIN dmz_user u ON u.id=s.uid
      WHERE s.id=_id AND s.state='active' ;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_cleanup` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_cleanup`(
  IN _server VARCHAR(258)
)
BEGIN
  
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_cleanupx` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_cleanupx`(
  IN _server VARCHAR(258)
)
BEGIN

  DELETE FROM socket WHERE sys_id IN  (SELECT sys_id FROM socket WHERE `server`=_server);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_cron` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_cron`(
)
BEGIN
  DELETE FROM socket WHERE `state` = 'idle' 
  AND ctime < unix_timestamp() - 24*60*60;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_delete`(
  IN _id VARCHAR(80)
)
BEGIN
  
  
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_free` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_free`(
  IN _id VARCHAR(80)
)
BEGIN 
  DELETE FROM socket WHERE id=_id;
  DELETE FROM conference WHERE socket_id =_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_free_tmp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_free_tmp`(
  IN _id VARCHAR(80)
)
BEGIN 
  DELETE FROM socket WHERE id=_id;
  DELETE FROM conference WHERE socket_id =_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_get`(
  IN _id VARCHAR(80) CHARACTER SET ascii 
)
BEGIN
  SELECT 
    s.id AS connection_id,
    s.id AS socket_id,    
    COALESCE(e.id, u.id) user_id,
    COALESCE(d.username, u.email) username,    
    s.server,
    s.location,
    s.server AS endpointAddress,
    s.location AS endpointRoute,
    COALESCE(e.home_dir, utils.get('nobody_home_dir')) AS home_dir,
    COALESCE(d.remit, 0) as remit,
    COALESCE(d.profile, '{}') profile,
    COALESCE(e.settings, '{}') settings,
    COALESCE(e.db_name, utils.get('nobody_db')) db_name,
    COALESCE(disk_usage(e.id), 0) disk_usage,
    COALESCE(d.quota, 0) as quota,
    COALESCE(d.fullname, u.name) as fullname
    FROM socket s 
      LEFT JOIN entity e ON e.id=s.uid
      LEFT JOIN drumate d ON d.id=s.uid
      LEFT JOIN dmz_user u ON u.id=s.uid
    WHERE s.id=_id AND s.state='active' 
    ORDER BY s.ctime DESC LIMIT 1;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_refresh` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_refresh`(
  IN _server VARCHAR(256) CHARACTER SET ascii,
  IN _list JSON
)
BEGIN
  DECLARE _index INT(4) DEFAULT 0;
  DECLARE _length INT(4) DEFAULT 0;
  DECLARE _socket_id VARCHAR(60) CHARACTER SET ascii;
  DECLARE _failed BOOLEAN DEFAULT 0;
  
  DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
  BEGIN
    SET _failed = 1;  
    GET DIAGNOSTICS CONDITION 1 
      @sqlstate = RETURNED_SQLSTATE, 
      @errno = MYSQL_ERRNO, 
      @message = MESSAGE_TEXT;
  END;

  IF JSON_LENGTH(_list) IS NULL THEN
    SELECT 0 INTO _length;
  ELSE
    SELECT JSON_LENGTH(_list) INTO _length;
  END IF;

  WHILE _index < _length DO 
    SELECT JSON_VALUE(_list, CONCAT("$[", _index, "]")) INTO _socket_id;
    REPLACE INTO socket_active SELECT _socket_id, UNIX_TIMESTAMP();
    SELECT _index + 1 INTO _index;
  END WHILE;

  START TRANSACTION;

  DELETE FROM socket_active WHERE (unix_timestamp()- `timestamp`) > 30;
  DELETE FROM socket WHERE id NOT IN ( SELECT id FROM socket_active );
  DELETE FROM conference WHERE socket_id NOT IN ( SELECT id FROM socket );

  IF _failed THEN
    ROLLBACK;
  ELSE
    COMMIT;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_refresh_tmp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_refresh_tmp`(
  IN _server VARCHAR(256) CHARACTER SET ascii,
  IN _list JSON
)
BEGIN
  DECLARE _index INT(4) DEFAULT 0;
  DECLARE _length INT(4) DEFAULT 0;
  DECLARE _socket_id VARCHAR(60) CHARACTER SET ascii;

  IF JSON_LENGTH(_list) IS NULL THEN
    SELECT 0 INTO _length;
  ELSE
    SELECT JSON_LENGTH(_list) INTO _length;
  END IF;

  CREATE TEMPORARY TABLE _temp_active_socket  AS
    SELECT id FROM socket WHERE 1=2;
  CREATE TEMPORARY TABLE _temp_idle_socket  AS
    SELECT id FROM socket WHERE 1=2;
  
  
  WHILE _index < _length DO 
    SELECT JSON_VALUE(_list, CONCAT("$[", _index, "]")) INTO _socket_id;
    SELECT _index + 1 INTO _index;
    INSERT INTO _temp_active_socket VALUES(_socket_id);
  END WHILE;

  UPDATE socket s INNER JOIN _temp_active_socket t ON s.id=t.id
    SET s.state = 'active', ctime=UNIX_TIMESTAMP() WHERE s.server=_server;

  INSERT INTO _temp_idle_socket SELECT id
    FROM socket WHERE `server`=_server AND (UNIX_TIMESTAMP() - ctime > 30);
  DELETE FROM socket WHERE `server`=_server AND (UNIX_TIMESTAMP() - ctime > 30);

  SELECT * from _temp_idle_socket;
  DELETE FROM conference WHERE socket_id NOT IN ( 
    SELECT id FROM socket
  );

  DROP TABLE _temp_active_socket;
  DROP TABLE _temp_idle_socket;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_reset` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_reset`(
  IN _server VARCHAR(258)
)
BEGIN
  DELETE FROM conference WHERE socket_id IN (SELECT id FROM socket WHERE `server`=_server);
  DELETE FROM socket WHERE `server`=_server;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_set_session_offline` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_set_session_offline`(
  IN _id VARCHAR(80) CHARACTER SET ascii
)
BEGIN
  DECLARE _cookie_id VARCHAR(64) CHARACTER SET ascii DEFAULT NULL;
  SELECT cookie FROM socket WHERE `state`="active" AND id=_id INTO _cookie_id;
  IF _cookie_id IS NOT NULL THEN
    UPDATE socket SET `state`="idle" WHERE cookie=_cookie_id;
    DELETE FROM cookie WHERE id=_cookie_id;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_set_state` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_set_state`(
  IN _id VARCHAR(80) CHARACTER SET ascii,
  IN _state INT(4)
)
BEGIN
  DECLARE _cookie_id VARCHAR(64) CHARACTER SET ascii DEFAULT NULL;
  SELECT cookie FROM socket WHERE `state`="active" AND id=_id INTO _cookie_id;
  IF _cookie_id IS NOT NULL THEN
    IF _state = 1 THEN
      UPDATE socket SET `state`="active" WHERE cookie=_cookie_id;
    ELSE
      UPDATE socket SET `state`="idle" WHERE cookie=_cookie_id;
      DELETE FROM cookie WHERE id=_cookie_id;
    END IF;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_user_connections` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_user_connections`(
  IN _key VARCHAR(80) CHARACTER SET ascii 
)
BEGIN
  
  
  
  SELECT 
    1 isDrumate,
    s.id AS connection_id,
    s.id AS socket_id,
    e.id AS user_id,
    d.username as ident,
    s.server,
    e.db_name,
    home_dir,
    remit,
    d.lang,
    d.avatar,
    e.status,
    d.profile,
    e.settings,
    
    
    fullname
    FROM entity e 
      INNER JOIN drumate d ON e.id=d.id 
      INNER JOIN socket s  ON e.id=s.uid 
      WHERE e.id=_key AND s.state = 'active';
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `socket_user_server_connections` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `socket_user_server_connections`(
  IN _uid VARCHAR(80) CHARACTER SET ascii ,
  IN _server varchar(256)
)
BEGIN
  DECLARE _id VARCHAR(16) CHARACTER SET ascii  DEFAULT NULL;
  SELECT `uid` FROM socket WHERE state='active' AND id=_uid LIMIT 1 INTO _id;
  SELECT 
    1 isDrumate,
    s.id AS connection_id,
    s.id AS socket_id,
    e.id AS user_id,
    e.ident as ident,
    s.server,
    e.db_name,
    home_dir,
    remit,
    d.lang,
    d.avatar,
    e.status,
    d.profile,
    e.settings,
    disk_usage(e.id) AS disk_usage,
    quota,
    fullname
    FROM entity e 
      INNER JOIN drumate d ON e.id=d.id 
      INNER JOIN socket s  ON e.id=s.uid 
      WHERE e.id=IFNULL(_id, _uid) AND s.state='active' AND s.server = _server  ;
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `store_request` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `store_request`(
  IN _firstname VARCHAR(255),
  IN _lastname VARCHAR(255),
  IN _email VARCHAR(255),
  IN _message TEXT,
  IN _reason VARCHAR(16)
)
BEGIN

  DECLARE _now INT(11) DEFAULT 0;
  DECLARE _cksum VARCHAR(255);

  SELECT UNIX_TIMESTAMP() into _now;
  SELECT sha2(uuid(),224) INTO _cksum;

  INSERT INTO
    request (`firstname`,`lastname`,`email`, `id`, `message`,`reason`,`tstamp`)
    VALUES (_firstname, _lastname, _email, _cksum, _message,_reason,_now);

  SELECT *, message AS content, id as `key`  FROM request WHERE id = _cksum;
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `subscription_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `subscription_get`(
    IN _entity_id VARCHAR(16)
    
    )
BEGIN
  
    SELECT entity_id,subscription_id,customer_id,
            plan ,period,recurring, price,offer_price,status,ctime 
    FROM
      subscription_new WHERE entity_id = _entity_id; 

  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `subscription_remove` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `subscription_remove`(
    IN _entity_id VARCHAR(16),
    IN _subscription_id VARCHAR(30)
    )
BEGIN
  
     DELETE  FROM subscription_new 
     WHERE   entity_id =_entity_id AND 
     subscription_id = _subscription_id;

  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `subscription_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `subscription_update`(
    IN _entity_id VARCHAR(16),
    IN _customer_id VARCHAR(30),
    IN _subscription_id VARCHAR(30),
    IN _plan varchar(30) ,
    IN _period varchar(30) ,
    IN _recurring  INT(11) , 
    IN _price float,
    IN _offer_price  float,
    IN _status varchar(30) 
    )
BEGIN
  
    INSERT INTO subscription_new 
      (entity_id,subscription_id,customer_id,
            plan ,period,recurring, price,offer_price,status,ctime)
    SELECT  _entity_id,_subscription_id,_customer_id,
            _plan ,_period,_recurring, _price,_offer_price,_status, UNIX_TIMESTAMP()
    ON DUPLICATE KEY UPDATE
        plan =_plan,
        period =_period, 
        recurring =_recurring,
        price =_price,
        offer_price =_offer_price,
        status =_status,
        ctime = UNIX_TIMESTAMP();

    

    

    


  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `subscription_update_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `subscription_update_next`(
   IN _entity_id VARCHAR(16) CHARACTER SET ascii,
   IN _payment_id VARCHAR(16) CHARACTER SET ascii 
  )
BEGIN
DECLARE _ref_sys_id int;
DECLARE _mode VARCHAR(30);
DECLARE _etime INT(11);
DECLARE _stime INT(11); 
DECLARE _ntime INT(11); 
DECLARE _cycle varchar(30) DEFAULT 'unknown';

DECLARE _plan varchar(30) CHARACTER SET ascii;
DECLARE _duration int ;
DECLARE _amount  float;


SELECT max(sys_id)FROM subscription_history WHERE entity_id =_entity_id INTO _ref_sys_id;
SELECT mode,etime FROM subscription_history WHERE sys_id = _ref_sys_id  INTO _mode ,_etime;
  
SELECT UNIX_TIMESTAMP() INTO _ntime;

SELECT CASE WHEN _mode ='free' THEN _ntime ELSE _etime END INTO _etime ;
SELECT CASE WHEN _etime >= _ntime THEN _etime+1 ELSE _ntime END INTO _stime ;


SELECT cycle, plan,duration,amount FROM payment WHERE entity_id = _entity_id 
AND payment_id =_payment_id AND status = 'paid'  INTO _cycle,_plan, _duration, _amount;
SELECT _cycle,_plan, _duration, _amount;

IF ((_cycle !='unknown') AND (_cycle IN ('yearly', 'monthly'))) THEN 
SELECT UNIX_TIMESTAMP(DATE_ADD( FROM_UNIXTIME(_stime), INTERVAL _duration month)) INTO _ntime;
SELECT UNIX_TIMESTAMP(DATE_ADD( FROM_UNIXTIME(_ntime), INTERVAL -1 DAY)) INTO _ntime;
INSERT INTO subscription_history (payment_id,entity_id,plan, cycle,duration, renewal_amount,stime,etime,ctime,mode)
SELECT _payment_id,_entity_id,_plan, _cycle,_duration, _amount,_stime,_ntime,UNIX_TIMESTAMP(),'pay';
UPDATE subscription_history SET etime = _etime WHERE sys_id = _ref_sys_id ; 

    UPDATE payment SET status = 'subscribed',
    utime = UNIX_TIMESTAMP()
    WHERE payment_id =_payment_id
    AND entity_id = _entity_id 
    AND status = 'paid';

END IF;
 SELECT  FROM_UNIXTIME(stime),FROM_UNIXTIME(etime)  FROM subscription WHERE entity_id =_entity_id order by sys_id;

SELECT  FROM_UNIXTIME(_etime), FROM_UNIXTIME(_stime) , FROM_UNIXTIME(_ntime);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `sys_conf_set` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `sys_conf_set`(
  IN _key VARCHAR(100),
  IN _value JSON
)
BEGIN
  REPLACE INTO sys_conf VALUES(_key, _value);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `teamroom_permission_recap` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `teamroom_permission_recap`()
BEGIN

select sys_id,  id , db_name  from entity where type='hub' and area ='private' order by sys_id asc;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `team_member_name` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `team_member_name`(
 IN _in JSON
)
BEGIN
 DECLARE _hub_id VARCHAR(16); 
 DECLARE _owner_id VARCHAR(16);

 SELECT JSON_VALUE(_in, '$.hub_id') INTO _hub_id;
 SELECT JSON_VALUE(_in, '$.ref_uid') INTO _owner_id;
 SELECT _hub_id, _owner_id;
  

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `testtest` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `testtest`(
 IN _key VARBINARY(80)
)
BEGIN
  DECLARE _domain_id INT(4);
  DECLARE _id VARCHAR(16);
  DECLARE _ident VARBINARY(80);
  DECLARE _type VARCHAR(80);
  DECLARE _db VARCHAR(80);
  DECLARE _home_dir VARCHAR(512);
  DECLARE _entity_db VARCHAR(20);
  DECLARE _sys_id INT;
  DECLARE _temp_sys_id INT;
  DECLARE _drumate_id VARCHAR(16);
  DECLARE _drumate_domain_id INT(4);
  DECLARE _drumate_db VARCHAR(100);
  DECLARE _email VARCHAR(1000);
  DECLARE _rid VARCHAR(16) ;

  DECLARE _src_db_name VARCHAR(100);

  SELECT id, ident,`type`, db_name, home_dir FROM entity
  WHERE  id=_key INTO _id, _ident, _type, _db, _home_dir;

  
  
  

  SELECT email FROM drumate WHERE id = _id  INTO _email;  
  SELECT domain_id FROM privilege WHERE uid = _id INTO _domain_id;



  

  SELECT 0 INTO _sys_id; 
  SELECT sys_id  FROM drumate WHERE sys_id > 0  ORDER BY sys_id ASC LIMIT 1 INTO _sys_id;
 
  WHILE _sys_id <> 0 DO
     
    SELECT NULL,NULL,NULL INTO _drumate_id,_drumate_domain_id,_drumate_db;
    SELECT id  FROM  drumate WHERE sys_id = _sys_id INTO _drumate_id; 
    SELECT domain_id FROM privilege WHERE uid = _drumate_id  ORDER BY domain_id DESC  LIMIT 1  INTO _drumate_domain_id;
    SELECT db_name FROM entity WHERE status <> 'deleted' AND id = _drumate_id INTO _drumate_db;

    SET @st = CONCAT('SELECT id FROM ', _drumate_db ,'.contact WHERE uid =? or entity = ? or uid = ? or entity =? ');
          PREPARE stamt FROM @st;
          EXECUTE stamt USING _id,_id,_email,_email;
          DEALLOCATE PREPARE stamt;

    SELECT _sys_id INTO  _temp_sys_id ;  
    SELECT 0 INTO  _sys_id ; 
    SELECT IFNULL(sys_id,0)  FROM drumate WHERE sys_id >_temp_sys_id ORDER BY sys_id ASC  LIMIT 1 INTO _sys_id;
  END WHILE;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `test_sjon` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `test_sjon`(
  IN _json JSON
)
BEGIN

  insert into test values( uniqueId(), _json);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ticket_add` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `ticket_add`(
  IN _message_id VARCHAR(16),
  IN _uid VARCHAR(16),
  IN _metadata JSON 
  )
BEGIN
  INSERT INTO ticket(message_id,uid,metadata,utime )
  SELECT _message_id, _uid ,_metadata,UNIX_TIMESTAMP();
  SELECT *  FROM ticket WHERE message_id =_message_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ticket_detail` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `ticket_detail`(
  IN _ticket_id  int(11) 
  )
BEGIN
  SELECT *  FROM ticket WHERE ticket_id =_ticket_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ticket_grant_permission` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `ticket_grant_permission`( _new_uid VARCHAR(16))
BEGIN
 DECLARE _sys_id INT;
 DECLARE _temp_sys_id INT;
 DECLARE _sb_db VARCHAR(1000) ;
 DECLARE _uid VARCHAR(16) ;
 DECLARE _inner_sys_id INT;
 DECLARE _inner_temp_sys_id INT;
 DECLARE _support_domain_id INT;
 DECLARE _user_domain_id INT; 
 
 DECLARE _support_user_id VARCHAR(16) DEFAULT NULL;
 DECLARE _user_id VARCHAR(16) DEFAULT NULL;


  SELECT conf_value  FROM yp.sys_conf WHERE  conf_key = 'support_domain' INTO _support_domain_id; 

  IF _new_uid IS NOT NULL THEN 
    SELECT domain_id FROM yp.privilege WHERE uid = _new_uid INTO _user_domain_id;
    SELECT _new_uid  WHERE _user_domain_id = _support_domain_id  INTO  _support_user_id; 
    SELECT _new_uid  WHERE _user_domain_id <> _support_domain_id  INTO  _user_id; 
  END IF; 

  
  SELECT 0 INTO _sys_id; 
  SELECT h.sys_id  FROM entity e INNER JOIN yp.hub h ON e.id = h.id  
  WHERE h.sys_id > 0  AND   e.area = 'restricted' AND e.type='hub' AND h.owner_id = IFNULL(_user_id, h.owner_id)
  ORDER BY h.sys_id ASC LIMIT 1 INTO _sys_id;
 
  WHILE _sys_id <> 0 DO
    SELECT e.db_name FROM entity e INNER JOIN yp.hub h ON e.id = h.id  
     WHERE h.sys_id = _sys_id  INTO _sb_db;

      
      
      
      

      SELECT 0 INTO _inner_sys_id; 
      SELECT sys_id  FROM privilege WHERE sys_id > 0  and  domain_id = _support_domain_id  AND uid= IFNULL(_support_user_id ,uid ) ORDER BY sys_id ASC LIMIT 1 INTO _inner_sys_id;
    

      WHILE _inner_sys_id <> 0 DO
        SELECT uid FROM privilege WHERE sys_id = _inner_sys_id  INTO _uid;
        SET @st = CONCAT('CALL  ', _sb_db ,'.permission_grant(?,?,0,15,"system","ticketpermission")');
        PREPARE stamt FROM @st;
        EXECUTE stamt USING "*",_uid ;
        DEALLOCATE PREPARE stamt; 

        SELECT _inner_sys_id INTO  _inner_temp_sys_id ;  
        SELECT 0 INTO  _inner_sys_id ; 
        SELECT IFNULL(sys_id,0)  FROM privilege WHERE sys_id >_inner_temp_sys_id AND  domain_id = _support_domain_id AND uid= IFNULL(_support_user_id ,uid )   ORDER BY sys_id ASC  LIMIT 1 INTO _inner_sys_id;

      END WHILE;

    SELECT _sys_id INTO  _temp_sys_id ;  
    SELECT 0 INTO  _sys_id ; 
    SELECT IFNULL(h.sys_id,0)  FROM entity e INNER JOIN yp.hub h ON e.id = h.id  
    WHERE h.sys_id >_temp_sys_id AND  area = 'restricted'  AND e.type='hub' AND h.owner_id = IFNULL(_user_id, h.owner_id)
    ORDER BY h.sys_id ASC  LIMIT 1 INTO _sys_id;
  END WHILE;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ticket_update_metadata` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `ticket_update_metadata`(
  IN _ticket_id  int(11),
  IN _data JSON 
  )
BEGIN
DECLARE _value VARCHAR(1024);
  DECLARE _path VARCHAR(100);
  DECLARE _paths VARCHAR(1024);
  DECLARE _i TINYINT(4) DEFAULT 0;

  SELECT JSON_ARRAY(
    "status"
  ) INTO _paths;
  WHILE _i < JSON_LENGTH(_paths) DO 
    SELECT read_json_array(_paths, _i) INTO _path;
    SELECT get_json_object(_data, _path) INTO _value;
    
    IF _value IS NOT NULL THEN 
      UPDATE ticket SET `metadata` = 
        JSON_SET(`metadata`, CONCAT("$.",_path), _value) WHERE ticket_id=_ticket_id;
    END IF;
    SELECT _i + 1 INTO _i;
  END WHILE;

  SELECT 
      t.ticket_id,
      t.ticket_id message,  
      t.uid,
      t.metadata,
      t.status,
      (SELECT IF(COUNT(*), 1, 0) FROM yp.socket soc WHERE soc.uid=t.uid AND state='active' ) is_online,
      0 room_count,
      d.firstname, d.lastname, d.fullname , o.name org_name, t.utime
    FROM 
      yp.ticket t
      INNER JOIN yp.drumate d  ON t.uid =d.id
      INNER JOIN yp.organisation o ON o.domain_id= d.domain_id
    WHERE   
      t.ticket_id =_ticket_id;

  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `token_btob_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `token_btob_update`(
 IN _secret      VARCHAR(512),
 IN _metadata JSON 
)
BEGIN
  DECLARE _ctime INT(11); 
  UPDATE organisation_token SET metadata = _metadata WHERE secret = _secret;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `token_check` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `token_check`(
  IN _email       VARCHAR(1024),
  IN _secret      VARCHAR(512),
  IN _method     VARCHAR(200)
)
BEGIN
  SELECT *, (UNIX_TIMESTAMP() - ctime) AS age FROM token WHERE 
    secret=secret AND email=_email AND method=_method;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `token_delete` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `token_delete`(
  IN _secret      VARCHAR(512)
)
BEGIN
  DELETE FROM token WHERE secret = _secret; 
  DELETE FROM organisation_token WHERE secret = _secret; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `token_delete1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `token_delete1`(
  IN _secret      VARCHAR(512)
)
BEGIN
  DELETE FROM token WHERE secret = _secret; 
  DELETE FROM organisation_token WHERE secret = _secret; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `token_generate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `token_generate`(
  IN _email       VARCHAR(1024),
  IN _name      VARCHAR(512),
  IN _secret      VARCHAR(512),
  IN _method     VARCHAR(200),
  IN _inviter_id  VARCHAR(200)
)
BEGIN
  DECLARE _ctime INT(11); 

  IF _inviter_id IN ('',  '0') THEN 
   SELECT NULL INTO  _inviter_id;
  END IF;

  IF  _inviter_id IS NULL THEN 
    
    
    DELETE FROM token WHERE email = _email AND method = _method;  
  END IF;

  SELECT UNIX_TIMESTAMP() INTO _ctime;

  REPLACE INTO token (email,name,secret,method,inviter_id,status,ctime) VALUES (_email, _name, _secret, _method,_inviter_id,'active', _ctime);

  SELECT * FROM token WHERE secret = _secret;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `token_generate_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `token_generate_next`(
  IN _email       VARCHAR(1024),
  IN _name      VARCHAR(512),
  IN _secret      VARCHAR(512),
  IN _method     VARCHAR(200),
  IN _inviter_id  VARCHAR(200)
)
BEGIN
  DECLARE _ctime INT(11); 
  DECLARE _metadata JSON ; 
  DELETE FROM token WHERE unix_timestamp() - ctime > 7*24*60*60;

  SELECT JSON_OBJECT("step","password") INTO _metadata ;  
  IF _method = 'b2bsignup' THEN 
    SELECT  JSON_OBJECT("step","company","mode","b2bsignup" ) INTO _metadata ;  
    SELECT 'signup' INTO _method; 
  END IF;

  IF  _inviter_id IS NULL THEN 
    
    
    SELECT '' INTO  _inviter_id;
    
  END IF;

  
  
  


  SELECT UNIX_TIMESTAMP() INTO _ctime;

  REPLACE INTO token (email,name,secret,method,inviter_id,status,ctime,metadata) 
    VALUES (_email, _name, _secret, _method,_inviter_id,'active', _ctime,_metadata );

  SELECT 
    t.email,t.name,t.secret,t.method,t.inviter_id,t.status,t.ctime,t.metadata
  FROM 
    token t 
    
  WHERE t.secret = _secret;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `token_generate_next1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `token_generate_next1`(
  IN _email       VARCHAR(1024),
  IN _name      VARCHAR(512),
  IN _secret      VARCHAR(512),
  IN _method     VARCHAR(200),
  IN _inviter_id  VARCHAR(200)
)
BEGIN
  DECLARE _ctime INT(11); 
  DECLARE _metadata JSON ; 

  
    
  
  
  SELECT JSON_OBJECT("step","password") INTO _metadata ;  
  IF _method = 'b2bsignup' THEN 
  SELECT  JSON_OBJECT("step","company","mode","b2bsignup" ) INTO _metadata ;  
    
    SELECT 'signup' INTO _method; 
  END IF;

  IF _inviter_id IN ('',  '0') THEN 
    SELECT NULL INTO  _inviter_id;
  END IF;

  IF  _inviter_id IS NULL THEN 
    
    
    DELETE FROM token WHERE email = _email AND method = _method;  
  END IF;

  SELECT UNIX_TIMESTAMP() INTO _ctime;

  REPLACE INTO token (email,name,secret,method,inviter_id,status,ctime,metadata) VALUES (_email, _name, _secret, _method,_inviter_id,'active', _ctime,_metadata );

  SELECT 
    t.email,t.name,t.secret,t.method,t.inviter_id,t.status,t.ctime,t.metadata
  FROM 
    token t 
    
  WHERE t.secret = _secret;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `token_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `token_get`(
  IN _secret      VARCHAR(512)
)
BEGIN

  SELECT t.*, d.email as inviter_email FROM 
  token t
  LEFT JOIN drumate d on d.id=t.inviter_id
  WHERE secret = _secret;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `token_get_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `token_get_next`(
  IN _secret      VARCHAR(512)
)
BEGIN

  
  SELECT 
    t.email,
    t.name,
    t.secret,
    t.inviter_id,
    t.status,
    t.ctime,
    d.email as inviter_email,  
    CASE WHEN  JSON_VALUE(metadata, "$.mode")  IS NOT NULL THEN 'b2bsignup' ELSE t.method END method , 
    t.metadata
  FROM 
  token t
  
  LEFT JOIN drumate d on d.id=t.inviter_id
  WHERE t.secret = _secret;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `token_get_next1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `token_get_next1`(
  IN _secret      VARCHAR(512)
)
BEGIN

  SELECT 
    t.email,
    t.name,
    t.secret,
    t.inviter_id,
    t.status,
    t.ctime,
    d.email as inviter_email,  
    CASE WHEN  JSON_VALUE(metadata, "$.mode")  IS NOT NULL THEN 'b2bsignup' ELSE t.method END method , 
    t.metadata
  FROM 
  token t
  
  LEFT JOIN drumate d on d.id=t.inviter_id
  WHERE t.secret = _secret;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `token_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `token_update`(
 IN _secret      VARCHAR(512),
 IN _metadata JSON 
)
BEGIN
  UPDATE token SET metadata = _metadata WHERE secret = _secret;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `top_news` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `top_news`(
  IN _page TINYINT(8)
)
BEGIN

  DECLARE _more_rows BOOLEAN DEFAULT TRUE;
  DECLARE _did VARBINARY(16);
  DECLARE _cid VARBINARY(16);
  DECLARE _aid VARBINARY(16);
  DECLARE _cname VARCHAR(80);
  DECLARE _area VARCHAR(80);
  DECLARE _offset BIGINT DEFAULT 0;
  DECLARE _range BIGINT DEFAULT 2;

  DECLARE threads_list CURSOR FOR SELECT resource_id, cid, cname, area, aid
    FROM billboard_view WHERE category='blog' ORDER BY time_stamp DESC
    LIMIT _offset,_range;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET _more_rows = FALSE;

  IF @rows_per_page IS NULL THEN
    SET @rows_per_page=15;
  END IF;

  SELECT (_page - 1)*@rows_per_page, (_page)*@rows_per_page INTO _offset,_range;

  OPEN threads_list;

  cloop: LOOP
    FETCH threads_list INTO _did, _cid, _cname, _area, _aid;
    IF NOT _more_rows THEN
      LEAVE cloop;
    END IF;
    SET @s = CONCAT ("SELECT ",
      "author_id, subject, summary, ptime, firstname, lastname, fullname, attach, tid, ",
      "from_unixtime(ptime, ", quote( @dformat), ") AS date, ", _page, " AS page, ",
      quote(_cid),   " AS cid, ",
      quote(_did),   " AS did, ",
      quote(_cname), " AS cname, ",
      quote(_area),  " AS area, ",
      quote(_aid),   " AS aid, ",
      " attach ",
      " FROM `C_", _cid, "`.drums_summary WHERE did=", quote(_did));
    PREPARE stmt FROM @s;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
   END LOOP cloop;

  CLOSE threads_list;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `trace` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `trace`(
  IN sid VARCHAR(64),
  IN _action VARCHAR(40)
)
BEGIN

  SET @s1 = CONCAT("INSERT INTO log ",
   "(`username`, `start_time`, `update_time`, `last_ip`, `req_uri`, `referer`, `ua`, `action`) "
   "SELECT username, start_time, update_time, last_ip, req_uri, referer, ua, ", quote(_action),
   " FROM sessions WHERE id=", quote(sid), " ORDER BY update_time DESC LIMIT 1") ;

PREPARE stmt FROM @s1;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `tranfer_token_generate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `tranfer_token_generate`(
  IN _email       VARCHAR(1024),
  IN _name        VARCHAR(512),
  IN _secret      VARCHAR(512)
)
BEGIN
  DECLARE _ctime INT(11); 
  DECLARE _metadata JSON ;
  SELECT UNIX_TIMESTAMP() INTO _ctime;

  INSERT INTO tranfer_token (email,name,secret,status,ctime,metadata) 
    VALUES (_email, _name, _secret,'active', _ctime,_metadata );


  SELECT * FROM tranfer_token WHERE secret = _secret;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `tranfer_token_get` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `tranfer_token_get`(
  IN _secret      VARCHAR(512)
)
BEGIN

  
  SELECT 
   t.email,t.name,t.secret,t.status,t.ctime,t.metadata
  FROM 
  tranfer_token t
  WHERE t.secret = _secret;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `uncast_user` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `uncast_user`(
 IN _admin VARCHAR(90),
 IN _user   VARCHAR(90)
)
BEGIN
  DECLARE _admin_id VARCHAR(16);
  DECLARE _user_id VARCHAR(16);
  SELECT id FROM  drumate  WHERE id=_admin OR
    username=_admin AND remit&2 INTO _admin_id;
  SELECT id FROM  drumate WHERE id=_user OR
    username =_user INTO _user_id;
  SELECT _admin_id admin, _user_id user;
  IF _admin_id IS NULL OR _user_id IS NULL THEN
    SELECT null id;
  ELSE
    SELECT * FROM cookie WHERE mimicker=_admin_id ;
    UPDATE cookie SET uid=_admin_id , mimicker=null WHERE mimicker=_admin_id ;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `unique_ident` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `unique_ident`(
  _ident VARCHAR(200)
)
BEGIN
  DECLARE _r VARCHAR(1024);
  DECLARE _count TINYINT(8) DEFAULT 1;
  DECLARE _i TINYINT(6) DEFAULT 0;
  DECLARE _depth TINYINT(6) DEFAULT 0;
  
  SELECT _ident INTO _r;

  SELECT count(*) FROM entity WHERE ident = _r INTO _count;
  SELECT count(*) + _count FROM organisation WHERE ident = _r INTO _count;
  IF _ident regexp '[\_\-]\([0-9]+\)$' THEN 
    SELECT SUBSTRING_INDEX(_ident, '-', -1) INTO _depth;
    SELECT SUBSTRING_INDEX(_ident, '-', 1) INTO @base;
    WHILE _depth  < 1000 AND _count <> 0 DO 
      SELECT _depth + 1 INTO _depth;
      SELECT CONCAT(@base, "-", _depth) INTO _r;
      SELECT count(*) FROM entity WHERE ident = _r INTO _count;
      SELECT count(*) + _count FROM organisation WHERE ident = _r INTO _count;
    END WHILE;
  ELSE 
    WHILE _count <> 0 DO
      SELECT count(*) FROM entity WHERE ident = _r INTO _count;
      SELECT count(*) + _count FROM organisation WHERE ident = _r INTO _count;
      IF _count >0 THEN 
        SELECT _i + 1 INTO _i;
        SELECT CONCAT(_ident, _i) INTO _r;
      END IF;
    END WHILE;
  END IF;
  SELECT _r AS ident;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `unique_ident1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `unique_ident1`(
  _ident VARCHAR(200)
)
BEGIN
  DECLARE _r VARCHAR(1024);
  DECLARE _count TINYINT(8) DEFAULT 1;
  DECLARE _i TINYINT(6) DEFAULT 0;
  DECLARE _depth TINYINT(6) DEFAULT 0;
  
  SELECT _ident INTO _r;

  SELECT count(*) FROM entity WHERE ident = _r INTO _count;
  SELECT count(*) + _count FROM organisation WHERE ident = _r INTO _count;
  IF _ident regexp '[\_\-]\([0-9]+\)$' THEN 
    SELECT SUBSTRING_INDEX(_ident, '-', -1) INTO _depth;
    SELECT SUBSTRING_INDEX(_ident, '-', 1) INTO @base;
    WHILE _depth  < 1000 AND _count <> 0 DO 
      SELECT _depth + 1 INTO _depth;
      SELECT CONCAT(@base, "-", _depth) INTO _r;
      SELECT count(*) FROM entity WHERE ident = _r INTO _count;
      SELECT count(*) + _count FROM organisation WHERE ident = _r INTO _count;
    END WHILE;
  ELSE 
    WHILE _count <> 0 DO
      SELECT count(*) FROM entity WHERE ident = _r INTO _count;
      SELECT count(*) + _count FROM organisation WHERE ident = _r INTO _count;
      IF _count >0 THEN 
        SELECT _i + 1 INTO _i;
        SELECT CONCAT(_ident, _i) INTO _r;
      END IF;
    END WHILE;
  END IF;
  SELECT _r AS ident;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `unregister_user_with_device` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `unregister_user_with_device`(
  IN _device_id VARCHAR(200)
)
BEGIN
  UPDATE device_registation SET uid=NULL 
  WHERE device_id = _device_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_ident` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `update_ident`(
  IN _id              VARBINARY(16),
  IN _new_ident       VARCHAR(60)
)
BEGIN
  DECLARE _old_ident VARCHAR(60);
  DECLARE _type VARCHAR(40);
  DECLARE _domain VARCHAR(80);
  
  SELECT d.name FROM entity e INNER JOIN domain d on e.dom_id=d.id 
    WHERE e.id = _id INTO _domain;
  SELECT ident, `type` FROM entity WHERE id = _id INTO _old_ident, _type;
  START TRANSACTION;
    UPDATE entity SET ident=_new_ident, vhost=CONCAT(_new_ident, '.', _domain) WHERE ident=_old_ident;
    
    UPDATE vhost SET fqdn=CONCAT(_new_ident, '.', _domain) WHERE fqdn=CONCAT(_old_ident, '.', _domain);
    
  COMMIT;
  IF _type = "community" or _type = "hub" THEN
    SELECT entity.id, entity.ident, entity.mtime, entity.status, entity.type, entity.area,
    entity.vhost, entity.headline, entity.layout as fallback, entity.home_layout as home,
    entity.layout, entity.db_name, entity.db_host, entity.fs_host, entity.home_dir,
    entity.settings, hub.name, hub.permission, hub.dmail, hub.photo, hub.profile
    FROM entity INNER JOIN hub USING(id) WHERE entity.id = _id;
  ELSEIF _type = "drumate" THEN
    SELECT * FROM drumate_csv WHERE id=_id;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_member_status` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `update_member_status`(
  IN _drumate_id  VARCHAR(16),
  IN _status VARCHAR(25)
 )
BEGIN
    
    UPDATE entity SET status=_status WHERE id = _drumate_id;
    UPDATE entity SET `settings` = 
        JSON_SET(`settings`, CONCAT("$.status_date"), UNIX_TIMESTAMP()) WHERE id=_drumate_id;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_session` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `update_session`(
  IN sid VARCHAR(64),
  IN uid VARCHAR(16),
  IN uname VARCHAR(80),
  IN _host VARCHAR(16)
)
BEGIN

  DECLARE _now INT(12) DEFAULT 0;

  SELECT UNIX_TIMESTAMP() into _now;

  UPDATE sessions SET update_time=UNIX_TIMESTAMP(), 
    user_id=uid, username=uname, host_id=_host WHERE id=sid;
  IF uid != 'ffffffffffffffff' THEN
    UPDATE drumate SET connexion_time=_now WHERE id=uid;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_site` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `update_site`(
  IN _id VARBINARY(16),
  IN _ident VARCHAR(40),
  IN _name VARCHAR(40),
  IN _headline VARCHAR(255),
  IN _home VARCHAR(255),
  IN _description TEXT,
  IN _permission TINYINT(4),
  IN _domain VARCHAR(500),
  IN _area VARCHAR(20)
)
BEGIN
  DECLARE _type VARCHAR(40);
  DECLARE _old_ident VARCHAR(40);
  DECLARE _old_area VARCHAR(20);

  SELECT ident, area FROM site_csv WHERE id=_id INTO _old_ident, _old_area;
  IF _area='' or _area is NULL THEN
    SET @new_area = _old_area;
  else
    SET @new_area = _area;
  END IF;

  START TRANSACTION;
    UPDATE entity SET headline=_headline, ident=_ident, area=@new_area,
      vhost=CONCAT(ident, '.', _domain), home_layout=_home, mtime=unix_timestamp() WHERE id=_id;

    UPDATE community SET description=_description, cname=_name, permission=_permission WHERE id=_id;

    IF _ident != _old_ident AND _old_ident !='' THEN
      UPDATE `alias` SET ident=_ident, vhost=CONCAT(_ident, '.', _domain)
        WHERE id=_id AND vhost=CONCAT(_old_ident, '.', _domain);
      UPDATE `alias` SET ident=_ident, vhost=CONCAT(_ident, '.drume.net')
        WHERE id=_id AND vhost=CONCAT(_old_ident, '.drumee.net');
    END IF;
    SELECT * FROM site_view WHERE id=_id;
  COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_stripe_clock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `update_stripe_clock`(
    IN _clock_id VARCHAR(100),
    IN _flag  int
    
    )
BEGIN
  
    REPLACE INTO sys_conf (conf_key,conf_value) 
    SELECT 'stripe_testclock', _clock_id;

    REPLACE INTO sys_conf (conf_key,conf_value) 
    SELECT 'stripe_testclock_on', _flag;

    SELECT * from sys_conf WHERE conf_key IN ('stripe_testclock','stripe_testclock_on');

  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_unified_room` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `update_unified_room`(
  IN _id VARCHAR(16) CHARACTER SET ascii,
  IN _uid VARCHAR(30) CHARACTER SET ascii,
  IN _is_mic_enabled TINYINT ,
  IN _is_video_enabled TINYINT  ,
  IN _is_share_enabled TINYINT  ,
  IN _is_write_enabled TINYINT,
  IN _metadata json 
)
BEGIN
   
    UPDATE unified_room SET  
      is_mic_enabled =_is_mic_enabled,
      is_video_enabled =_is_video_enabled,
      is_share_enabled =_is_share_enabled,
      is_write_enabled =_is_write_enabled
    WHERE id  =_id AND uid =_uid;
    SELECT u.id, metadata, coalesce(guest_name, firstname) username FROM unified_room u 
      INNER JOIN socket s ON u.uid=s.id 
      INNER JOIN cookie c ON s.cookie=c.id
      LEFT JOIN drumate d on c.uid=d.id
    WHERE u.id =_id AND s.state='active'; 
    

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `update_user` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `update_user`(
  IN _id VARBINARY(16),
  IN _ident VARCHAR(40),
  IN _firstname VARCHAR(40),
  IN _lastname VARCHAR(40),
  IN _gender VARCHAR(10),
  IN _email VARCHAR(255),
  IN _headline VARCHAR(255),
  IN _home VARCHAR(255),
  IN _remit TINYINT(4),
  IN _domain VARCHAR(500)
)
BEGIN
  DECLARE _type VARCHAR(40);
  DECLARE _old_ident VARCHAR(40);

  SELECT ident FROM site_csv WHERE id=_id INTO _old_ident;

  START TRANSACTION;
    UPDATE entity SET headline=_headline, ident=_ident,
      vhost=CONCAT(ident, '.', _domain), home_layout=_home, mtime=unix_timestamp() WHERE id=_id;

    UPDATE drumate SET firstname=_firstname, lastname=_lastname, gender=_gender, email=_email,
      remit=if(_remit<0, remit, _remit) WHERE id=_id;

    IF _ident != _old_ident AND _old_ident !='' THEN
      UPDATE drumate SET dmail=CONCAT(_ident, '@', _domain)  WHERE id=_id;
      UPDATE `alias` SET ident=_ident, vhost=CONCAT(_ident, '.', _domain)
        WHERE id=_id AND vhost=CONCAT(_old_ident, '.', _domain);
      UPDATE `alias` SET ident=_ident, vhost=CONCAT(_ident, '.drume.net')
        WHERE id=_id AND vhost=CONCAT(_old_ident, '.drumee.net');
    END IF;
    SELECT * FROM drumate_view WHERE id=_id;
  COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `user_change_status` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `user_change_status`(
  IN _key VARCHAR(128),
  IN _status VARCHAR(16)
)
BEGIN
  UPDATE entity SET status=_status WHERE id=_key OR ident=_key;
  IF ROW_COUNT() THEN
    CALL get_user(_key);
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `user_count` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `user_count`(
)
BEGIN
  SELECT count(*) AS `count` FROM entity WHERE 
    `type`='drumate' AND `status` IN('active', 'locked');
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `user_list` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `user_list`(
  IN _sort_by VARCHAR(20),
  IN _order   VARCHAR(20),
  IN _page    TINYINT(4)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);
  SELECT 
    e.id,
    e.ident,
    remit,
    domain,
    d.email,
    e.ctime,
    TRIM(IFNULL(JSON_UNQUOTE(JSON_EXTRACT(profile, '$.lang')), '')) AS lang,
    TRIM(IFNULL(JSON_UNQUOTE(JSON_EXTRACT(profile, '$.avatar')), 'default')) AS avatar,
    e.status,
    d.profile,
    disk_usage(e.id) AS disk_usage,
    quota,
    category,
    firstname,
    lastname,
    concat(firstname, ' ', lastname) as fullname,
    _page as page
    FROM entity e INNER JOIN (drumate d) ON e.id=d.id
      WHERE `status` IN('active', 'locked') 
      
  ORDER BY 
    CASE WHEN LCASE(_sort_by) = 'date' and LCASE(_order) = 'asc' THEN e.ctime END ASC,
    CASE WHEN LCASE(_sort_by) = 'date' and LCASE(_order) = 'desc' THEN e.ctime END DESC,
    CASE WHEN LCASE(_sort_by) = 'name' and LCASE(_order) = 'asc' THEN fullname END ASC,
    CASE WHEN LCASE(_sort_by) = 'name' and LCASE(_order) = 'desc' THEN fullname END DESC,
    CASE WHEN LCASE(_sort_by) = 'ident' and LCASE(_order) = 'asc' THEN e.ident END ASC,
    CASE WHEN LCASE(_sort_by) = 'ident' and LCASE(_order) = 'desc' THEN e.ident END DESC,
    CASE WHEN LCASE(_sort_by) = 'email' and LCASE(_order) = 'asc' THEN d.email END ASC,
    CASE WHEN LCASE(_sort_by) = 'email' and LCASE(_order) = 'desc' THEN d.email END DESC
  LIMIT _offset, _range;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `user_sockets` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `user_sockets`(
  IN _arg JSON
)
BEGIN
  DECLARE _list JSON;
  DECLARE _i TINYINT(6) unsigned DEFAULT 0;

  IF JSON_TYPE(_arg) = 'ARRAY' THEN 
    SELECT _arg INTO _list;
  ELSE 
    SELECT JSON_ARRAY(_arg) INTO _list;
  END IF;
  SET @sx = "SELECT cookie, uid, id socket_id FROM socket WHERE `state`='active' AND `uid` IN (";
  SET @ending = NULL;
  WHILE _i < JSON_LENGTH(_list) DO 
    IF _i = JSON_LENGTH(_list) - 1 THEN 
      SET @ending = ")";
    ELSE
      SET @ending = ", ";
    END IF;
    SELECT CONCAT(@sx, QUOTE(get_json_array(_list, _i)), @ending) INTO @sx;
    SELECT _i + 1 INTO _i;
  END WHILE;
  
  IF @ending IS NOT NULL THEN 
    PREPARE stmtx FROM @sx;
    EXECUTE stmtx;
    DEALLOCATE PREPARE stmtx;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `utils_get_countries` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `utils_get_countries`(  
  IN _page INT(4),
  IN _length INT(4)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  IF _length IS NOT NULL THEN 
    SET @rows_per_page = _length;
  ELSE
    SET @rows_per_page = 20;
  END IF;
  CALL pageToLimits(_page, _offset, _range);
  select *,_page as `page` from countries ORDER BY `name` ASC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `utils_search_cities` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `utils_search_cities`(
  IN _name VARCHAR(80),
  IN _page INT(4)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);
  SELECT 
    DISTINCT c.name city_name ,_page as `page`
  FROM cities c 
  WHERE TRIM("'" FROM c.name) LIKE CONCAT(_name, "%") ORDER BY `city_name` 
  ASC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `utils_search_countries` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `utils_search_countries`(  
  IN _name VARCHAR(40),
  IN _page INT(4)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);
  SELECT * ,_page as `page` FROM countries WHERE 
  `name` LIKE CONCAT("%", _name, "%") 
  ORDER BY `name` ASC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `vhost_exists` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `vhost_exists`(
  IN _key VARCHAR(1000)
)
BEGIN
  SELECT * FROM vhost WHERE fqdn = _key;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `watermark` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `watermark`(
  IN _type VARCHAR(10)
)
BEGIN
  SELECT COUNT(*) AS en FROM entity WHERE area='pool' AND  type = _type;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `wipe_user_desk` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `wipe_user_desk`(
    IN _id VARCHAR(16)
    )
BEGIN
    DECLARE _user_db VARCHAR(100);

    SELECT db_name FROM yp.entity WHERE id = _id INTO _user_db;

    SELECT  NULL, NULL,NULL,NULL,NULL  INTO 
    @home_id , @chat_upload_is,  @chat_id , @ticket_id,@wicket_id;

 
    SELECT h.id FROM 
      yp.hub h INNER JOIN yp.entity e on e.id=h.id
    WHERE h.owner_id=_id AND `serial`=0
    INTO @wicket_id;

    SET @s = CONCAT("SELECT id  from `", _user_db, 
      "`.media WHERE  parent_id='0' INTO @home_id");
    PREPARE stmt FROM @s  ;
    EXECUTE stmt ;
    DEALLOCATE PREPARE stmt;

    SET @s = CONCAT("SELECT `", _user_db, 
      "`.node_id_from_path('/__chat__/__upload__') INTO @chat_upload_id");
    PREPARE stmt FROM @s  ;
    EXECUTE stmt ;
    DEALLOCATE PREPARE stmt;


    SET @s = CONCAT("SELECT `", _user_db, 
      "`.node_id_from_path('/__chat__/') INTO @chat_id");
    PREPARE stmt FROM @s  ;
    EXECUTE stmt ;
    DEALLOCATE PREPARE stmt;


    SET @s = CONCAT("SELECT `", _user_db, 
      "`.node_id_from_path('/__ticket__/') INTO @ticket_id");
    PREPARE stmt FROM @s  ;
    EXECUTE stmt ;
    DEALLOCATE PREPARE stmt;


    SET @s = CONCAT("DELETE FROM ", _user_db, 
      ".media WHERE id <> IFNULL(@home_id, '-99') 
      AND id <> IFNULL(@chat_upload_id, '-99') 
      AND id <> IFNULL(@chat_id, '-99') 
      AND id <> IFNULL(@wicket_id, '-99')
      AND id <> IFNULL(@ticket_id, '-99' ) ");
    PREPARE stmt FROM @s ; 
    EXECUTE stmt ;
    DEALLOCATE PREPARE stmt;


    SET @s = CONCAT("DELETE FROM ", _user_db, 
      ".trash_media ");
    PREPARE stmt FROM @s ; 
    EXECUTE stmt ;
    DEALLOCATE PREPARE stmt;

    SELECT  NULL, NULL,NULL,NULL,NULL  INTO 
    @home_id , @chat_upload_is,  @chat_id , @ticket_id,@wicket_id;
    
  
  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `wipe_user_renewal` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `wipe_user_renewal`(
    IN _id VARCHAR(16)
    )
BEGIN
    DELETE  FROM yp.renewal WHERE entity_id = _id;

  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `wipe_wicket` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `wipe_wicket`(
    IN _id VARCHAR(16)
    )
BEGIN
    DECLARE _wicket_db VARCHAR(100);
    DECLARE _home_id VARCHAR(16) CHARACTER SET ascii; 
    DECLARE _chat_upload_id VARCHAR(16) CHARACTER SET ascii; 
    DECLARE _chat_id VARCHAR(16) CHARACTER SET ascii; 
    DECLARE _ticket_id VARCHAR(16) CHARACTER SET ascii; 
    SELECT db_name FROM yp.entity WHERE id = _id INTO _wicket_db;

    SET @s = CONCAT("SELECT `", _wicket_db, 
      "`.node_id_from_path('/__chat__/__upload__') INTO ?");
    PREPARE stmt FROM @s  ;
    EXECUTE stmt USING _chat_upload_id;
    DEALLOCATE PREPARE stmt;

SELECT _chat_upload_id;
    
    
    
    

    

  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `wipe_wicket_hub` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `wipe_wicket_hub`(
    IN _id VARCHAR(16)
    )
BEGIN
    DECLARE _wicket_db VARCHAR(100);
    SELECT db_name FROM yp.entity WHERE id = _id INTO _wicket_db;

  
    SELECT  NULL, NULL,NULL,NULL  INTO 
    @home_id , @chat_upload_is,  @chat_id , @ticket_id;

    SET @s = CONCAT("SELECT id  from `", _wicket_db, 
      "`.media WHERE  parent_id='0' INTO @home_id");
    PREPARE stmt FROM @s  ;
    EXECUTE stmt ;
    DEALLOCATE PREPARE stmt;

    SET @s = CONCAT("SELECT `", _wicket_db, 
      "`.node_id_from_path('/__chat__/__upload__') INTO @chat_upload_id");
    PREPARE stmt FROM @s  ;
    EXECUTE stmt ;
    DEALLOCATE PREPARE stmt;


    SET @s = CONCAT("SELECT `", _wicket_db, 
      "`.node_id_from_path('/__chat__/') INTO @chat_id");
    PREPARE stmt FROM @s  ;
    EXECUTE stmt ;
    DEALLOCATE PREPARE stmt;


    SET @s = CONCAT("SELECT `", _wicket_db, 
      "`.node_id_from_path('/__ticket__/') INTO @ticket_id");
    PREPARE stmt FROM @s  ;
    EXECUTE stmt ;
    DEALLOCATE PREPARE stmt;


    SET @s = CONCAT("DELETE FROM ", _wicket_db, 
      ".media WHERE id <> IFNULL(@home_id, '-99') AND id <> IFNULL(@chat_upload_id, '-99') And id <> IFNULL(@chat_id, '-99') And id <> IFNULL(@ticket_id, '-99' ) ");
    
    PREPARE stmt FROM @s ; 
    EXECUTE stmt ;
    DEALLOCATE PREPARE stmt;

    SELECT  NULL, NULL,NULL,NULL  INTO 
    @home_id , @chat_upload_is,  @chat_id , @ticket_id;

  
  END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_add_guest` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_add_guest`(
  IN _email         VARCHAR(500),
  IN _firstname     VARCHAR(200),
  IN _lastname      VARCHAR(200),
  IN _expiry_time   INT(11)         
)
BEGIN
  DECLARE _ts INT(11) DEFAULT 0; 
  DECLARE _ctime INT(11) ; 
  DECLARE _id           VARCHAR(16) ; 
  SELECT UNIX_TIMESTAMP() ,UNIX_TIMESTAMP() INTO _ts,_ctime;
  SELECT yp.uniqueId() INTO _id;
  SELECT id , ctime FROM guest WHERE email = _email INTO _id ,_ctime;
  REPLACE INTO guest (sys_id,id,email,firstname,lastname,expiry_time,ctime,utime ) SELECT  NULL, _id,_email,_firstname,_lastname,_expiry_time,_ctime,_ts ;
  SELECT * FROM guest WHERE id = _id;
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_add_non_drumate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_add_non_drumate`(
  IN _email         VARCHAR(500),
  IN _firstname     VARCHAR(200),
  IN _lastname      VARCHAR(200),
  IN _mobile        VARCHAR(40),
  IN _extra         MEDIUMTEXT,
  IN _privilege     VARCHAR(50),
  IN _action        VARCHAR(50),
  IN _entity_id     VARCHAR(100),
  IN _item_id       VARCHAR(100),
  IN _expiry_time   INT(11)
)
BEGIN
  DECLARE _id   VARBINARY(16) DEFAULT '';
  DECLARE duplicate_key CONDITION FOR 1062;
  DECLARE _ts INT(11) DEFAULT 0;
  DECLARE _last INT(11) DEFAULT 0;
  DECLARE _token VARCHAR(255);
  DECLARE EXIT HANDLER FOR duplicate_key
  BEGIN
    SELECT sys_id FROM non_drumate WHERE email = _email AND `action` = _action
      AND entity_id = _entity_id AND item_id = _item_id INTO _id;
    UPDATE non_drumate SET firstname = _firstname, lastname = _lastname, mobile = _mobile,
      extra = IF(IFNULL(_extra, "") = "", "{}", _extra),
      privilege = _privilege, token = _token, expiry_time = IF(IFNULL(_expiry_time, 0) = 0, 0,
      UNIX_TIMESTAMP(TIMESTAMPADD(HOUR,_expiry_time, FROM_UNIXTIME(_ts)))), ctime = _ts
      WHERE sys_id = _id;
    SELECT * FROM non_drumate WHERE id = _id;
  END;
  SELECT yp.uniqueId() INTO _id;
  SELECT UNIX_TIMESTAMP() INTO _ts;
  SELECT SHA1(UUID()) INTO _token;
  INSERT INTO non_drumate VALUES (NULL, _id, _email, _firstname, _lastname,
    _mobile, IF(IFNULL(_extra, "") = "", "{}", _extra),
    _privilege, _token, _action, _entity_id, _item_id, IF(IFNULL(_expiry_time, 0) = 0, 0,
    UNIX_TIMESTAMP(TIMESTAMPADD(HOUR,_expiry_time, FROM_UNIXTIME(_ts)))), _ts);
  SELECT LAST_INSERT_ID() INTO _last;
  SELECT * FROM non_drumate WHERE sys_id = _last;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_add_share_guest` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_add_share_guest`(
  IN _hub_id VARCHAR(16),
  IN _expiry_time INT(11),
  IN _permission TINYINT(4),
  IN _email      VARCHAR(512)
)
BEGIN
  DECLARE _ts INT(11) DEFAULT 0;
  DECLARE _tx INT(11) DEFAULT 0;
 

  SELECT UNIX_TIMESTAMP() INTO _ts;
  SELECT IF(IFNULL(_expiry_time, 0) = 0, 0,
    UNIX_TIMESTAMP(TIMESTAMPADD(HOUR,_expiry_time, FROM_UNIXTIME(_ts)))) INTO _tx;
  INSERT IGNORE INTO share_guest (hub_id,email,permission,expiry_time) VALUES(_hub_id,_email,_permission,_tx)
      ON DUPLICATE KEY UPDATE permission=@perm, expiry_time = _tx ;
  SELECT * FROM share_guest WHERE hub_id = _hub_id AND email=_email;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_add_validation_code` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_add_validation_code`(
  IN _id            VARCHAR(16),
  IN _action        VARCHAR(100),
  IN _expiry_time   INT(11) UNSIGNED
)
BEGIN
  DECLARE duplicate_key CONDITION FOR 1062;
  DECLARE _ts INT(11) DEFAULT 0;
  DECLARE _last INT(11) DEFAULT 0;
  DECLARE _code VARCHAR(255);
  DECLARE EXIT HANDLER FOR duplicate_key
  BEGIN
    SELECT sys_id FROM validation_code WHERE id = _id AND `action` = _action INTO _last;
    UPDATE validation_code SET code = _code, expiry_time = IF(IFNULL(_expiry_time, 0) = 0, 0,
      UNIX_TIMESTAMP(TIMESTAMPADD(MINUTE,_expiry_time, FROM_UNIXTIME(_ts)))), ctime = _ts
      WHERE sys_id = _last;
    SELECT * FROM validation_code WHERE sys_id = _last;
  END;
  SELECT UNIX_TIMESTAMP() INTO _ts;
  SELECT IF (_action= 'forgot_password',sha2(uuid(),224), FLOOR(100000 + (RAND() * 899999))) INTO _code;
  INSERT INTO validation_code VALUES (NULL, _id, _action, _code, IF(IFNULL(_expiry_time, 0) = 0, 0,
    UNIX_TIMESTAMP(TIMESTAMPADD(MINUTE,_expiry_time, FROM_UNIXTIME(_ts)))), _ts);
  SELECT LAST_INSERT_ID() INTO _last;
  SELECT * FROM validation_code WHERE sys_id = _last;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_change_hub_status` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_change_hub_status`(
  IN _user_id   VARBINARY(16),
  IN _key       VARCHAR(255),
  IN _perm      INT(4),
  IN _status    VARCHAR(100)
)
BEGIN
  DECLARE _db_name VARCHAR(20);
  SET @p=0;
  SELECT `db_name` FROM entity WHERE ident=_key OR id=_key INTO _db_name;
  SET @s = CONCAT("SELECT privilege&", _perm, " FROM `", 
    _db_name, "`.`huber` WHERE id='", _user_id, "' INTO @p");
  PREPARE stmt FROM @s;
  EXECUTE stmt;
  DEALLOCATE PREPARE stmt;
  IF @p > 0 THEN
    UPDATE entity e SET status = _status WHERE db_name = _db_name;
  END IF;
  SELECT @p AS valid_user;
  
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_check_code_validity` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_check_code_validity`(
  IN _id            VARCHAR(16),
  IN _action        VARCHAR(100),
  IN _code          VARCHAR(255)
)
BEGIN
   SELECT EXISTS (SELECT id FROM validation_code WHERE id = _id AND
    action = _action AND code = _code  AND  expiry_time>=UNIX_TIMESTAMP() ) AS valid;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_check_language_available` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_check_language_available`(
  IN _locale       VARCHAR(100)
)
BEGIN
  DECLARE _language_count INT(11) DEFAULT 0;
  SELECT COUNT(*) FROM language WHERE state = 'active' AND lcid = _locale INTO _language_count;
  IF _language_count > 0 THEN
    SELECT 1 AS available;
  ELSE
    SELECT 0 AS available;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_delete_completed_validation_code` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_delete_completed_validation_code`(
  IN _id            VARCHAR(16),
  IN _action        VARCHAR(100),
  IN _code          VARCHAR(255)
)
BEGIN
  DELETE FROM validation_code WHERE id = _id AND  action = _action AND code = _code ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_delete_expired_guest` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_delete_expired_guest`()
BEGIN
  DELETE FROM guest WHERE (expiry_time <> 0 AND expiry_time < UNIX_TIMESTAMP());
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_delete_expired_non_drumate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_delete_expired_non_drumate`()
BEGIN
  DELETE FROM non_drumate WHERE (expiry_time <> 0 AND expiry_time < UNIX_TIMESTAMP());
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_delete_expired_validation_code` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_delete_expired_validation_code`()
BEGIN
  DELETE FROM validation_code WHERE (expiry_time <> 0 AND expiry_time < UNIX_TIMESTAMP());
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_find_city` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_find_city`(
  IN _pattern VARCHAR(84),
  IN _cc_iso VARCHAR(80)
)
BEGIN
  IF _cc_iso='' OR _cc_iso IS NULL THEN
    select city.id, name_utf8, fr, en, region, IF(name_ascii = _pattern, 1, 0) AS relevance
    from city join country using(cc_iso)
    WHERE name_ascii = _pattern OR name_ascii LIKE concat(_pattern, "%") ORDER BY relevance DESC LIMIT 30;
  ELSE
    select city.id, name_utf8, fr, en, region, IF(name_ascii = _pattern, 1, 0) AS relevance
    from city join country using(cc_iso)
    WHERE cc_iso=_cc_iso AND (name_ascii = _pattern OR name_ascii LIKE concat(_pattern, "%"))
    ORDER BY relevance DESC LIMIT 30;
  END IF;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_find_country` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_find_country`(
  IN _pattern VARCHAR(84)
)
BEGIN

  select *, MATCH(`fr`, `en`) against(concat(_pattern, '*') IN BOOLEAN MODE) as relevance
  from country having relevance > 1 ORDER BY relevance DESC LIMIT 30;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_find_language` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_find_language`(
  IN _pattern VARCHAR(84)
)
BEGIN

  select *, if(locale='', locale_en, concat (locale_en, ' - ', locale)) as content
  from `language` WHERE locale LIKE concat("%", _pattern, "%") or locale_en LIKE concat("%", _pattern, "%")
  LIMIT 20;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_get_cities` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_get_cities`(
  IN _country_id INT(11),
  IN _page INT(4)
)
BEGIN
  DECLARE _range bigint;
  DECLARE _offset bigint;
  CALL pageToLimits(_page, _offset, _range);
  SELECT c.*,_page as `page` FROM cities c INNER JOIN states s ON s.id=c.id INNER JOIN countries co
    ON co.id=_country_id ORDER BY `name` ASC LIMIT _offset, _range;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_get_countries` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_get_countries`()
BEGIN
  select * from countries ORDER BY `name` ASC;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_get_expired_frozen_languages` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_get_expired_frozen_languages`()
BEGIN
  SELECT fl.sys_id as id, fl.hub_id, fl.dbase_name, fl.root_path, fl.job_id, fl.lang, fl.ctime,
    jc.app_key, jc.customer_key, jc.user_id
    FROM frozen_language fl INNER JOIN job_credential jc ON jc.job_id = fl.job_id
    WHERE UNIX_TIMESTAMP(TIMESTAMPADD(DAY,7, FROM_UNIXTIME(fl.ctime))) < UNIX_TIMESTAMP();
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_get_share_guest` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_get_share_guest`(
    IN _email      VARCHAR(512)
)
BEGIN
  SELECT * FROM share_guest WHERE email = _email;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_notification_accept` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_notification_accept`(
  IN _rid VARCHAR(16),
  IN _eid VARCHAR(16)
)
BEGIN
    DECLARE _ts INT(11) DEFAULT 0;
    SELECT UNIX_TIMESTAMP() INTO _ts;
    UPDATE notification 
    SET status= 'accept',utime=_ts
    WHERE resource_id=_rid AND entity_id=_eid;
    SELECT owner_id,resource_id,entity_id,message,permission,status, 
    CASE WHEN expiry_time = 0 THEN 0 ELSE ((expiry_time - UNIX_TIMESTAMP())/3600) END  as expiry_time
    FROM notification WHERE resource_id=_rid AND entity_id=_eid;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_notification_count` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_notification_count`(
  IN _eid VARCHAR(16)
 )
BEGIN
    DECLARE _db_name VARCHAR(512);
    DECLARE _sys_id int(11);
    DECLARE _resource_id varchar(512);
   

    DROP TABLE IF EXISTS  _temp_notification;
    CREATE TEMPORARY TABLE `_temp_notification` (
        `sys_id` int(11) unsigned NOT NULL ,
        `owner_id` varchar(16) NOT NULL,
        `resource_id` varchar(16) NOT NULL,
        `db_name` varchar(512) NOT NULL,
        `vhost` varchar(512),
        `hub_id` varchar(16) NOT NULL,
        `user_filename` varchar(512)  NULL,
        `category`  varchar(16)  NULL,
        `is_checked` boolean default 0
        );
       
    INSERT INTO _temp_notification
    SELECT   
        n.sys_id,
        n.owner_id,
        n.resource_id,
        e.db_name,
        e.vhost,
        e.id,
        null,null,0
    FROM 
        notification n
        INNER JOIN yp.hub sb on sb.owner_id =n.owner_id
        INNER JOIN entity e on e.id = sb.id  AND  e.area='restricted' 
    WHERE
        n.status = 'receive' 
        AND entity_id = _eid
        AND (expiry_time = 0 OR expiry_time > UNIX_TIMESTAMP());
    
    SELECT sys_id, resource_id, db_name 
    FROM _temp_notification WHERE  user_filename is null limit 1 
    INTO _sys_id, _resource_id,_db_name; 

    
    WHILE _sys_id IS NOT NULL DO
        
        SET @sql = CONCAT(    
            'SELECT user_filename,category FROM ' ,
            _db_name ,'.media where id =',QUOTE( _resource_id),'  INTO @user_filename ,@category'            
        );
       
       PREPARE stmt FROM @sql ;
       EXECUTE stmt;
       DEALLOCATE PREPARE stmt;

       UPDATE _temp_notification SET
        user_filename = @user_filename, 
        category = @category,
        is_checked = 1
       WHERE sys_id =_sys_id;
       SELECT NULL INTO _sys_id ;
       SELECT sys_id,resource_id, db_name 
       FROM _temp_notification WHERE  is_checked = 0  limit 1 
       INTO _sys_id, _resource_id,_db_name; 
        
    END WHILE;

    DELETE FROM _temp_notification WHERE user_filename IS NULL;

    SELECT count(sys_id) count  FROM _temp_notification ; 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_notification_next` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_notification_next`(
  IN _oid VARCHAR(16),  
  IN _rid VARCHAR(16),
  IN _uid VARCHAR(16),
  IN _share_id VARCHAR(50),
  IN _expiry_time INT(11),
  IN _permission TINYINT(4),
  IN _msg mediumtext
)
BEGIN

  DECLARE _ts INT(11) DEFAULT 0;
  DECLARE _tx INT(11) DEFAULT 0;

  SELECT UNIX_TIMESTAMP() INTO _ts;
  SELECT cast(_permission as unsigned) INTO @perm;

  SELECT IF(IFNULL(_expiry_time, 0) = 0, 0,
    UNIX_TIMESTAMP(TIMESTAMPADD(HOUR,_expiry_time, FROM_UNIXTIME(_ts)))) INTO _tx;


  INSERT IGNORE INTO notification
    VALUES(null,_share_id,_oid,_rid, _uid, _msg, _tx,  @perm,'receive',_ts, _ts )
    ON DUPLICATE KEY UPDATE permission=@perm, utime=_ts, expiry_time = _tx,message=_msg,
    status =  CASE WHEN status = 'accept' THEN  'change' ELSE 'receive' END,sys_id=last_insert_id(sys_id)  ;
  SELECT * FROM  notification WHERE sys_id= LAST_INSERT_ID();
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_notification_receive_list` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_notification_receive_list`(
  IN _eid VARCHAR(16)
 )
BEGIN
    DECLARE _db_name VARCHAR(512);
    DECLARE _sys_id int(11);
    DECLARE _resource_id varchar(512);
   

    DROP TABLE IF EXISTS  _temp_notification;
    CREATE TEMPORARY TABLE `_temp_notification` (
        `sys_id` int(11) unsigned NOT NULL ,
        `owner_id` varchar(16) NOT NULL,
        `resource_id` varchar(16) NOT NULL,
        `db_name` varchar(512) NOT NULL,
        `vhost` varchar(512),
        `hub_id` varchar(16) NOT NULL,
        `user_filename` varchar(512)  NULL,
        `category`  varchar(16)  NULL,
        `is_checked` boolean default 0
        );
       
    INSERT INTO _temp_notification
    SELECT   
        n.sys_id,
        n.owner_id,
        n.resource_id,
        e.db_name,
        e.vhost,
        e.id,
        null,null,0
    FROM 
        notification n
        INNER JOIN yp.hub sb on sb.owner_id =n.owner_id
        INNER JOIN entity e on e.id = sb.id AND  e.area='restricted' 
    WHERE
        n.status = 'receive' 
        AND entity_id = _eid
        AND (expiry_time = 0 OR expiry_time > UNIX_TIMESTAMP());
    
    SELECT sys_id, resource_id, db_name 
    FROM _temp_notification WHERE  user_filename is null limit 1 
    INTO _sys_id, _resource_id,_db_name; 

    
    WHILE _sys_id IS NOT NULL DO
        
        SET @sql = CONCAT(    
            'SELECT user_filename,category FROM ' ,
            _db_name ,'.media where id =',QUOTE( _resource_id),'  INTO @user_filename ,@category'            
        );
       
       PREPARE stmt FROM @sql ;
       EXECUTE stmt;
       DEALLOCATE PREPARE stmt;

       UPDATE _temp_notification SET
        user_filename = @user_filename, 
        category = @category,
        is_checked = 1
       WHERE sys_id =_sys_id;
       SELECT NULL INTO _sys_id ;
       SELECT sys_id,resource_id, db_name 
       FROM _temp_notification WHERE  is_checked = 0  limit 1 
       INTO _sys_id, _resource_id,_db_name; 
        
    END WHILE;

    DELETE FROM _temp_notification WHERE user_filename IS NULL;

    SELECT 
        n.resource_id as nid,
        t.user_filename,
        t.category,
        n.owner_id as uid,
        t.hub_id,
        t.vhost,
        n.message,
        CASE 
            WHEN expiry_time = 0 THEN  NULL
            WHEN (expiry_time - UNIX_TIMESTAMP()) < 86400  THEN 0
            WHEN (expiry_time - UNIX_TIMESTAMP()) > 86400  THEN FLOOR((expiry_time - UNIX_TIMESTAMP())/86400)
        END days, 
        CASE 
            WHEN expiry_time = 0 THEN  NULL
            WHEN 
            (expiry_time - UNIX_TIMESTAMP()) > 0   THEN CEIL(MOD((expiry_time - UNIX_TIMESTAMP()),86400)/3600)  
            WHEN (expiry_time - UNIX_TIMESTAMP()) > 0  THEN 0
        END hours ,
        d.firstname,
        d.email
    FROM
    notification n 
    INNER JOIN _temp_notification t on t.sys_id = n.sys_id
    INNER JOIN drumate d on d.id = n.owner_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_notification_remove` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_notification_remove`(
  IN _rid VARCHAR(16),
  IN _eid VARCHAR(16)
)
BEGIN
  
  IF _eid != '' THEN
    DELETE FROM notification WHERE resource_id=_rid AND entity_id=_eid;
  ELSE
    DELETE FROM notification WHERE resource_id=_rid;
  END IF;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_remove_guest` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_remove_guest`(
  IN _key          VARCHAR(200)
 )
BEGIN
  DELETE FROM guest WHERE (id = _key OR email = _key) ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `yp_remove_non_drumate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `yp_remove_non_drumate`(
  IN _id          VARCHAR(200),
  IN _action      VARCHAR(50),
  IN _entity_id   VARCHAR(100),
  IN _item_id     VARCHAR(100)
)
BEGIN
  DELETE FROM non_drumate WHERE (id = _id OR email = _id) AND `action` = _action
    AND entity_id = _entity_id AND item_id = _item_id;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
/*!50003 DROP PROCEDURE IF EXISTS `__show` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
DELIMITER ;;
CREATE PROCEDURE `__show`(
  IN _key VARCHAR(512)
)
BEGIN
  DECLARE _type VARCHAR(20);
  SELECT type FROM entity  WHERE ident=_key OR id=_key OR vhost=_key INTO _type;

  IF _type = 'drumate' THEN 
    SELECT 
      e.id,
      sb.id AS sb_id,
      ident,
      vhost,
      db_name,
      (SELECT db_name FROM entity WHERE id=sb.owner_id) AS sb_db,
      domain,
      home_dir   
    FROM entity e LEFT JOIN share_box sb ON sb.owner_id=e.id 
    WHERE ident=_key OR e.id=_key OR vhost=_key;
  ELSE 
    SELECT
      id,
      ident,
      vhost,
      db_name,
      domain,
      home_dir   
    FROM entity WHERE ident=_key OR id=_key OR vhost=_key;
  END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

